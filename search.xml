<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>夏天的尾巴</title>
      <link href="/posts/39f10c9/"/>
      <url>/posts/39f10c9/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>夏天的尾巴</p><p></p>        <div id="aplayer-SASQmBav" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;"></div>  <script>  var options = {"narrow":false,"autoplay":false,"showlrc":3,"music":[{"title":"Summer","author":"久石譲","url":"http://music.163.com/song/media/outer/url?id=421244551.mp3","pic":"http://p2.music.126.net/nOhFczgnXcBbCSn6uLhmPg==/18416819765513414.jpg","lrc":"Summer.txt"},{"title":"夏日漱石","author":"zbq","url":"http://music.163.com/song/media/outer/url?id=1839751216.mp3","pic":"http://p1.music.126.net/ITQ5uNilhAi0TCMMcV84lA==/109951165839086793.jpg","lrc":"夏日漱石.txt"}]};  options.element = document.getElementById("aplayer-SASQmBav");  var ap = new APlayer(options);    window.aplayers || (window.aplayers = []);  window.aplayers.push(ap);  </script>]]></content>
      
      
      <categories>
          
          <category> 小记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>可能</title>
      <link href="/posts/d37a8023/"/>
      <url>/posts/d37a8023/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>一切皆有可能<br>只是不甘愿就此放弃<br>除了行动<br>别无他法<br>除了自己<br>无人可用<br>除了可能<br>顺其自然</p>]]></content>
      
      
      <categories>
          
          <category> 小记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>毕业歌</title>
      <link href="/posts/4ceffa48/"/>
      <url>/posts/4ceffa48/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>毕业歌</p><p></p>        <div id="aplayer-KxcKhgyl" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;"></div>  <script>  var options = {"narrow":false,"autoplay":false,"showlrc":3,"music":[{"title":"那些花儿","author":"朴树","url":"http://music.163.com/song/media/outer/url?id=139392.mp3","pic":"https://p2.music.126.net/j1EJGPJ0WaudM0DBSDCY8w==/109951168111041972.jpg","lrc":"那些花儿.txt"},{"title":"心愿","author":"四个女生","url":"http://music.163.com/song/media/outer/url?id=379785.mp3","pic":"https://p1.music.126.net/-QgrpnBhavRcLtaBaad5Lw==/52776558150270.jpg","lrc":"心愿.txt"},{"title":"亲爱的旅人","author":"周深","url":"http://music.163.com/song/media/outer/url?id=1371939273.mp3","pic":"https://p1.music.126.net/1YrCPOBV314i-mTtlDg8mQ==/109951164148664637.jpg","lrc":"亲爱的旅人.txt"}]};  options.element = document.getElementById("aplayer-KxcKhgyl");  var ap = new APlayer(options);    window.aplayers || (window.aplayers = []);  window.aplayers.push(ap);  </script>]]></content>
      
      
      <categories>
          
          <category> 小记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>五月十九</title>
      <link href="/posts/3bg0h340/"/>
      <url>/posts/3bg0h340/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p style="font-size:33px;">四周年快乐！💕💕💐💐</p><div style="font-size:32px;background: #ff5f6d;background: -webkit-linear-gradient(to left, #ff5f6d, #ffc371); background: linear-gradient(to left, #ff5f6d, #ffc371); -webkit-background-clip: text;color: transparent;"><p>#素敵なお知らせから4年# ​​​</p><img src="/posts/3bg0h340/4.webp" class=""> </div>]]></content>
      
      
      <categories>
          
          <category> 小记 </category>
          
          <category> 纪念 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 纪念 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>I Swear</title>
      <link href="/posts/4ef984e1/"/>
      <url>/posts/4ef984e1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>I swear by the moon and the stars in the sky.</p><p></p>        <div id="aplayer-iuImUqYP" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;"></div>  <script>  var options = {"narrow":false,"autoplay":false,"showlrc":3,"music":[{"title":"I Swear","author":"All-4-One","url":"http://music.163.com/song/media/outer/url?id=3884368.mp3","pic":"http://p1.music.126.net/TOZcfDrdOAICd-m9_Krg8A==/807041534832935.jpg","lrc":"i swear.txt"}]};  options.element = document.getElementById("aplayer-iuImUqYP");  var ap = new APlayer(options);    window.aplayers || (window.aplayers = []);  window.aplayers.push(ap);  </script>]]></content>
      
      
      <categories>
          
          <category> 小记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小众软件</title>
      <link href="/posts/a31a808a/"/>
      <url>/posts/a31a808a/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="一些小众软件"><a href="#一些小众软件" class="headerlink" title="一些小众软件"></a>一些小众软件</h2><h3 id="天气"><a href="#天气" class="headerlink" title="天气"></a>天气</h3><ul><li><strong>Breezy Weather</strong><ul><li>介绍：Breezy Weather（微风天气）是一款高度注重设计的天气应用，拥有简洁干净的用户体验、流畅的动画效果，整体采用 Material Design 风格，同时具备高度的可定制性。</li><li>特点：简洁轻量无广、支持小时级天气预报、天气信息丰富、开源。</li><li>官网：<a href="https://github.com/breezy-weather/breezy-weather">https://github.com/breezy-weather/breezy-weather</a></li><li>下载地址：<a href="https://github.com/breezy-weather/breezy-weather/releases">https://github.com/breezy-weather/breezy-weather/releases</a></li><li>其他：只支持 Android</li><li>截图：<div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"b1.jpg","alt":"","title":""},{"url":"b2.jpg","alt":"","title":""},{"url":"b3.jpg","alt":"","title":""}]</div>  </div></li></ul></li></ul><h3 id="播客"><a href="#播客" class="headerlink" title="播客"></a>播客</h3><ul><li><strong>AntennaPod</strong><ul><li>介绍：AntennaPod 是一款完全开放的播客播放器。</li><li>特点：简洁轻量无广、功能强大、支持多种方式订阅播客（包括在线搜索订阅、RSS 订阅、导入订阅等）、支持同步、离线下载、导出订阅、收听统计、开源。</li><li>官网：<a href="https://antennapod.org/">https://antennapod.org/</a></li><li>开源地址：<a href="https://github.com/AntennaPod/AntennaPod">https://github.com/AntennaPod/AntennaPod</a></li><li>下载地址：<a href="https://antennapod.org/download/">https://antennapod.org/download/</a></li><li>播客推荐：<ul><li>中文播客榜：<a href="https://xyzrank.com/#/">https://xyzrank.com/#/</a></li><li>pod：<a href="https://pod.link/">https://pod.link/</a></li><li>热门播客：<a href="https://cn.chartoo.com/itunes/toppodcasts">https://cn.chartoo.com/itunes/toppodcasts</a></li><li>中文独立播客：<a href="https://typlog.com/podlist/">https://typlog.com/podlist/</a></li><li>播客 RSS：<a href="https://getpodcast.xyz/">https://getpodcast.xyz/</a></li></ul></li><li>其他：只支持 Android</li><li>截图：<div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"a1.jpg","alt":"","title":""},{"url":"a2.jpg","alt":"","title":""},{"url":"a3.jpg","alt":"","title":""}]</div>  </div></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> 播客 </tag>
            
            <tag> 天气 </tag>
            
            <tag> 音乐 </tag>
            
            <tag> 游戏 </tag>
            
            <tag> RSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>跟风</title>
      <link href="/posts/2508b798/"/>
      <url>/posts/2508b798/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>跟风</p><p></p>        <div id="aplayer-ykyEWnKe" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;"></div>  <script>  var options = {"narrow":false,"autoplay":false,"showlrc":3,"music":[{"title":"一点","author":"Muyoi / 徐梦洁","url":"http://music.163.com/song/media/outer/url?id=2686266146.mp3","pic":"https://p2.music.126.net/PiSqUS2bxc9x2Zbz2vt4sQ==/109951170099752710.jpg","lrc":"一点.txt"},{"title":"面会菜","author":"林生祥 / 张有志","url":"http://music.163.com/song/media/outer/url?id=2084105618.mp3","pic":"http://p1.music.126.net/X_Rn-rQjeE1uky9dQkMH-Q==/109951167545270532.jpg","lrc":"面会菜.txt"}]};  options.element = document.getElementById("aplayer-ykyEWnKe");  var ap = new APlayer(options);    window.aplayers || (window.aplayers = []);  window.aplayers.push(ap);  </script>]]></content>
      
      
      <categories>
          
          <category> 小记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>原点</title>
      <link href="/posts/b1be357/"/>
      <url>/posts/b1be357/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>是啊，回到了原点。但是没看到十字路口，该怎么办呢？</p><p></p>        <div id="aplayer-lcytSNiz" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;"></div>  <script>  var options = {"narrow":false,"autoplay":false,"showlrc":3,"music":[{"title":"闪亮的日子","author":"钟志刚","url":"http://music.163.com/song/media/outer/url?id=198509.mp3","pic":"https://p2.music.126.net/IB2Qlp9ITguzRjXuA1E0mQ==/109951167917235260.jpg","lrc":"闪亮的日子.txt"}]};  options.element = document.getElementById("aplayer-lcytSNiz");  var ap = new APlayer(options);    window.aplayers || (window.aplayers = []);  window.aplayers.push(ap);  </script>]]></content>
      
      
      <categories>
          
          <category> 小记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>本地部署DeepSeek</title>
      <link href="/posts/16406/"/>
      <url>/posts/16406/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note orange icon-padding flat"><i class="note-icon fas fa-exclamation-triangle"></i><p>注意：文章是根据发表时的互联网公开知识背景所写，当前有可能部分内容已失效，请根据需要查阅相关资料。</p></div><div class="note red icon-padding flat"><i class="note-icon fas fa-heart"></i><p>基于WSL2 + Ubuntu24.04 + Ollama + DeepSeek + Open-WebUI进行本地大模型部署</p></div><hr><h2 id="安装WSL2和Ubuntu24-04"><a href="#安装WSL2和Ubuntu24-04" class="headerlink" title="安装WSL2和Ubuntu24.04"></a>安装WSL2和Ubuntu24.04</h2><h3 id="安装WSL2"><a href="#安装WSL2" class="headerlink" title="安装WSL2"></a>安装WSL2</h3><ul><li><p><strong>使用PowerShell以管理员身份运行以下命令</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装适用于 Linux 的 Windows 子系统</span></span><br><span class="line">dism.exe /online /<span class="built_in">enable-feature</span> /featurename:Microsoft<span class="literal">-Windows-Subsystem-Linux</span> /all /norestart</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启用“虚拟机平台”可选组件</span></span><br><span class="line">dism.exe /online /<span class="built_in">enable-feature</span> /featurename:VirtualMachinePlatform /all /norestart</span><br></pre></td></tr></table></figure></li><li><p><strong>重启电脑</strong></p></li><li><p><strong>使用PowerShell以管理员身份设置wsl版本为2</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl <span class="literal">--set-default-version</span> <span class="number">2</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="安装Ubuntu24-04"><a href="#安装Ubuntu24-04" class="headerlink" title="安装Ubuntu24.04"></a>安装Ubuntu24.04</h3><ul><li><p><strong>使用PowerShell以管理员身份运行以下命令</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看可用Linux发行版列表</span></span><br><span class="line">wsl <span class="literal">--list</span> <span class="literal">--online</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装Ubuntu24.04</span></span><br><span class="line">wsl <span class="literal">--install</span> <span class="literal">-d</span> Ubuntu<span class="literal">-24</span>.<span class="number">04</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看是否安装完成</span></span><br><span class="line">wsl <span class="literal">-l</span> <span class="literal">-v</span></span><br></pre></td></tr></table></figure></li><li><p><strong>配置wsl网络类型</strong><br>在windows系统的<code>C:\Users\【用户名】</code>目录下新增<code>.wslconfig</code>文件，输入以下内容并保存。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[wsl2]</span><br><span class="line">networkingMode=mirrored</span><br><span class="line"></span><br><span class="line">[experimental]</span><br><span class="line">hostAddressLoopback=true</span><br></pre></td></tr></table></figure></li><li><p><strong>启动Ubuntu并配置用户名和密码</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl <span class="literal">-d</span> Ubuntu<span class="literal">-24</span>.<span class="number">04</span></span><br></pre></td></tr></table></figure></li><li><p><strong>迁移Ubuntu至其他磁盘</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#导出wsl实例</span></span><br><span class="line">wsl <span class="literal">--export</span> Ubuntu<span class="literal">-24</span>.<span class="number">04</span> D:\WSL\ubuntu2404.tar</span><br><span class="line"></span><br><span class="line"><span class="comment">#注销当前wsl实例</span></span><br><span class="line">wsl <span class="literal">--unregister</span> Ubuntu<span class="literal">-24</span>.<span class="number">04</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#导入实例</span></span><br><span class="line">wsl <span class="literal">--import</span> Ubuntu<span class="literal">-24</span>.<span class="number">04</span> D:\WSL\ubuntu2404\ D:\WSL\ubuntu2404.tar</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置默认用户名，即配置Ubuntu时所使用的用户名</span></span><br><span class="line">ubuntu2404.exe config <span class="literal">--default-user</span> 用户名 <span class="comment">#某些情况下报错，不识别ubuntu2404命令，则跳过这条命令。</span></span><br></pre></td></tr></table></figure></li><li><p><strong>Ubuntu配置国内镜像</strong></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#备份当前镜像配置</span></span><br><span class="line">sudo <span class="built_in">cp</span> /etc/apt/sources.list.d/ubuntu.sources /etc/apt/sources.list.d/ubuntu.sources.bak</span><br><span class="line"></span><br><span class="line"><span class="comment">#编辑镜像配置</span></span><br><span class="line">sudo vim /etc/apt/sources.list.d/ubuntu.sources</span><br></pre></td></tr></table></figure><p>  <strong>复制以下内容到<code>ubuntu.sources</code>文件</strong>保存，参考<a href="https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/">https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/</a></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">Types: deb</span><br><span class="line">URIs: https://mirrors.tuna.tsinghua.edu.cn/ubuntu</span><br><span class="line">Suites: noble noble-updates noble-backports</span><br><span class="line">Components: main restricted universe multiverse</span><br><span class="line">Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span></span><br><span class="line"><span class="comment"># Types: deb-src</span></span><br><span class="line"><span class="comment"># URIs: https://mirrors.tuna.tsinghua.edu.cn/ubuntu</span></span><br><span class="line"><span class="comment"># Suites: noble noble-updates noble-backports</span></span><br><span class="line"><span class="comment"># Components: main restricted universe multiverse</span></span><br><span class="line"><span class="comment"># Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下安全更新软件源包含了官方源与镜像站配置，如有需要可自行修改注释切换</span></span><br><span class="line">Types: deb</span><br><span class="line">URIs: http://security.ubuntu.com/ubuntu/</span><br><span class="line">Suites: noble-security</span><br><span class="line">Components: main restricted universe multiverse</span><br><span class="line">Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg</span><br><span class="line"></span><br><span class="line"><span class="comment"># Types: deb-src</span></span><br><span class="line"><span class="comment"># URIs: http://security.ubuntu.com/ubuntu/</span></span><br><span class="line"><span class="comment"># Suites: noble-security</span></span><br><span class="line"><span class="comment"># Components: main restricted universe multiverse</span></span><br><span class="line"><span class="comment"># Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 预发布软件源，不建议启用</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Types: deb</span></span><br><span class="line"><span class="comment"># URIs: https://mirrors.tuna.tsinghua.edu.cn/ubuntu</span></span><br><span class="line"><span class="comment"># Suites: noble-proposed</span></span><br><span class="line"><span class="comment"># Components: main restricted universe multiverse</span></span><br><span class="line"><span class="comment"># Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># # Types: deb-src</span></span><br><span class="line"><span class="comment"># # URIs: https://mirrors.tuna.tsinghua.edu.cn/ubuntu</span></span><br><span class="line"><span class="comment"># # Suites: noble-proposed</span></span><br><span class="line"><span class="comment"># # Components: main restricted universe multiverse</span></span><br><span class="line"><span class="comment"># # Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg</span></span><br></pre></td></tr></table></figure><p>  <strong>更新镜像源</strong></p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt full-upgrade -y</span><br></pre></td></tr></table></figure></li></ul><h2 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h2><p>  <strong>安装步骤参考地址</strong><br>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://docs.docker.com/engine/install/ubuntu/</span><br></pre></td></tr></table></figure></p><ul><li><strong>配置docker</strong>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 卸载旧版docker，可选操作</span></span><br><span class="line"><span class="keyword">for</span> pkg <span class="keyword">in</span> docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; <span class="keyword">do</span> sudo apt-get remove <span class="variable">$pkg</span>; <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Add Docker&#x27;s official GPG key:</span></span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install ca-certificates curl</span><br><span class="line">sudo install -m 0755 -d /etc/apt/keyrings</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果报错，重新执行直到成功</span></span><br><span class="line">sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc</span><br><span class="line"></span><br><span class="line">sudo <span class="built_in">chmod</span> a+r /etc/apt/keyrings/docker.asc</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add the repository to Apt sources:</span></span><br><span class="line"><span class="built_in">echo</span> \</span><br><span class="line">  <span class="string">&quot;deb [arch=<span class="subst">$(dpkg --print-architecture)</span> signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \</span></span><br><span class="line"><span class="string">  <span class="subst">$(. /etc/os-release &amp;&amp; echo <span class="string">&quot;<span class="variable">$&#123;UBUNTU_CODENAME:-<span class="variable">$VERSION_CODENAME</span>&#125;</span>&quot;</span>)</span> stable&quot;</span> | \</span><br><span class="line">  sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br><span class="line"></span><br><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure></li><li><strong>安装docker</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span><br><span class="line"></span><br><span class="line"><span class="comment">#等待安装完成并查看是否安装成功</span></span><br><span class="line">sudo docker --version</span><br><span class="line">sudo docker images</span><br></pre></td></tr></table></figure></li></ul><h2 id="安装cuda"><a href="#安装cuda" class="headerlink" title="安装cuda"></a>安装cuda</h2><p>  <strong>安装步骤参考地址</strong><br>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://developer.nvidia.com/cuda-downloads?target_os=Linux&amp;target_arch=x86_64&amp;Distribution=Ubuntu&amp;target_version=24.04&amp;target_type=deb_local</span><br></pre></td></tr></table></figure></p><ul><li><p><strong>Cuda Toolkit Installer</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2404/x86_64/cuda-ubuntu2404.pin</span><br><span class="line">sudo <span class="built_in">mv</span> cuda-ubuntu2404.pin /etc/apt/preferences.d/cuda-repository-pin-600</span><br><span class="line">wget https://developer.download.nvidia.com/compute/cuda/12.8.0/local_installers/cuda-repo-ubuntu2404-12-8-local_12.8.0-570.86.10-1_amd64.deb</span><br><span class="line">sudo dpkg -i cuda-repo-ubuntu2404-12-8-local_12.8.0-570.86.10-1_amd64.deb</span><br><span class="line">sudo <span class="built_in">cp</span> /var/cuda-repo-ubuntu2404-12-8-<span class="built_in">local</span>/cuda-*-keyring.gpg /usr/share/keyrings/</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get -y install cuda-toolkit-12-8</span><br></pre></td></tr></table></figure></li><li><p>查看cuda信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvidia-smi</span><br></pre></td></tr></table></figure></li></ul><h2 id="安装ollama"><a href="#安装ollama" class="headerlink" title="安装ollama"></a>安装ollama</h2><ul><li><p>方法一：命令行方式安装，可能网速很慢</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://ollama.com/install.sh | sh</span><br></pre></td></tr></table></figure></li><li><p>方法二：压缩包安装，速度依然很慢</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://ollama.com/download/ollama-linux-amd64.tgz -o ollama-linux-amd64.tgz</span><br><span class="line">sudo tar -C /usr -xzf ollama-linux-amd64.tgz</span><br></pre></td></tr></table></figure></li><li><p>方法三：离线压缩包安装，速度较快，下载完成后注意校验压缩包的哈希值sha256</p><ul><li>在sourceforge.net网站上搜索ollama下载压缩包，下载地址参考:<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://liquidtelecom.dl.sourceforge.net/project/ollama.mirror/v0.5.7/ollama-linux-amd64.tgz?viasf=1</span><br><span class="line">https://jaist.dl.sourceforge.net/project/ollama.mirror/v0.5.7/ollama-linux-amd64.tgz?viasf=1</span><br></pre></td></tr></table></figure></li><li>下载完成后的压缩包ollama-linux-amd64.tgz拷贝至ubuntu<code>~/home/用户</code>目录下。<ul><li>拷贝方法一：在windows11资源管理器Linux对应目录下，目录地址参考如<code>\\wsl.localhost\Ubuntu-24.04</code></li><li>拷贝方法二：使用<code>MobaXterm</code>、<code>VSCode</code>等软件拷贝，参考windows和wsl资源如何共享。</li></ul></li><li>sourceforge.net网站上搜索ollama也可下载<code>OllamaSetup.exe</code>，用于在windows环境安装ollama,下载地址参考：<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://jaist.dl.sourceforge.net/project/ollama.mirror/v0.5.7/OllamaSetup.exe?viasf=1</span><br><span class="line">https://liquidtelecom.dl.sourceforge.net/project/ollama.mirror/v0.5.7/OllamaSetup.exe?viasf=1</span><br></pre></td></tr></table></figure></li><li>在wsl中使用离线包安装ollama<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo tar -C /usr -xzf ollama-linux-amd64.tgz</span><br></pre></td></tr></table></figure></li><li>安装完成，查看ollama安装情况<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ollama serve</span><br><span class="line">ollama <span class="built_in">ls</span></span><br><span class="line">ollama ps</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="ollama拉取deepseek"><a href="#ollama拉取deepseek" class="headerlink" title="ollama拉取deepseek"></a>ollama拉取deepseek</h2><ul><li><strong>根据硬件配置情况拉取deepseek模型</strong><table><thead><tr><th>模型类型</th><th>最小GPU配置</th><th>CPU配置</th><th>内存要求</th><th>磁盘空间</th></tr></thead><tbody><tr><td>R1-Zero全量版</td><td>RTX 4090(24GB)</td><td>Xeon 8核+128GB</td><td>128GB</td><td>500GB</td></tr><tr><td>R1蒸馏版-70B</td><td>RTX 3090(24GB)</td><td>i9-13900K+64GB</td><td>64GB</td><td>320GB</td></tr><tr><td>R1蒸馏版-14B</td><td>RTX 3060(12GB)</td><td>Ryzen 7+32GB</td><td>32GB</td><td>80GB</td></tr><tr><td>R1蒸馏版-1.5B</td><td>GTX 1650(4GB)</td><td>任意四核处理器+8GB</td><td>8GB</td><td>12GB</td></tr></tbody></table></li><li><strong>ollama拉取deepseek-r1:1.5b</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama run deepseek-r1:1.5b</span><br></pre></td></tr></table></figure></li><li><strong>等待拉取完成并测试</strong><div class="note green icon-padding flat"><i class="note-icon fas fa-rocket"></i><p><strong>拉取速度在90%及以后很慢时，使用<code>Ctrl+C</code>停止拉取，重启执行ollama拉取deepseek命令，会继续拉取。</strong></p></div></li></ul><h2 id="docker安装open-webui"><a href="#docker安装open-webui" class="headerlink" title="docker安装open-webui"></a>docker安装open-webui</h2><ul><li><p><strong>使用官方镜像源速度较慢</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 3000:8080 --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main</span><br></pre></td></tr></table></figure></li><li><p><strong>使用第三方镜像源</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 3000:8080 --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.nju.edu.cn/open-webui/open-webui:main</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果是先pull镜像再运行</span></span><br><span class="line">docker run -d -p 3000:8000 --add-host=hosy.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.nju.edu.cn/open-webui/open-webui:main</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#启动镜像</span></span><br><span class="line">docker start open-webui</span><br><span class="line"></span><br><span class="line"><span class="comment">#停止镜像</span></span><br><span class="line">docker stop open-webui</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看容器日志</span></span><br><span class="line">docker logs open-webui</span><br></pre></td></tr></table></figure></li><li><p><strong>使用open-webui</strong><br><strong>浏览器访问地址：<a href="http://127.0.0.1:3000/">http://127.0.0.1:3000</a></strong></p></li><li><p><strong>docker中部署open-webui相关故障问题</strong><br><strong>参考地址：<a href="https://docs.openwebui.com/troubleshooting/connection-error/">https://docs.openwebui.com/troubleshooting/connection-error/</a></strong></p><ul><li><strong>open-webui无法关联ollama模型</strong><ul><li><p><strong>报错信息1</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR [open_webui.routers.ollama] Connection error: Cannot connect to host host.docker.internal:11434 ssl:default [Connect call failed (<span class="string">&#x27;172.17.0.1&#x27;</span>, 11434)]</span><br></pre></td></tr></table></figure><p><strong>解决办法1</strong><br>在open-webui网页<code>设置-管理员设置-外部连接-Ollama API-管理Ollama API连接</code>将<code>http://host.docker.internal:11434</code>修改为<code>http://127.0.0.1:11434</code>并进行保存。</p></li><li><p><strong>报错信息2</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR [open_webui.routers.ollama] Connection error: Cannot connect to host 127.0.0.1:11434 ssl:default [Connect call failed (<span class="string">&#x27;127.0.0.1&#x27;</span>, 11434)]</span><br></pre></td></tr></table></figure><p><strong>解决办法2</strong><br><strong>重新创建运行docker镜像</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#官方镜像源</span></span><br><span class="line">docker run -d --network=host -v open-webui:/app/backend/data -e OLLAMA_BASE_URL=http://127.0.0.1:11434 --name open-webui --restart always ghcr.io/open-webui/open-webui:main</span><br><span class="line"></span><br><span class="line"><span class="comment">#第三方镜像源</span></span><br><span class="line">docker run -d --network=host -v open-webui:/app/backend/data -e OLLAMA_BASE_URL=http://127.0.0.1:11434 --name open-webui --restart always ghcr.nju.edu.cn/open-webui/open-webui:main</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul><h2 id="pip安装open-webui"><a href="#pip安装open-webui" class="headerlink" title="pip安装open-webui"></a>pip安装open-webui</h2><p><strong>使用python pip方式进行安装</strong></p><ul><li><p>wsl查看python版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 --version</span><br></pre></td></tr></table></figure></li><li><p>wsl安装pip</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install python3-pip</span><br></pre></td></tr></table></figure></li><li><p>配置pip国内镜像，否则下载open-webui速度会很慢</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> ~/.pip</span><br><span class="line">sudo vim ~/.pip/pip.conf  </span><br></pre></td></tr></table></figure><ul><li>在<code>pip.conf</code>输入以下内容并保存<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line">index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">extra-index-url =</span><br><span class="line">    https://mirrors.aliyun.com/pypi/simple/</span><br><span class="line">    https://pypi.mirrors.ustc.edu.cn/simple/</span><br><span class="line">[install]</span><br><span class="line">trusted-host = pypi.tuna.tsinghua.edu.cn</span><br></pre></td></tr></table></figure></li><li>pip配置<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip config list <span class="comment">#查看配置</span></span><br><span class="line">pip3 install --upgrade pip  <span class="comment">#更新pip索引</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>pip安装open-webui</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ubuntu24.04需要使用--break-system-packages强制安装，否则报错</span></span><br><span class="line">pip install open-webui --break-system-packages --ignore-installed </span><br></pre></td></tr></table></figure></li><li><p><strong>启动open-webui</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">open-webui serve</span><br><span class="line"></span><br><span class="line"><span class="comment">#指定端口启动</span></span><br><span class="line">open-webui serve --port 8081</span><br></pre></td></tr></table></figure></li><li><p><strong>浏览器查看open-webui进行测试</strong><br>浏览地址：<a href="http://127.0.0.1:3000/">http://127.0.0.1:3000</a> (也可指定端口号启动open-webui)</p></li><li><p><strong>open-webui问题处理</strong></p><ul><li>启动报错<ul><li>安装ffmpeg重新启动<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ffmpeg</span><br></pre></td></tr></table></figure></li></ul></li><li>open-webui网页长时间白屏<br>等待一段时间，在<code>设置-管理员设置-外部连接</code>，关闭OpenAI API。</li><li>open-webui网页联网搜索<br>在<code>设置-管理员设置-联网搜索</code>中选择<code>duckduckgo</code>。</li></ul></li><li><p><strong>open-webui更新</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install --upgrade open-webui --break-system-packages</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows11 </tag>
            
            <tag> WSL2 </tag>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> docker </tag>
            
            <tag> AI </tag>
            
            <tag> DeepSeek </tag>
            
            <tag> Ollama </tag>
            
            <tag> Open-WebUI </tag>
            
            <tag> Qwen </tag>
            
            <tag> LLM </tag>
            
            <tag> AGI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你好2025</title>
      <link href="/posts/fb71859b/"/>
      <url>/posts/fb71859b/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div style="font-size:35px;">你好，2025！</div>]]></content>
      
      
      <categories>
          
          <category> 小记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开篇 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的电影2024</title>
      <link href="/posts/5db994f/"/>
      <url>/posts/5db994f/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div style="font-size:33px;"> 我的电影2024 </div><img src="/posts/5db994f/mymovies2024.webp" class="" title="我的电影2024">]]></content>
      
      
      <categories>
          
          <category> 影视 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电影 </tag>
            
            <tag> 年终总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你好2024</title>
      <link href="/posts/8c76b50d/"/>
      <url>/posts/8c76b50d/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div style="font-size:34px;">你好，2024！</div>]]></content>
      
      
      <categories>
          
          <category> 小记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开篇 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的电影2023</title>
      <link href="/posts/9bbf0cec/"/>
      <url>/posts/9bbf0cec/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div style="font-size:33px;"> 我的电影 2023</div><img src="/posts/9bbf0cec/mymovies2023.webp" class="" title="我的电影2023">]]></content>
      
      
      <categories>
          
          <category> 影视 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电影 </tag>
            
            <tag> 年终总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker搭建gitlab CI/CD环境</title>
      <link href="/posts/7f9aad23/"/>
      <url>/posts/7f9aad23/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p style="font-size:20px;font-weight:bold;">Windows11基于WSL2 + Ubuntu22.04 + docker搭建gitlab CI/CD环境</p><h3 id="1-安装-WSL2-和-Ubuntu"><a href="#1-安装-WSL2-和-Ubuntu" class="headerlink" title="1. 安装 WSL2 和 Ubuntu"></a>1. 安装 WSL2 和 Ubuntu</h3><h4 id="1-1-安装-WSL2"><a href="#1-1-安装-WSL2" class="headerlink" title="1.1. 安装 WSL2"></a>1.1. 安装 WSL2</h4><p>打开终端，安装 wsl2，系统会自动安装 wsl2 和下载好 Ubuntu</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --install  #安装wsl2</span><br></pre></td></tr></table></figure><h4 id="1-2-安装-Ubuntu"><a href="#1-2-安装-Ubuntu" class="headerlink" title="1.2. 安装 Ubuntu"></a>1.2. 安装 Ubuntu</h4><p>打开电脑应用软件，找到<code>Ubuntu</code>，双击开始安装</p><p>输入普通的用户名和密码，再使用<code>sudo passwd root</code>添加 root 用户 ，即可完成安装。</p><p>在 windows11 终端中输入命令可以看到 wsl 版本和 Ubuntu 版本</p><h4 id="1-3-移动-wsl-安装位置"><a href="#1-3-移动-wsl-安装位置" class="headerlink" title="1.3. 移动 wsl 安装位置"></a>1.3. 移动 wsl 安装位置</h4><p>wsl 默认安装到 C 盘，为了后续安装其他软件占据 C 盘空间，将 WSL 迁移</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wsl --shutdown #终止wsl</span><br><span class="line">wsl --export Ubuntu D:/wsl2/Ubuntu.tar #导出指定的wsl安装的Linux发行版本到其他位置</span><br><span class="line">wsl --unregister Ubuntu #注销指定的wsl安装的Linux发行版本</span><br><span class="line">wsl --import Ubuntu D:\wsl2\  D:\wsl2\Ubuntu.tar #导入之前的包</span><br><span class="line">Ubuntu config --default-user xxx #配置wsl登录用户名，一般是之前安装时输入的用户名</span><br></pre></td></tr></table></figure><h4 id="1-4-Ubuntu-配置"><a href="#1-4-Ubuntu-配置" class="headerlink" title="1.4. Ubuntu 配置"></a>1.4. Ubuntu 配置</h4><h5 id="1-4-1-Ubutnu-切换镜像源"><a href="#1-4-1-Ubutnu-切换镜像源" class="headerlink" title="1.4.1. Ubutnu 切换镜像源"></a>1.4.1. Ubutnu 切换镜像源</h5><p>在用 MobaXterm 连接 Ubuntu 系统，也可以用 Windows11 或者其他软件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">sudo -i #切换到root</span><br><span class="line">sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak #备份镜像文件</span><br><span class="line">vim /etc/apt/sources.list #使用以下内容替换，针对Ubutnu22.04, vim输入v进入编辑,方向键选择内容，输入d删除</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy main restricted universe multiverse</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy main restricted universe multiverse</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse</span></span><br><span class="line"></span><br><span class="line">deb http://security.ubuntu.com/ubuntu/ jammy-security main restricted universe multiverse</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src http://security.ubuntu.com/ubuntu/ jammy-security main restricted universe multiverse</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">预发布软件源，不建议启用</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-proposed main restricted universe multiverse</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-proposed main restricted universe multiverse</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo apt-get -y update &amp;&amp; sudo apt-get -y upgrade #更新系统</span><br><span class="line"></span><br><span class="line">sudo apt install net-tools #安装net-tools</span><br><span class="line">ifconfig #查看Ubuntu系统IP</span><br></pre></td></tr></table></figure><h3 id="2-安装-docker"><a href="#2-安装-docker" class="headerlink" title="2. 安装 docker"></a>2. 安装 docker</h3><h4 id="2-1-安装-docker-准备工作"><a href="#2-1-安装-docker-准备工作" class="headerlink" title="2.1. 安装 docker 准备工作"></a>2.1. 安装 docker 准备工作</h4><h5 id="2-1-1-安装-docker-依赖"><a href="#2-1-1-安装-docker-依赖" class="headerlink" title="2.1.1. 安装 docker 依赖"></a>2.1.1. 安装 docker 依赖</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ca-certificates gnupg</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">apt-transport-https:通过 HTTPS 协议安全访问存储库，为apt获取HTTPS支持，apt新版本(1.5)以上，已获支持，可不安装</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">ca-certificates:CA证书管理工具，是一个软件包，包含了一组根证书和中间证书，这些证书用于验证 SSL/TLS 连接中的服务器证书和客户端证书。当用户使用 SSL/TLS 协议与服务器通信时，服务器会发送一个证书，证书上包含了服务器的公钥和证书的签名。客户端需要验证证书的有效性，以确保与服务器的通信是安全的。包含的根证书和中间证书是由各个证书颁发机构（CA）签发的，这些 CA 可以是公共 CA，也可以是私有 CA。当客户端收到服务器证书时，它会使用 ca-certificates 中的证书来验证服务器证书的有效性。如果证书有效，则 SSL/TLS 连接将被建立；如果证书无效，则连接将被终止。因此，ca-certificates 起到了保障 SSL/TLS 连接安全的作用。在 Linux 系统中，安装 ca-certificates 软件包是非常重要的，因为它提供了一组可信任的根证书和中间证书，使得用户可以安全地与各种服务器通信。</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">gnupg:GNU Privacy Guard (GnuPG) 是一个开源的加密工具，它可以帮助用户在Linux系统上加密文件，保护文件内容不被窃取或篡改。</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="2-1-2-配置-docker-的-apt-源-GPG-key"><a href="#2-1-2-配置-docker-的-apt-源-GPG-key" class="headerlink" title="2.1.2. 配置 docker 的 apt 源 GPG key"></a>2.1.2. 配置 docker 的 apt 源 GPG key</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo install -m 0755 -d /etc/apt/keyrings</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-m 选项设置已安装对象的模式(访问控制位)。目录与普通文件一样具有模式，-m 选项对于安装目录和安装普通文件具有相同的含义,-d 选项指定为安装指定的名称将作为要创建的目录，以及指定路径中任何缺失的目录，效果类似于<span class="built_in">mkdir</span> -p，将模式显式设置为0755，即用户具有读/写/执行权限，组用户和其它用户具有读写权限。/etc/apt/keyrings是key的路径</span></span><br><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg</span><br><span class="line">sudo chmod a+r /etc/apt/keyrings/docker.gpg</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">远程存储库的 GPG 密钥，来自存储库的包由GPG密钥“签名(signed)”，并且通过这份存储的公钥，系统能够验证软件包正是来自这个存储库</span></span><br></pre></td></tr></table></figure><h5 id="2-1-3-配置-docker-软件源"><a href="#2-1-3-配置-docker-软件源" class="headerlink" title="2.1.3. 配置 docker 软件源"></a>2.1.3. 配置 docker 软件源</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">配置官方软件源</span></span><br><span class="line">echo \</span><br><span class="line">  &quot;deb [arch=&quot;$(dpkg --print-architecture)&quot; signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \</span><br><span class="line">  &quot;$(. /etc/os-release &amp;&amp; echo &quot;$VERSION_CODENAME&quot;)&quot; stable&quot; | \</span><br><span class="line">  sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">配置其他软件源，需要导入对应的GPG？</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tuna</span></span><br><span class="line">echo \</span><br><span class="line">  &quot;deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/ubuntu \</span><br><span class="line">  &quot;$(. /etc/os-release &amp;&amp; echo &quot;$VERSION_CODENAME&quot;)&quot; stable&quot; | \</span><br><span class="line">  tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br></pre></td></tr></table></figure><h5 id="2-1-4-更新软件源"><a href="#2-1-4-更新软件源" class="headerlink" title="2.1.4. 更新软件源"></a>2.1.4. 更新软件源</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><h4 id="2-2-安装-docker"><a href="#2-2-安装-docker" class="headerlink" title="2.2. 安装 docker"></a>2.2. 安装 docker</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">docker-ce:docker社区版</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">docker-ce-cli:docker的命令行客户端工具（Command Line Interface）。它允许用户通过命令行界面与docker守护程序进行交互，从而管理容器和镜像。使用docker命令，可以构建、运行、停止、删除容器，以及管理docker镜像、网络、卷等。docker-ce-cli提供了与docker守护程序通信的途径，使可以轻松地管理容器化应用。</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">containerd.io:是一个面向容器运行时的基本组件。它充当了docker引擎的核心，负责管理容器的生命周期、镜像管理和存储。实际上，docker-ce内部使用containerd.io来处理容器的创建、销毁和运行等操作。containerd.io的设计更加注重稳定性和可扩展性，使其成为容器生态系统的关键基础。</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">docker-buildx-plugin:docker的一个插件，用于构建多平台的容器镜像。它可以在一个构建过程中同时构建多个不同平台的镜像，例如x86、ARM等。这样可以方便地为不同平台的设备提供适配的容器镜像。</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">docker-compose-plugin:</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Compose 是用于定义和运行多容器 Docker 应用程序的工具。 借助 Compose，您可以使用 YAML 文件来配置应用程序的服务。 然后，只需一个命令，即可创建并启动所有服务 从您的配置。</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Compose 适用于所有环境;生产、暂存、开发、测试 以及 CI 工作流。它还包含用于管理应用程序的整个生命周期的命令：</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动、停止和重建服务</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看正在运行的服务的状态</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">流式传输正在运行的服务的日志输出</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在服务上运行一次性命令</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Compose 使其有效的主要功能包括：</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在单个主机上具有多个隔离环境</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建容器时保留卷数据</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">仅重新创建已更改的容器</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">支持变量和在环境之间移动合成</span></span><br><span class="line"></span><br><span class="line">docker version #安装完成后，查看docker版本信息</span><br></pre></td></tr></table></figure><h3 id="3-安装-gitlab"><a href="#3-安装-gitlab" class="headerlink" title="3. 安装 gitlab"></a>3. 安装 gitlab</h3><h4 id="3-1-搜索和拉取镜像"><a href="#3-1-搜索和拉取镜像" class="headerlink" title="3.1. 搜索和拉取镜像"></a>3.1. 搜索和拉取镜像</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker search gitlab/gitlab-ce #搜索镜像</span><br><span class="line">docker pull gitlab/gitlab-ce #拉取镜像，默认拉取最新版，安装需要一定的时间</span><br></pre></td></tr></table></figure><h4 id="3-2-安装"><a href="#3-2-安装" class="headerlink" title="3.2. 安装"></a>3.2. 安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">docker images #查看镜像</span><br><span class="line"></span><br><span class="line">sudo mkdir -p /srv/gitlab</span><br><span class="line">sudo chmod -R 777 /srv/gitlab #权限</span><br><span class="line">export GITLAB_HOME=/srv/gitlab #配置全局目录,通常会将 gitlab 的配置 (etc) 、 日志 (log) 、数据 (data)放到容器之外，便于日后升级，配置一个新的环境变量$GITLAB_HOME，该变量指向配置，日志和数据文件将驻留的目录。确保目录存在并且已授予适当的权限。</span><br><span class="line">source ~/.bashrc #路径生效</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动gitlab容器</span></span><br><span class="line">sudo docker run --detach \</span><br><span class="line">  --hostname gitlab.example.com \</span><br><span class="line">  --publish 8443:443 --publish 8888:80 --publish 8822:22 \</span><br><span class="line">  --name gitlab \</span><br><span class="line">  --restart always \</span><br><span class="line">  --volume $GITLAB_HOME/config:/etc/gitlab \</span><br><span class="line">  --volume $GITLAB_HOME/logs:/var/log/gitlab \</span><br><span class="line">  --volume $GITLAB_HOME/data:/var/opt/gitlab \</span><br><span class="line">  --shm-size 256m \</span><br><span class="line">  gitlab/gitlab-ce:latest</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">--hostname:主机IP</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">--detach：后台运行</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">--publish：将容器内部端口向外映射</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">--name：命名容器名称</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">--volume：将容器内数据文件夹或者日志、配置等文件夹挂载到宿主机指定目录</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">8443:443：将http：443映射到外部端口8443</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">8888:80：将web：80映射到外部端口8888</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2222:22：将ssh：22映射到外部端口8822</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker ps #查看正在运行的容器</span><br><span class="line">docker ps -a  #查看所有容器</span><br><span class="line">docker exec -it gitlab bash #进入gitlab容器</span><br></pre></td></tr></table></figure><h4 id="3-3-配置"><a href="#3-3-配置" class="headerlink" title="3.3. 配置"></a>3.3. 配置</h4><h5 id="3-3-1-配置文件"><a href="#3-3-1-配置文件" class="headerlink" title="3.3.1. 配置文件"></a>3.3.1. 配置文件</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">vim $GITLAB_HOME/config/gitlab.rb #gitlab配置</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">external_url <span class="string">&#x27;我的主机IP&#x27;</span> <span class="comment">#配置http协议所使用的访问地址,不能添加端口号，默认 GENERATED_EXTERNAL_URL</span></span></span><br><span class="line">gitlab_rails[&#x27;time_zone&#x27;] = &#x27;Asia/Shanghai&#x27;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">docker <span class="built_in">exec</span> -it gitlab bash <span class="comment">#进入gitlab容器</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">gitlab-ctl reconfigure <span class="comment">#更新配置</span></span></span><br></pre></td></tr></table></figure><h5 id="3-3-2-减少-gitlab-内存占用"><a href="#3-3-2-减少-gitlab-内存占用" class="headerlink" title="3.3.2. 减少 gitlab 内存占用"></a>3.3.2. 减少 gitlab 内存占用</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">vim $GITLAB_HOME/config/gitlab.rb</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">docker <span class="built_in">exec</span> -it gitlab bash进入gitlab容器</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">vi /etc/gitlab/gitlab.rb修改配置</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">gitlab-ctl reconfigure更新配置</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">gitlab-ctl restart重启</span></span><br><span class="line"></span><br><span class="line">puma[&#x27;worker_timeout&#x27;] = 30</span><br><span class="line">puma[&#x27;worker_processes&#x27;] = 2 # 0, 禁用 puma cluster 模式， 可以减少 100-400 MB占用</span><br><span class="line">puma[&#x27;max_threads&#x27;] = 4</span><br><span class="line">puma[&#x27;min_threads&#x27;] = 4</span><br><span class="line">postgresql[&#x27;max_worker_processes&#x27;] = 8</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Sidekiq 是一个后台处理守护进程。默认情况下使用 GitLab 配置时，它以50. 这确实会影响它在给定时间可以分配多少内存。建议将其配置为使用明显更小的值5或10（首选）。</span></span><br><span class="line">sidekiq[&#x27;max_concurrency&#x27;] = 10</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">GitLab 默认启用所有服务，无需任何额外配置即可提供完整的 DevOps 解决方案。一些默认服务，如监控，对于 GitLab 的运行不是必需的，可以禁用以节省内存。</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">禁用监控</span></span><br><span class="line">prometheus_monitoring[&#x27;enable&#x27;] = false</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># GitLab 由许多组件（用 Ruby 和 Go 编写）组成，其中 GitLab Rails 是最大的组件，并且消耗最多的内存。</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">gitlab_rails[<span class="string">&#x27;env&#x27;</span>] = &#123;</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"> <span class="string">&#x27;MALLOC_CONF&#x27;</span> =&gt; <span class="string">&#x27;dirty_decay_ms:1000,muzzy_decay_ms:1000&#x27;</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">&#125;</span></span><br><span class="line">docker restart gitlab #修改完成，重启gitlab</span><br></pre></td></tr></table></figure><h5 id="3-3-3-gitlab-web-配置"><a href="#3-3-3-gitlab-web-配置" class="headerlink" title="3.3.3. gitlab web 配置"></a>3.3.3. gitlab web 配置</h5><h6 id="3-3-3-1-web-无法打开"><a href="#3-3-3-1-web-无法打开" class="headerlink" title="3.3.3.1. web 无法打开"></a>3.3.3.1. web 无法打开</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it gitlab bash #进入gitlab容器</span><br><span class="line">gitlab-ctl tail #查看日志</span><br></pre></td></tr></table></figure><h6 id="3-3-3-2-提示-502"><a href="#3-3-3-2-提示-502" class="headerlink" title="3.3.3.2. 提示 502"></a>3.3.3.2. 提示 502</h6><ul><li>需要等待一会儿再刷新</li></ul><h6 id="3-3-3-3-登录"><a href="#3-3-3-3-登录" class="headerlink" title="3.3.3.3. 登录"></a>3.3.3.3. 登录</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root #默认账号</span><br><span class="line">cat $GITLAB_HOME/config/initial_root_password #查看密码</span><br></pre></td></tr></table></figure><h6 id="3-3-3-4-克隆地址没有-IP-和端口号"><a href="#3-3-3-4-克隆地址没有-IP-和端口号" class="headerlink" title="3.3.3.4. 克隆地址没有 IP 和端口号"></a>3.3.3.4. 克隆地址没有 IP 和端口号</h6><ul><li>管理员登录—设置—通用—可见性，项目功能，权限—自定义 HTTP(S)协议 Git 克隆 URL， 设置为 gitlab 的 ip:port 模式</li></ul><h6 id="3-3-3-5-无法克隆或者导入导出"><a href="#3-3-3-5-无法克隆或者导入导出" class="headerlink" title="3.3.3.5. 无法克隆或者导入导出"></a>3.3.3.5. 无法克隆或者导入导出</h6><ul><li>管理员登录—设置—网络—出站请求， 设置为允许来自 webhooks 和集成对本地网络的请求，允许系统钩子向本地网络发送请求</li></ul><h3 id="4-安装-gitlab-runner"><a href="#4-安装-gitlab-runner" class="headerlink" title="4. 安装 gitlab-runner"></a>4. 安装 gitlab-runner</h3><h4 id="4-1-搜索和拉取镜像"><a href="#4-1-搜索和拉取镜像" class="headerlink" title="4.1. 搜索和拉取镜像"></a>4.1. 搜索和拉取镜像</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker search gitlab/gitlab-runner #搜索镜像</span><br><span class="line">docker pull gitlab/gitlab-runner #拉取镜像，默认拉取最新版，安装需要一定的时间</span><br></pre></td></tr></table></figure><h4 id="4-2-安装"><a href="#4-2-安装" class="headerlink" title="4.2. 安装"></a>4.2. 安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">docker images #查看镜像</span><br><span class="line"></span><br><span class="line">sudo mkdir -p /srv/gitlab-runner</span><br><span class="line">sudo chmod -R 777 /srv/gitlab-runner #权限</span><br><span class="line">export GITLAB_RUNNER_HOME=/srv/gitlab-runner #配置一个新的环境变量$GITLAB_RUNNER_HOME，该变量指向配置文件。确保目录存在并且已授予适当的权限。</span><br><span class="line">vim ~/.bashrc #增加一行 export GITLAB_RUNNER_HOME=/srv/gitlab-runner</span><br><span class="line"></span><br><span class="line">source ~/.bashrc #路径生效</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动gitlab-runner容器</span></span><br><span class="line">docker run -d --name gitlab-runner --restart always \</span><br><span class="line">  -v $GITLAB_RUNNER_HOME/config:/etc/gitlab-runner \</span><br><span class="line">  -v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">  gitlab/gitlab-runner:latest</span><br><span class="line"></span><br><span class="line">docker ps #查看正在运行的容器</span><br><span class="line">docker ps -a  #查看所有容器</span><br><span class="line">docker exec -it gitlab-runner bash #进入gitlab-runner容器</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="4-3-配置"><a href="#4-3-配置" class="headerlink" title="4.3. 配置"></a>4.3. 配置</h4><h5 id="4-3-1-新建项目"><a href="#4-3-1-新建项目" class="headerlink" title="4.3.1. 新建项目"></a>4.3.1. 新建项目</h5><h5 id="4-3-2-项目新增文件"><a href="#4-3-2-项目新增文件" class="headerlink" title="4.3.2. 项目新增文件"></a>4.3.2. 项目新增文件</h5><ul><li>新建index.html文件</li><li>新建.gitlab-ci.yml文件，模板选择html</li><li>新建runnner,复制页面代码</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it gitlab-runner bash #进入git-runner容器</span><br><span class="line">gitlab-runner register  --url http://ip  --token tokennnnn #注册runner</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">name:<span class="built_in">test</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">shell</span></span><br></pre></td></tr></table></figure><h5 id="4-3-3-配置pages"><a href="#4-3-3-配置pages" class="headerlink" title="4.3.3. 配置pages"></a>4.3.3. 配置pages</h5><h6 id="4-3-3-1-开启pages"><a href="#4-3-3-1-开启pages" class="headerlink" title="4.3.3.1. 开启pages"></a>4.3.3.1. 开启pages</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim $GITLAB_HOME/config/gitlab.rb #配置gitlab</span><br><span class="line">gitlab_pages[&#x27;enable&#x27;] = true #开启gitlab pages</span><br></pre></td></tr></table></figure><h6 id="4-3-3-2-pages配置"><a href="#4-3-3-2-pages配置" class="headerlink" title="4.3.3.2. pages配置"></a>4.3.3.2. pages配置</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Pages部署目录：/var/opt/gitlab/gitlab-rails/shared/pages</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">内置Nginx目录：/var/opt/gitlab/nginx</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">编辑nginx目录下的conf/gitlab-pages.conf文件，内容如下：</span></span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">  listen port; ## 端口根据需要填写</span><br><span class="line">  server_name ip; ## IP根据实际情况填写</span><br><span class="line">  server_tokens off; ## Don&#x27;t show the nginx version number, a security best practice</span><br><span class="line"> </span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash"><span class="comment"># Disable symlink traversal</span></span></span><br><span class="line">  disable_symlinks on;</span><br><span class="line"> </span><br><span class="line">  access_log  /var/log/gitlab/nginx/gitlab_pages_access.log gitlab_access;</span><br><span class="line">  error_log   /var/log/gitlab/nginx/gitlab_pages_error.log;</span><br><span class="line"> </span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">Pass everything to pages daemon</span></span><br><span class="line">  location / &#123;</span><br><span class="line">    # 指向pages的发布目录</span><br><span class="line">    root /var/opt/gitlab/gitlab-rails/shared/pages;</span><br><span class="line">    index index.html;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">Define custom error pages</span></span><br><span class="line">  error_page 403 /403.html;</span><br><span class="line">  error_page 404 /404.html;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">配置好后重启Nginx：gitlab-ctl restart nginx</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">访问页面：http://IP:端口/gitlab账号/项目名/public/</span></span><br><span class="line">http://ip:port/gitlab_username/test/public/</span><br><span class="line"></span><br><span class="line">vim /etc/hosts</span><br><span class="line">sudo systemctl restart systemd-resolved</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pages_external_url = &quot;http://ip:port&quot;</span><br><span class="line">gitlab_pages[&#x27;enable&#x27;] = true</span><br><span class="line"></span><br><span class="line">cp /var/opt/gitlab/nginx/conf/gitlab-pages.conf /etc/gitlab/gitlab-pages.conf</span><br><span class="line">vi /etc/gitlab/gitlab-pages.conf</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">proxy_cache off;</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">proxy_pass http://localhost:8090;</span></span><br><span class="line"></span><br><span class="line">root /var/opt/gitlab/gitlab-rails/shared/pages;</span><br><span class="line">index index.html;</span><br><span class="line">gitlab-ctl restart nginx</span><br><span class="line"></span><br><span class="line">vi /etc/gitlab/gitlab.rb</span><br><span class="line">nginx[&#x27;custom_nginx_config&#x27;] = &quot;include /etc/gitlab/gitlab-pages.conf;&quot;</span><br><span class="line">gitlab-ctl reconfigure</span><br><span class="line">Document single-IP solution for GitLab Pages</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CI/CD </category>
          
          <category> DevOps </category>
          
          <category> 全栈 </category>
          
          <category> Linux </category>
          
          <category> docker </category>
          
          <category> gitlab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> Windows11 </tag>
            
            <tag> WSL </tag>
            
            <tag> WSL2 </tag>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> docker </tag>
            
            <tag> gitlab </tag>
            
            <tag> gitlab-runner </tag>
            
            <tag> CI/CD </tag>
            
            <tag> DevOps </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML基础知识(一)</title>
      <link href="/posts/5c1f3b81/"/>
      <url>/posts/5c1f3b81/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p style="font-size:24px;font-weight:bold;">HTML基础知识(一)</p><ul><li><p>URI：统一资源标识符，一个指向资源的字符串</p><ul><li><p>URL：统一资源定位符，指定Web上资源文件的具体位置。</p><ul><li>在HTTP中，一般称为网络地址或者链接。</li><li>也可用于文件传输(FTP)，电子邮件(SMTP)等其他应用。</li></ul></li><li><p>URN：在给定的命名空间用名字指向具体的资源，例如书本的ISBN。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">urn:isbn:9780141036144</span><br><span class="line">urn:ietf:rfc:7230</span><br><span class="line">//乔治·奥威尔所著的《1984》</span><br><span class="line">//IETF 规范 7230，超文本传输 协议 (HTTP/1.1)：Message Syntax and Routing.</span><br></pre></td></tr></table></figure></li></ul></li><li><p>Data URL：前缀为data:协议的URL，允许内容创建者向文档中嵌入小文件。</p><ul><li>语法：data:[<mediatype>][:base64],<data></li></ul></li><li><p>MIME类型：表示文档、文件、字节流的性质和格式。</p><ul><li><p>格式：type&#x2F;subtype (类型&#x2F;子类型)</p></li><li><p>常用MIME：</p><ul><li><p>text ：文件是普通文本，默认text&#x2F;plain</p><ul><li>text&#x2F;plain、text&#x2F;html、text&#x2F;css、text&#x2F;javascript</li></ul></li><li><p>image：图像</p><ul><li>image&#x2F;gif、image&#x2F;png、image&#x2F;jpeg、image&#x2F;bmp、image&#x2F;webp、image&#x2F;svg+xml、image&#x2F;x-icon、image&#x2F;vnd.microsoft.icon</li></ul></li><li><p>audio：音频</p><ul><li>audio&#x2F;midi、audio&#x2F;mpeg、audio&#x2F;webm、audio&#x2F;ogg、audio&#x2F;wav</li></ul></li><li><p>video：视频</p><ul><li>video&#x2F;webm、video&#x2F;ogg、video&#x2F;mp4</li></ul></li><li><p>application：二进制数据，默认application&#x2F;octet-stream</p><ul><li>application&#x2F;octet-stream、application&#x2F;json、application&#x2F;javascript、application&#x2F;pdf</li></ul></li></ul></li><li><p>Multipart：细分领域的文件类型，用于复合文件类型。</p><ul><li>multipart&#x2F;form-data：用在HTML Forms 、POST方法等。</li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS基础知识(二)</title>
      <link href="/posts/328d6238/"/>
      <url>/posts/328d6238/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p style="font-size:24px;font-weight:bold;">CSS基础知识(二)</p><h3 id="CSS中的百分比"><a href="#CSS中的百分比" class="headerlink" title="CSS中的百分比"></a>CSS中的百分比</h3><h4 id="width、height"><a href="#width、height" class="headerlink" title="width、height"></a>width、height</h4><ul><li>width百分比，相对于父元素的宽度</li><li>height百分比，相对于父元素的高度<ul><li>html默认高度是视口viewport的高度</li><li>实际子元素设置height为100%不一定生效，<strong>子元素的高度由它的内容决定</strong>，且这个子元素不是绝对定位</li></ul></li></ul><h4 id="margin、padding"><a href="#margin、padding" class="headerlink" title="margin、padding"></a>margin、padding</h4><ul><li>margin、padding的上下左右百分比数<strong>相对于父元素的宽度计算</strong>，但是它需要在writing-mode属性值为horizontal-tb水平排布</li></ul><h4 id="border-raduis"><a href="#border-raduis" class="headerlink" title="border-raduis"></a>border-raduis</h4><ul><li>相对于元素本身的宽高</li></ul><h4 id="background-position"><a href="#background-position" class="headerlink" title="background-position"></a>background-position</h4><ul><li>初始值 0% 0%</li><li>相对于图片本身的宽高计算</li></ul><h4 id="font-size"><a href="#font-size" class="headerlink" title="font-size"></a>font-size</h4><ul><li>相对于父元素的字体大小</li></ul><h4 id="line-height"><a href="#line-height" class="headerlink" title="line-height"></a>line-height</h4><ul><li>相对于自身字体大小</li></ul><h4 id="vertical-align"><a href="#vertical-align" class="headerlink" title="vertical-align"></a>vertical-align</h4><ul><li>相对于自身的line-height</li></ul><h4 id="bottom、left、right、top"><a href="#bottom、left、right、top" class="headerlink" title="bottom、left、right、top"></a>bottom、left、right、top</h4><ul><li>left、right相对于父元素的宽度</li><li>bottom、top相对于父元素的高度</li></ul><h4 id="translate"><a href="#translate" class="headerlink" title="translate"></a>translate</h4><ul><li>相对于自身宽高</li></ul><h4 id="flex"><a href="#flex" class="headerlink" title="flex"></a>flex</h4><ul><li>flex&#x3D;1</li></ul><h4 id="百分比的继承"><a href="#百分比的继承" class="headerlink" title="百分比的继承"></a>百分比的继承</h4><ul><li>可继承的元素</li></ul><h3 id="盒子"><a href="#盒子" class="headerlink" title="盒子"></a>盒子</h3><ul><li><p>标准盒子模型：box-sizing: content-box</p><ul><li>content、padding、border、margin</li><li>width、height &#x3D; content+padding+border</li></ul></li><li><p>IE盒子模型：box-sizing: border-box</p><ul><li>content、padding、border、margin</li><li>width、height &#x3D;content-padding-border</li></ul></li><li><p>img、iframe、video等替换元素</p></li></ul><h3 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h3><h4 id="选择器优先级"><a href="#选择器优先级" class="headerlink" title="选择器优先级"></a>选择器优先级</h4><ul><li>!important 10000</li><li>内联样式 1000</li><li>id 100</li><li>class  10</li><li>属性 10</li><li>伪类 10 :hover :active :visited :checked :lang :root :not :is :first-child :focus :nth-child :last-child  指定元素的特殊状态</li><li>标签选择器 1</li><li>关系 1</li><li>伪元素 1   ::before  ::after ::first-line ::first-letter ::marker  ::selection  被选择元素的修改特点样式</li><li>通配符选择器 0</li><li>自定义属性和继承 -1</li></ul><h3 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h3><h4 id="正常流布局"><a href="#正常流布局" class="headerlink" title="正常流布局"></a>正常流布局</h4><h4 id="display"><a href="#display" class="headerlink" title="display"></a>display</h4><h4 id="弹性盒子"><a href="#弹性盒子" class="headerlink" title="弹性盒子"></a>弹性盒子</h4><ul><li><p>flex布局概念：沿着主轴或者交叉轴对齐之中的元素</p><ul><li><p>主轴：flex-direction</p><ul><li>row：默认值，沿着inline方向延申</li><li>row-reverse：沿着inline方向延申，一般指从右往左</li><li>column：沿着block上下方向延申</li><li>column：沿着block上下方向延申，一般指从下往上</li></ul></li><li><p>交叉轴：垂直于主轴</p></li></ul></li><li><p>flex属性</p><ul><li><p>flex-direction：flex元素排列的方向。</p></li><li><p>flex-wrap：多行flex元素排列</p><ul><li>no-wrap：默认值，所有元素一行排列</li><li>wrap：换行排列</li></ul></li><li><p>flex-flow：flex-direction、flex-wrap联合写法。flex-flow:row wrap;</p></li></ul></li><li><p>flex元素属性：为了改变flex容器中的可用空间。</p><ul><li><p>flex-grow：元素延展。</p><ul><li>设定值为正整数，flex元素会以flex-basis为基础，沿着主轴方向增长尺寸，这样元素会延展，并占据在此方向轴上的可用空间。</li><li>如果有其他元素也延展，则各自占据可用空间的一部分。</li><li>设定flex-grow:1，容器中的可用空间被平分，元素会延展并填满主轴方向上的空间。</li><li>可以按照比例分配，如第一个元素flex-grow:2，其他元素为1，则第一个元素占据其他元素的2倍。</li></ul></li><li><p>flex-shrink：元素收缩。flex容器没有足够排列元素的空间，可以设置元素收缩。</p><ul><li>设定值为正整数，元素收缩到flex-basis以下。</li></ul></li><li><p>flex-basis：指定flex元素在主轴方向上的初始空间大小，默认为auto</p><ul><li>检查元素是否指定具体尺寸，例如设定width大小，就指定元素尺寸为width。</li><li>元素没有设定大小，则指定元素尺寸为元素内容的大小。</li></ul></li><li><p>flex属性简写</p><ul><li><p>flex:1 ，表示flex:1 1 0%，元素平分可用空间。</p></li><li><p>flex:initial，表示flex:0 1 auto，初始值</p><ul><li>flex-grow:0，元素不会延申，以flex-basis为标准。</li><li>flex-shrink:1，缩小元素，防止溢出。</li><li>flex-basis:auto，根据元素内容尺寸。</li></ul></li><li><p>flex:auto，表示flex:1 1 auto</p></li><li><p>flex:none，表示flex:0 0 auto，不能伸缩</p></li></ul></li></ul></li><li><p>元素对齐和空间分配</p><ul><li><p>align-item：元素在交叉轴方向对齐。</p><ul><li><p>stretch：默认值，元素拉伸到最高元素的高度，填满容器高度。</p></li><li><p>flex-start：按照flex容器顶部对齐</p></li><li><p>flex-end：按照flex容器底部对齐</p></li><li><p>center：居中对齐</p></li></ul></li><li><p>justify-content：元素在主轴方向对齐。</p><ul><li>flex-start：默认值，按照flex起始线对齐</li><li>flex-end：按照flex终止线对齐</li><li>center：中间对齐</li><li>space-between：两端对齐，元素间隔相等对齐，最左右两边贴近边框</li><li>space-around：每个元素作用空间相等，最左右两边距离边框是元素间隔的一半？</li></ul></li><li><p>align-self：设置单个元素对齐，可覆盖align-item，默认为auto，可继承父元素align-item。</p></li><li><p>justify-self：设置单个元素在主轴方向对其，</p></li></ul></li><li><p>容器对齐和空间分配</p><ul><li><p>align-content：设置多行在交叉轴方向上对齐，对单行无效。</p><ul><li><p>stretch：默认值，均匀分布项目，拉伸‘自动’ - 大小的项目以充满容器 </p></li><li><p>flex-start：按照flex容器顶部对齐</p></li><li><p>flex-end：按照flex容器底部对齐</p></li><li><p>center：居中对齐</p></li><li><p>space-between：均匀分布项目，第一项与起始点齐平，最后一项与终止点齐平</p></li><li><p>space-around：均匀分布项目， 项目在两端有一半大小的空间</p></li><li><p>space-evenly：均匀分布项目，项目周围有相等的空间</p></li></ul></li><li><p>justify-items：设置多行在主轴方向上对齐。</p></li></ul></li></ul><h4 id="网格"><a href="#网格" class="headerlink" title="网格"></a>网格</h4><h4 id="浮动"><a href="#浮动" class="headerlink" title="浮动"></a>浮动</h4><h4 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h4><h4 id="CSS表格布局"><a href="#CSS表格布局" class="headerlink" title="CSS表格布局"></a>CSS表格布局</h4><h4 id="多列布局"><a href="#多列布局" class="headerlink" title="多列布局"></a>多列布局</h4>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript基础知识(三)</title>
      <link href="/posts/98b43d51/"/>
      <url>/posts/98b43d51/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p style="font-size:24px;font-weight:bold;">JavaScript基础知识(三)</p><h3 id="元素"><a href="#元素" class="headerlink" title="&lt;script&gt;元素"></a>&lt;script&gt;元素</h3><h4 id="元素属性"><a href="#元素属性" class="headerlink" title="&lt;script&gt;元素属性"></a>&lt;script&gt;元素属性</h4><ul><li><p>async：可选，异步执行脚本，表示应该立即开始下载脚本，但是不能阻止其他页面动作，比如下载资源或者等待其他脚本加载，不保证按照页面中放置的顺序执行，只对外部脚本文件有效。</p></li><li><p>charset：可选，使用src属性指定的代码字符集。</p></li><li><p>crossorigin：配置相关请求的CORS(跨源资源共享)设置，默认不使用CORS。</p><ul><li>crossorigin&#x3D;anonymous，配置文件请求不必设置凭据标志。</li><li>crossorigin&#x3D;use-credentials，配置凭据标志，出站请求会包含凭据。</li></ul></li><li><p>defer：可选，延迟执行脚本，表示脚本可以延迟到文档完全被解析和显示后再执行，对外部脚本文件有效。</p></li><li><p>integrity：可选，允许比对接收到的资源和指定的加密签名，以验证子资源完整性，签名不匹配则报错，脚本不会执行，确保CDN(内容分发网络)不会提供恶意内容。</p></li><li><p>language：废弃，指定脚本语言，例如JavaScript、VBScript</p></li><li><p>src：可选，包含外部文件。</p></li><li><p>type：可选，代替language，表示脚本语言的内容类型(MIME类型)，默认都是text&#x2F;javascript(已废弃)</p><ul><li>application&#x2F;x-javascript，可能导致脚本被忽略</li><li>application&#x2F;javascript,application&#x2F;ecmascript</li><li>module，ES6模块，可使用import和export关键字。</li></ul></li></ul><h4 id="元素位置"><a href="#元素位置" class="headerlink" title="&lt;script&gt;元素位置"></a>&lt;script&gt;元素位置</h4><ul><li>浏览器按照出现的先后顺序依次解释，前提是没有使用async、defer</li><li>&lt;script&gt;元素放到页面的<code><head></code>内，集中管理，意味着必须把所有脚本语言下载、解释、执行完毕才能渲染页面(浏览器解析到<code><body></code>的起始标签时才开始渲染)，影响体验。</li><li>&lt;script&gt;放到<code><body></code>的页面内容后面。</li></ul><h4 id="动态加载脚本"><a href="#动态加载脚本" class="headerlink" title="动态加载脚本"></a>动态加载脚本</h4><ul><li><p>动态加载脚本，通过创建scipt标签，指定src，添加到页面中去。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> script = <span class="variable language_">document</span>.<span class="title function_">creatElement</span>(<span class="string">&#x27;script&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  script.<span class="property">src</span> = <span class="string">&#x27;somejs.js&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">  script.<span class="property">async</span> = <span class="literal">false</span>; <span class="comment">//设置同步加载</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">document</span>.<span class="property">head</span>.<span class="title function_">appendChild</span>(script);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br></pre></td></tr></table></figure></li><li><p>动态加载脚本是异步执行的，相当于async，默认执行到动态加载前不会执行脚本。</p></li><li><p>动态加载脚本，可指定脚本async&#x3D;false改成同步执行，但是会严重影响性能，因为浏览器预加载器不可见，可以设置预加载器知道这些动态请求文件的存在，在文档头部设置</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;preload&quot;</span> <span class="attr">href</span>=<span class="string">&quot;somejs.js&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="缓存脚本"><a href="#缓存脚本" class="headerlink" title="缓存脚本"></a>缓存脚本</h4><ul><li>两个页面用到用一个js脚本，只下载一次。浏览器使用SPDY&#x2F;HTTP2放入缓存。</li></ul><h4 id="元素-1"><a href="#元素-1" class="headerlink" title="&lt;noscript&gt;元素"></a>&lt;noscript&gt;元素</h4><ul><li>提示不支持脚本和禁用脚本的浏览器</li><li>本身是一个Html元素</li></ul><h3 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h3><h4 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h4><ul><li>变量、函数、属性、函数参数的名称，首字符必须字母、下划线、$，剩下的可以是字母、下划线、$、数字，一般采用驼峰法。关键字、保留字、true、false、null不能用作标识符。</li></ul><h4 id="严格模式"><a href="#严格模式" class="headerlink" title="严格模式"></a>严格模式</h4><ul><li>strict mode ,<code>"use strict";</code> ,参考es3的语法。</li></ul><h4 id="语句"><a href="#语句" class="headerlink" title="语句"></a>语句</h4><h4 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h4><ul><li>特殊用途，表示控制语句的开始、结束、执行特定操作等</li><li>break、do、in、typeof、case、else、var … 33+个</li></ul><h4 id="保留字"><a href="#保留字" class="headerlink" title="保留字"></a>保留字</h4><ul><li>保留给未来用作关键字</li><li>enum：始终保留</li><li>implements、package、public、interface、protected、static、let、private：严格模式保留</li><li>await：模块代码保留</li></ul><h4 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h4><ul><li><p>   松散型，保存任意值的命名占位符。</p></li><li><p><strong>var</strong></p><ul><li><p>定义变量，可改数据类型</p></li><li><p>在函数内部声明作用域，局部变量，全局变量</p></li><li><p>声明提升(hoist)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123; </span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(age); </span><br><span class="line"> <span class="keyword">var</span> age = <span class="number">26</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="title function_">foo</span>(); <span class="comment">// undefined，不会报错</span></span><br><span class="line"></span><br><span class="line"><span class="comment">////相当于</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123; </span><br><span class="line"> <span class="keyword">var</span> age; </span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(age); </span><br><span class="line"> age = <span class="number">26</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="title function_">foo</span>(); <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure></li><li><p>多次、重复声明</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123; </span><br><span class="line"> <span class="keyword">var</span> age = <span class="number">16</span>; </span><br><span class="line"> <span class="keyword">var</span> age = <span class="number">26</span>; </span><br><span class="line"> <span class="keyword">var</span> age = <span class="number">36</span>; </span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(age); </span><br><span class="line">&#125; </span><br><span class="line"><span class="title function_">foo</span>(); <span class="comment">// 36</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>let</strong></p><ul><li><p>跟var最明显的区别，let声明的范围是块作用域。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>) &#123; </span><br><span class="line"> <span class="keyword">let</span> age = <span class="number">26</span>; </span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(age); <span class="comment">// 26 </span></span><br><span class="line">&#125; </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(age); <span class="comment">// ReferenceError: age 没有定义</span></span><br><span class="line"><span class="comment">//说明：age变量的作用域仅限于if内部，块作用域是函数作用域的子集</span></span><br></pre></td></tr></table></figure></li><li><p>不允许重复声明</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name; </span><br><span class="line"><span class="keyword">var</span> name;</span><br><span class="line"><span class="keyword">let</span> name; <span class="comment">//SyntaxError；标识符 name 已经声明过了</span></span><br><span class="line"><span class="keyword">let</span> age; </span><br><span class="line"><span class="keyword">let</span> age; <span class="comment">// SyntaxError；标识符 age 已经声明过了</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//块作用域</span></span><br><span class="line"><span class="keyword">var</span> name = <span class="string">&#x27;Nicholas&#x27;</span>; </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(name); <span class="comment">// &#x27;Nicholas&#x27; </span></span><br><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>) &#123; </span><br><span class="line"> <span class="keyword">var</span> name = <span class="string">&#x27;Matt&#x27;</span>; </span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(name); <span class="comment">// &#x27;Matt&#x27; </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> age = <span class="number">30</span>; </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(age); <span class="comment">// 30 </span></span><br><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>) &#123; </span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(age); <span class="comment">// 30 </span></span><br><span class="line"> <span class="keyword">let</span> age = <span class="number">26</span>; </span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(age); <span class="comment">// 26，不报错</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>let 声明之前的执行瞬间导致暂时性死区，不会在作用域中提升， 不能以任何方式来引用未声明的变量</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// name 会被提升</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(name); <span class="comment">// undefined </span></span><br><span class="line"><span class="keyword">var</span> name = <span class="string">&#x27;Matt&#x27;</span>; </span><br><span class="line"><span class="comment">// age 不会被提升</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(age); <span class="comment">// ReferenceError：age 没有定义</span></span><br><span class="line"><span class="keyword">let</span> age = <span class="number">26</span>; </span><br></pre></td></tr></table></figure></li><li><p>全局声明，let不会成为window对象的属性</p></li><li><p>for循环中的let声明</p></li><li><p>可修改数量类型</p></li></ul></li><li><p><strong>const</strong></p><ul><li><p>不同于let的是声明时必须初始化值</p></li><li><p>不可修改数据类型，但对于引用类型的除外</p></li><li><p>可用于特定循环</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> i = <span class="number">0</span>; </span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> j = <span class="number">7</span>; i &lt; <span class="number">5</span>; ++i) &#123; </span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(j); </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// 7, 7, 7, 7, 7 </span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">in</span> &#123;<span class="attr">a</span>: <span class="number">1</span>, <span class="attr">b</span>: <span class="number">2</span>&#125;) &#123; </span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(key); </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// a, b </span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> value <span class="keyword">of</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]) &#123; </span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(value); </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// 1, 2, 3, 4, 5 </span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>变量使用规则：const &gt; let</p></li></ul><h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><ul><li><p><strong>简单数据类型</strong>(原始类型)</p><ul><li><p>Undefined：为了明确未初始化变量和null的区别，由null派生出来的</p></li><li><p>Null：空对象指针</p></li><li><p>Boolean</p></li><li><p>Number</p><ul><li><p>最大值：Number.MAX_VALUE，1.7976931348623157e+308</p></li><li><p>最小值：Number.MIN_VALUE，5e-324</p></li><li><p>Infinity</p></li><li><p>-Infinity</p></li><li><p>NaN</p><ul><li><p>计算</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">0</span>/<span class="number">0</span>); <span class="comment">// NaN </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(-<span class="number">0</span>/+<span class="number">0</span>); <span class="comment">// NaN</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">NaN</span>/<span class="number">10</span>); <span class="comment">// NaN</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">5</span>/<span class="number">0</span>); <span class="comment">// Infinity </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">5</span>/-<span class="number">0</span>); <span class="comment">// -Infinity</span></span><br></pre></td></tr></table></figure></li><li><p>判断</p><ul><li>isNaN，首先会调用对象的 valueOf() 方法，然后再确定返回的值是否可以转换为数值。如果不能，再调用 toString()方法， 并测试其返回值。这通常是 ECMAScript 内置函数和操作符的工作方式。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">NaN</span> == <span class="title class_">NaN</span>); <span class="comment">// false </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">isNaN</span>(<span class="title class_">NaN</span>)); <span class="comment">// true </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">isNaN</span>(<span class="number">10</span>)); <span class="comment">// false，10 是数值</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">isNaN</span>(<span class="string">&quot;10&quot;</span>)); <span class="comment">// false，可以转换为数值 10 </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">isNaN</span>(<span class="string">&quot;blue&quot;</span>)); <span class="comment">// true，不可以转换为数值</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">isNaN</span>(<span class="literal">true</span>)); <span class="comment">// false，可以转换为数值 1 </span></span><br></pre></td></tr></table></figure><ul><li>Number.isNaN</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Number</span>.<span class="built_in">isNaN</span>(<span class="title class_">NaN</span>)); <span class="comment">// true </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Number</span>.<span class="built_in">isNaN</span>(<span class="number">10</span>)); <span class="comment">// false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Number</span>.<span class="built_in">isNaN</span>(<span class="string">&quot;10&quot;</span>)); <span class="comment">// false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Number</span>.<span class="built_in">isNaN</span>(<span class="string">&quot;blue&quot;</span>)); <span class="comment">// false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Number</span>.<span class="built_in">isNaN</span>(<span class="literal">true</span>)); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><ul><li>Object.is</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">NaN</span> == <span class="title class_">NaN</span>); <span class="comment">// false </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Object</span>.<span class="title function_">is</span>(<span class="title class_">NaN</span>,<span class="title class_">NaN</span>)); <span class="comment">// true </span></span><br></pre></td></tr></table></figure></li><li><p>数值转换</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> num1 = <span class="title class_">Number</span>(<span class="string">&quot;Hello world!&quot;</span>); <span class="comment">// NaN </span></span><br><span class="line"><span class="keyword">let</span> num2 = <span class="title class_">Number</span>(<span class="string">&quot;&quot;</span>); <span class="comment">// 0 </span></span><br><span class="line"><span class="keyword">let</span> num3 = <span class="title class_">Number</span>(<span class="string">&quot;000011&quot;</span>); <span class="comment">// 11 </span></span><br><span class="line"><span class="keyword">let</span> num4 = <span class="title class_">Number</span>(<span class="string">&quot;123&quot;</span>); <span class="comment">// 123</span></span><br><span class="line"><span class="keyword">let</span> num5 = <span class="title class_">Number</span>(<span class="string">&quot;123a&quot;</span>); <span class="comment">// NaN</span></span><br><span class="line"><span class="keyword">let</span> num6 = <span class="title class_">Number</span>(<span class="literal">true</span>); <span class="comment">// 1 </span></span><br><span class="line"><span class="keyword">let</span> num7 = <span class="title class_">Number</span>(<span class="literal">false</span>); <span class="comment">// 0</span></span><br><span class="line"><span class="keyword">let</span> num8 = <span class="title class_">Number</span>(<span class="literal">null</span>); <span class="comment">// 0 </span></span><br><span class="line"><span class="keyword">let</span> num9 = <span class="title class_">Number</span>(<span class="literal">undefined</span>); <span class="comment">// NaN </span></span><br><span class="line"><span class="keyword">let</span> num10 = <span class="title class_">Number</span>(<span class="title class_">NaN</span>); <span class="comment">// NaN </span></span><br><span class="line"><span class="keyword">let</span> num11 = <span class="title class_">Number</span>(&#123;&#125;); <span class="comment">// NaN</span></span><br><span class="line"><span class="keyword">let</span> num12 = <span class="title class_">Number</span>([]); <span class="comment">//0 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> num1 = <span class="built_in">parseInt</span>(<span class="string">&quot;1234blue&quot;</span>); <span class="comment">// 1234 </span></span><br><span class="line"><span class="keyword">let</span> num2 = <span class="built_in">parseInt</span>(<span class="string">&quot;&quot;</span>); <span class="comment">// NaN </span></span><br><span class="line"><span class="keyword">let</span> num3 = <span class="built_in">parseInt</span>(<span class="string">&quot;0xA&quot;</span>); <span class="comment">// 10，解释为十六进制整数</span></span><br><span class="line"><span class="keyword">let</span> num4 = <span class="built_in">parseInt</span>(<span class="number">22.5</span>); <span class="comment">// 22 </span></span><br><span class="line"><span class="keyword">let</span> num5 = <span class="built_in">parseInt</span>(<span class="string">&quot;70&quot;</span>); <span class="comment">// 70，解释为十进制值</span></span><br><span class="line"><span class="keyword">let</span> num6 = <span class="built_in">parseInt</span>(<span class="string">&quot;0xf&quot;</span>); <span class="comment">// 15，解释为十六进制整数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//parseInt()也接收第二个参数，用于指定底数（进制数）</span></span><br><span class="line"><span class="keyword">let</span> num = <span class="built_in">parseInt</span>(<span class="string">&quot;0xAF&quot;</span>, <span class="number">16</span>); <span class="comment">// 175 </span></span><br><span class="line"><span class="keyword">let</span> num1 = <span class="built_in">parseInt</span>(<span class="string">&quot;AF&quot;</span>, <span class="number">16</span>); <span class="comment">// 175 </span></span><br><span class="line"><span class="keyword">let</span> num2 = <span class="built_in">parseInt</span>(<span class="string">&quot;AF&quot;</span>); <span class="comment">// NaN</span></span><br><span class="line"><span class="keyword">let</span> num1 = <span class="built_in">parseInt</span>(<span class="string">&quot;10&quot;</span>, <span class="number">2</span>); <span class="comment">// 2，按二进制解析</span></span><br><span class="line"><span class="keyword">let</span> num2 = <span class="built_in">parseInt</span>(<span class="string">&quot;10&quot;</span>, <span class="number">8</span>); <span class="comment">// 8，按八进制解析</span></span><br><span class="line"><span class="keyword">let</span> num3 = <span class="built_in">parseInt</span>(<span class="string">&quot;10&quot;</span>, <span class="number">10</span>); <span class="comment">// 10，按十进制解析</span></span><br><span class="line"><span class="keyword">let</span> num4 = <span class="built_in">parseInt</span>(<span class="string">&quot;10&quot;</span>, <span class="number">16</span>); <span class="comment">// 16，按十六进制解析</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> num1 = <span class="built_in">parseFloat</span>(<span class="string">&quot;1234blue&quot;</span>); <span class="comment">// 1234，按整数解析</span></span><br><span class="line"><span class="keyword">let</span> num2 = <span class="built_in">parseFloat</span>(<span class="string">&quot;0xA&quot;</span>); <span class="comment">// 0，parseFloat()只解析十进制值</span></span><br><span class="line"><span class="keyword">let</span> num3 = <span class="built_in">parseFloat</span>(<span class="string">&quot;22.5&quot;</span>); <span class="comment">// 22.5 </span></span><br><span class="line"><span class="keyword">let</span> num4 = <span class="built_in">parseFloat</span>(<span class="string">&quot;22.34.5&quot;</span>); <span class="comment">// 22.34 </span></span><br><span class="line"><span class="keyword">let</span> num5 = <span class="built_in">parseFloat</span>(<span class="string">&quot;0908.5&quot;</span>); <span class="comment">// 908.5 </span></span><br><span class="line"><span class="keyword">let</span> num6 = <span class="built_in">parseFloat</span>(<span class="string">&quot;3.125e7&quot;</span>); <span class="comment">// 31250000</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li></ul><p>&#x2F;&#x2F;Number.isInteger()方法，用于辨别一个数值是否保存为整数<br>    console.log(Number.isInteger(1)); &#x2F;&#x2F; true<br>    console.log(Number.isInteger(1.00)); &#x2F;&#x2F; true<br>    console.log(Number.isInteger(1.01)); &#x2F;&#x2F; false</p><pre><code>//Number.isSafeInteger()鉴别整数是否在Number.MIN_SAFE_INTEGER（-2^53 + 1）到 Number.MAX_SAFE_INTEGER（2^53-1）这个范围console.log(Number.isSafeInteger(-1 * (2 ** 53))); // false console.log(Number.isSafeInteger(-1 * (2 ** 53) + 1)); // true console.log(Number.isSafeInteger(2 ** 53)); // false console.log(Number.isSafeInteger((2 ** 53) - 1)); // true <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">  ​    </span><br><span class="line"></span><br><span class="line">+ String</span><br><span class="line"></span><br><span class="line">  + 表示零或多个 16 位 Unicode 字符序列，双引号（&quot;）、 单引号（&#x27;）或反引号（`）标示</span><br><span class="line"></span><br><span class="line">  ```javascript</span><br><span class="line">  let firstName = &quot;John&quot;; </span><br><span class="line">  let lastName = &#x27;Jacob&#x27;; </span><br><span class="line">  let lastName = `Jingleheimerschmidt` </span><br></pre></td></tr></table></figure></code></pre><ul><li><p>常用方法</p><ul><li><p>length</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> message = <span class="string">&quot;abcde&quot;</span>; </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(message.<span class="property">length</span>); <span class="comment">// 5</span></span><br></pre></td></tr></table></figure></li><li><p>charCodeAt(arg?:number)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> message = <span class="string">&quot;abcde&quot;</span>; </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(message.<span class="title function_">charAt</span>(<span class="number">2</span>)); <span class="comment">// &quot;c&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> message = <span class="string">&quot;abcde&quot;</span>; </span><br><span class="line"><span class="comment">// Unicode &quot;Latin small letter C&quot;的编码是 U+0063 </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(message.<span class="title function_">charCodeAt</span>(<span class="number">2</span>)); <span class="comment">// 99</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>codePointAt(arg)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> message = <span class="string">&quot;abde&quot;</span>; </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(message.<span class="title function_">codePointAt</span>(<span class="number">1</span>)); <span class="comment">// 98</span></span><br></pre></td></tr></table></figure></li><li><p>fromCharCode(…arg)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(<span class="number">0x61</span>, <span class="number">0x62</span>, <span class="number">0x63</span>, <span class="number">0x64</span>, <span class="number">0x65</span>)); <span class="comment">// &quot;abcde&quot; </span></span><br></pre></td></tr></table></figure></li><li><p>concat、slice、substr、substring</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//concat()、slice()、substr()、substring()不会修改调用它们的字符串</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> stringValue = <span class="string">&quot;hello &quot;</span>; </span><br><span class="line"><span class="keyword">let</span> result = stringValue.<span class="title function_">concat</span>(<span class="string">&quot;world&quot;</span>); </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result); <span class="comment">// &quot;hello world&quot; </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stringValue); <span class="comment">// &quot;hello&quot; </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> stringValue = <span class="string">&quot;hello &quot;</span>; </span><br><span class="line"><span class="keyword">let</span> result = stringValue.<span class="title function_">concat</span>(<span class="string">&quot;world&quot;</span>, <span class="string">&quot;!&quot;</span>); </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result); <span class="comment">// &quot;hello world!&quot; </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stringValue); <span class="comment">// &quot;hello&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> stringValue = <span class="string">&quot;hello world&quot;</span>; </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stringValue.<span class="title function_">slice</span>(<span class="number">3</span>)); <span class="comment">// &quot;lo world&quot; </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stringValue.<span class="title function_">substring</span>(<span class="number">3</span>)); <span class="comment">// &quot;lo world&quot; </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stringValue.<span class="title function_">substr</span>(<span class="number">3</span>)); <span class="comment">// &quot;lo world&quot; </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stringValue.<span class="title function_">slice</span>(<span class="number">3</span>, <span class="number">7</span>)); <span class="comment">// &quot;lo w&quot; </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stringValue.<span class="title function_">substring</span>(<span class="number">3</span>,<span class="number">7</span>)); <span class="comment">// &quot;lo w&quot; </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stringValue.<span class="title function_">substr</span>(<span class="number">3</span>, <span class="number">7</span>)); <span class="comment">// &quot;lo worl&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>indexOf、lastIndexOf</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> stringValue = <span class="string">&quot;hello world&quot;</span>; </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stringValue.<span class="title function_">indexOf</span>(<span class="string">&quot;o&quot;</span>)); <span class="comment">// 4 </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stringValue.<span class="title function_">lastIndexOf</span>(<span class="string">&quot;o&quot;</span>)); <span class="comment">// 7</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//可选的第二个参数，表示开始搜索的位置，指定的位置开始向字符串末尾搜索，忽略该位置之前的字符</span></span><br><span class="line"><span class="keyword">let</span> stringValue = <span class="string">&quot;hello world&quot;</span>; </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stringValue.<span class="title function_">indexOf</span>(<span class="string">&quot;o&quot;</span>, <span class="number">6</span>)); <span class="comment">// 7 </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stringValue.<span class="title function_">lastIndexOf</span>(<span class="string">&quot;o&quot;</span>, <span class="number">6</span>)); <span class="comment">// 4</span></span><br></pre></td></tr></table></figure></li><li><p>startsWith、endsWith、includes</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> message = <span class="string">&quot;foobarbaz&quot;</span>; </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(message.<span class="title function_">startsWith</span>(<span class="string">&quot;foo&quot;</span>)); <span class="comment">// true </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(message.<span class="title function_">startsWith</span>(<span class="string">&quot;bar&quot;</span>)); <span class="comment">// false </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(message.<span class="title function_">endsWith</span>(<span class="string">&quot;baz&quot;</span>)); <span class="comment">// true </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(message.<span class="title function_">endsWith</span>(<span class="string">&quot;bar&quot;</span>)); <span class="comment">// false </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(message.<span class="title function_">includes</span>(<span class="string">&quot;bar&quot;</span>)); <span class="comment">// true </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(message.<span class="title function_">includes</span>(<span class="string">&quot;qux&quot;</span>)); <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//可选的第二个参数，表示开始搜索的位置。如果传入第二个参数，则意味着这两个方法会从指定位置向着字符串末尾搜索，忽略该位置之前的所有字符。</span></span><br><span class="line"><span class="keyword">let</span> message = <span class="string">&quot;foobarbaz&quot;</span>; </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(message.<span class="title function_">startsWith</span>(<span class="string">&quot;foo&quot;</span>)); <span class="comment">// true </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(message.<span class="title function_">startsWith</span>(<span class="string">&quot;foo&quot;</span>, <span class="number">1</span>)); <span class="comment">// false </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(message.<span class="title function_">includes</span>(<span class="string">&quot;bar&quot;</span>)); <span class="comment">// true </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(message.<span class="title function_">includes</span>(<span class="string">&quot;bar&quot;</span>, <span class="number">4</span>)); <span class="comment">// false</span></span><br></pre></td></tr></table></figure></li><li><p>trim</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> stringValue = <span class="string">&quot; hello world &quot;</span>; </span><br><span class="line"><span class="keyword">let</span> trimmedStringValue = stringValue.<span class="title function_">trim</span>(); </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stringValue); <span class="comment">// &quot; hello world &quot; </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(trimmedStringValue); <span class="comment">// &quot;hello world&quot; </span></span><br></pre></td></tr></table></figure></li><li><p>repeat</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//接收一个整数参数，表示要将字符串复制多少次，然后返回拼接所有副本后的结果</span></span><br><span class="line"><span class="keyword">let</span> stringValue = <span class="string">&quot;na &quot;</span>; </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stringValue.<span class="title function_">repeat</span>(<span class="number">2</span>) + <span class="string">&quot;batman&quot;</span>); <span class="comment">//na na batman</span></span><br></pre></td></tr></table></figure></li><li><p>padStart、 padEnd</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//复制字符串，如果小于指定长度，则在相应一边填充字符，直至满足长度条件</span></span><br><span class="line"><span class="comment">//第一个参数是长度，第二个参数是可选的填充字符串，默认为空格</span></span><br><span class="line"><span class="keyword">let</span> stringValue = <span class="string">&quot;foo&quot;</span>; </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stringValue.<span class="title function_">padStart</span>(<span class="number">6</span>)); <span class="comment">// &quot; foo&quot; </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stringValue.<span class="title function_">padStart</span>(<span class="number">9</span>, <span class="string">&quot;.&quot;</span>)); <span class="comment">// &quot;......foo&quot; </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stringValue.<span class="title function_">padEnd</span>(<span class="number">6</span>)); <span class="comment">// &quot;foo &quot; </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stringValue.<span class="title function_">padEnd</span>(<span class="number">9</span>, <span class="string">&quot;.&quot;</span>)); <span class="comment">// &quot;foo......&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//如果提供了多个字符的字符串，则会将其拼接并截断以匹配指定长度</span></span><br><span class="line"><span class="comment">//如果长度小于或等于字符串长度，则会返回原始字符串</span></span><br><span class="line"><span class="keyword">let</span> stringValue = <span class="string">&quot;foo&quot;</span>; </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stringValue.<span class="title function_">padStart</span>(<span class="number">8</span>, <span class="string">&quot;bar&quot;</span>)); <span class="comment">// &quot;barbafoo&quot; </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stringValue.<span class="title function_">padStart</span>(<span class="number">2</span>)); <span class="comment">// &quot;foo&quot; </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stringValue.<span class="title function_">padEnd</span>(<span class="number">8</span>, <span class="string">&quot;bar&quot;</span>)); <span class="comment">// &quot;foobarba&quot; </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stringValue.<span class="title function_">padEnd</span>(<span class="number">2</span>)); <span class="comment">// &quot;foo&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>@@iterator</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//可以迭代字符串的每个字符</span></span><br><span class="line"><span class="keyword">let</span> message = <span class="string">&quot;abc&quot;</span>; </span><br><span class="line"><span class="keyword">let</span> stringIterator = message[<span class="title class_">Symbol</span>.<span class="property">iterator</span>](); </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stringIterator.<span class="title function_">next</span>()); <span class="comment">// &#123;value: &quot;a&quot;, done: false&#125; </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stringIterator.<span class="title function_">next</span>()); <span class="comment">// &#123;value: &quot;b&quot;, done: false&#125; </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stringIterator.<span class="title function_">next</span>()); <span class="comment">// &#123;value: &quot;c&quot;, done: false&#125; </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stringIterator.<span class="title function_">next</span>()); <span class="comment">// &#123;value: undefined, done: true&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> c <span class="keyword">of</span> <span class="string">&quot;abcde&quot;</span>) &#123; </span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(c); </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// a </span></span><br><span class="line"><span class="comment">// b </span></span><br><span class="line"><span class="comment">// c </span></span><br><span class="line"><span class="comment">// d </span></span><br><span class="line"><span class="comment">// e</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//字符串使用迭代器可以通过解构操作符来解构</span></span><br><span class="line"><span class="keyword">let</span> message = <span class="string">&quot;abcde&quot;</span>; </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>([...message]); <span class="comment">// [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;]</span></span><br></pre></td></tr></table></figure></li><li><p>toUpperCase、toLowerCase</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> stringValue = <span class="string">&quot;hello world&quot;</span>; </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stringValue.<span class="title function_">toLocaleUpperCase</span>()); <span class="comment">// &quot;HELLO WORLD&quot; </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stringValue.<span class="title function_">toUpperCase</span>()); <span class="comment">// &quot;HELLO WORLD&quot; </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stringValue.<span class="title function_">toLocaleLowerCase</span>()); <span class="comment">// &quot;hello world&quot; </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stringValue.<span class="title function_">toLowerCase</span>()); <span class="comment">// &quot;hello world&quot; </span></span><br></pre></td></tr></table></figure></li><li><p>match</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> text = <span class="string">&quot;cat, bat, sat, fat&quot;</span>; </span><br><span class="line"><span class="keyword">let</span> pattern = <span class="regexp">/.at/</span>; </span><br><span class="line"><span class="comment">// 等价于 pattern.exec(text) </span></span><br><span class="line"><span class="keyword">let</span> matches = text.<span class="title function_">match</span>(pattern); </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(matches.<span class="property">index</span>); <span class="comment">// 0 </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(matches[<span class="number">0</span>]); <span class="comment">// &quot;cat&quot; </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(pattern.<span class="property">lastIndex</span>); <span class="comment">// 0 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> text = <span class="string">&quot;cat, bat, sat, fat&quot;</span>; </span><br><span class="line"><span class="keyword">let</span> pos = text.<span class="title function_">search</span>(<span class="regexp">/at/</span>); </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(pos); <span class="comment">// 1 ，即&quot;at&quot;的第一个字符在字符串中的位置</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>replace</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> text = <span class="string">&quot;cat, bat, sat, fat&quot;</span>; </span><br><span class="line"><span class="keyword">let</span> result = text.<span class="title function_">replace</span>(<span class="string">&quot;at&quot;</span>, <span class="string">&quot;ond&quot;</span>); </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result); <span class="comment">// &quot;cond, bat, sat, fat&quot; </span></span><br><span class="line">result = text.<span class="title function_">replace</span>(<span class="regexp">/at/g</span>, <span class="string">&quot;ond&quot;</span>); </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result); <span class="comment">// &quot;cond, bond, sond, fond&quot; </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> text = <span class="string">&quot;cat, bat, sat, fat&quot;</span>; </span><br><span class="line">result = text.<span class="title function_">replace</span>(<span class="regexp">/(.at)/g</span>, <span class="string">&quot;word ($1)&quot;</span>); </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result); <span class="comment">// word (cat), word (bat), word (sat), word (fat) </span></span><br></pre></td></tr></table></figure></li><li><p>split</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> colorText = <span class="string">&quot;red,blue,green,yellow&quot;</span>; </span><br><span class="line"><span class="keyword">let</span> colors1 = colorText.<span class="title function_">split</span>(<span class="string">&quot;,&quot;</span>); <span class="comment">// [&quot;red&quot;, &quot;blue&quot;, &quot;green&quot;, &quot;yellow&quot;] </span></span><br><span class="line"><span class="keyword">let</span> colors2 = colorText.<span class="title function_">split</span>(<span class="string">&quot;,&quot;</span>, <span class="number">2</span>); <span class="comment">// [&quot;red&quot;, &quot;blue&quot;] </span></span><br><span class="line"><span class="keyword">let</span> colors3 = colorText.<span class="title function_">split</span>(<span class="regexp">/[^,]+/</span>); <span class="comment">// [&quot;&quot;, &quot;,&quot;, &quot;,&quot;, &quot;,&quot;, &quot;&quot;]</span></span><br></pre></td></tr></table></figure></li><li><p>localeCompare</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//比较两个字符串</span></span><br><span class="line"><span class="comment">//如果按照字母表顺序，字符串应该排在字符串参数前头，则返回负值。（通常是-1，具体还要看与实际值相关的实现。）</span></span><br><span class="line"><span class="comment">//如果字符串与字符串参数相等，则返回 0。</span></span><br><span class="line"><span class="comment">//如果按照字母表顺序，字符串应该排在字符串参数后头，则返回正值。（通常是 1，具体还要看与实际值相关的实现。)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> stringValue = <span class="string">&quot;yellow&quot;</span>; </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stringValue.<span class="title function_">localeCompare</span>(<span class="string">&quot;brick&quot;</span>)); <span class="comment">// 1 </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stringValue.<span class="title function_">localeCompare</span>(<span class="string">&quot;yellow&quot;</span>)); <span class="comment">// 0 </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(stringValue.<span class="title function_">localeCompare</span>(<span class="string">&quot;zoo&quot;</span>)); <span class="comment">// -1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>Array</p><ul><li><p>创建数组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> colors = <span class="keyword">new</span> <span class="title class_">Array</span>();</span><br><span class="line"><span class="keyword">let</span> colors = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">20</span>);  <span class="comment">// length 为 20</span></span><br><span class="line"><span class="keyword">let</span> colors = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="string">&quot;red&quot;</span>, <span class="string">&quot;blue&quot;</span>, <span class="string">&quot;green&quot;</span>); </span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> colors = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">3</span>); <span class="comment">// 创建一个包含 3 个元素的数组</span></span><br><span class="line"><span class="keyword">let</span> names = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="string">&quot;Greg&quot;</span>); <span class="comment">// 创建一个只包含一个元素，即字符串&quot;Greg&quot;的数组</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//省略 new 操作符</span></span><br><span class="line"><span class="keyword">let</span> colors = <span class="title class_">Array</span>(<span class="number">3</span>); <span class="comment">// 创建一个包含 3 个元素的数组</span></span><br><span class="line"><span class="keyword">let</span> names = <span class="title class_">Array</span>(<span class="string">&quot;Greg&quot;</span>); <span class="comment">// 创建一个只包含一个元素，即字符串&quot;Greg&quot;的数组</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> colors = [<span class="string">&quot;red&quot;</span>, <span class="string">&quot;blue&quot;</span>, <span class="string">&quot;green&quot;</span>]; <span class="comment">// 创建一个包含 3 个元素的数组</span></span><br><span class="line"><span class="keyword">let</span> names = []; <span class="comment">// 创建一个空数组</span></span><br><span class="line"><span class="keyword">let</span> values = [<span class="number">1</span>,<span class="number">2</span>,]; <span class="comment">// 创建一个包含 2 个元素的数组</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> options = [,,,,,]; <span class="comment">// 创建包含 5 个元素的数组</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(options.<span class="property">length</span>); <span class="comment">// 5 </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(options); <span class="comment">// [,,,,,] </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> options = [<span class="number">1</span>,,,,<span class="number">5</span>]; </span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> option <span class="keyword">of</span> options) &#123; </span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(option === <span class="literal">undefined</span>); </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// false </span></span><br><span class="line"><span class="comment">// true </span></span><br><span class="line"><span class="comment">// true </span></span><br><span class="line"><span class="comment">// true </span></span><br><span class="line"><span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> options = [<span class="number">1</span>,,,,<span class="number">5</span>]; </span><br><span class="line"><span class="comment">// map()会跳过空位置</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(options.<span class="title function_">map</span>(<span class="function">() =&gt;</span> <span class="number">6</span>)); <span class="comment">// [6, undefined, undefined, undefined, 6] </span></span><br><span class="line"><span class="comment">// join()视空位置为空字符串</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(options.<span class="title function_">join</span>(<span class="string">&#x27;-&#x27;</span>)); <span class="comment">// &quot;1----5&quot; </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//数组转字符串</span></span><br><span class="line"><span class="keyword">let</span> colors = [<span class="string">&quot;red&quot;</span>, <span class="string">&quot;blue&quot;</span>, <span class="string">&quot;green&quot;</span>]; <span class="comment">// 创建一个包含 3 个字符串的数组</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(colors.<span class="title function_">toString</span>()); <span class="comment">// red,blue,green </span></span><br></pre></td></tr></table></figure></li><li><p>数组检测</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr <span class="keyword">instanceof</span> <span class="title class_">Array</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Array</span>.<span class="title function_">isArray</span>(arr))</span><br><span class="line"></span><br><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(arr) === <span class="string">&#x27;[object Array]&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>数组方法</p><ul><li><p>转换</p><ul><li><p>Array.from(arg1,arg2?,arg3?)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//参数1：想要转换成数组的伪数组对象或可迭代对象</span></span><br><span class="line"><span class="comment">//参数2：可选，如果指定了该参数，新数组中的每个元素会执行该回调函数</span></span><br><span class="line"><span class="comment">//参数3：可选参数，执行回调函数(第二个参数)时 this 对象</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//类数组结构转换为数组实例</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Array</span>.<span class="title function_">from</span>(<span class="string">&quot;Matt&quot;</span>)); <span class="comment">// [&quot;M&quot;, &quot;a&quot;, &quot;t&quot;, &quot;t&quot;]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> m = <span class="keyword">new</span> <span class="title class_">Map</span>().<span class="title function_">set</span>(<span class="number">1</span>, <span class="number">2</span>) </span><br><span class="line"> .<span class="title function_">set</span>(<span class="number">3</span>, <span class="number">4</span>); </span><br><span class="line"><span class="keyword">const</span> s = <span class="keyword">new</span> <span class="title class_">Set</span>().<span class="title function_">add</span>(<span class="number">1</span>) </span><br><span class="line"> .<span class="title function_">add</span>(<span class="number">2</span>) </span><br><span class="line"> .<span class="title function_">add</span>(<span class="number">3</span>) </span><br><span class="line"> .<span class="title function_">add</span>(<span class="number">4</span>); </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Array</span>.<span class="title function_">from</span>(m)); <span class="comment">// [[1, 2], [3, 4]] </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Array</span>.<span class="title function_">from</span>(s)); <span class="comment">// [1, 2, 3, 4] </span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Array.from()对现有数组执行浅复制</span></span><br><span class="line"><span class="keyword">const</span> a1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]; </span><br><span class="line"><span class="keyword">const</span> a2 = <span class="title class_">Array</span>.<span class="title function_">from</span>(a1); </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a1); <span class="comment">// [1, 2, 3, 4] </span></span><br><span class="line"><span class="title function_">alert</span>(a1 === a2); <span class="comment">// false </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//扩展</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Array</span>.<span class="title function_">from</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], <span class="function"><span class="params">x</span> =&gt;</span> x + x)); <span class="comment">//[2, 4, 6]</span></span><br></pre></td></tr></table></figure></li><li><p>Array.of</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//可变数量的参数创建一个新的 Array 实例，而不考虑参数的数量或类型</span></span><br><span class="line"><span class="comment">//于替代在 ES6之前常用的 Array.prototype.slice.call(arguments)，一种异常笨拙的将 arguments 对象转换为数组的写法</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Array</span>.<span class="title function_">of</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)); <span class="comment">// [1, 2, 3, 4] </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Array</span>.<span class="title function_">of</span>(<span class="literal">undefined</span>)); <span class="comment">// [undefined]</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>迭代</p></li></ul></li><li><p>Array.keys()、Array.values()、Array.entries()</p></li><li><p>复制、填充</p><ul><li><p>Array.copyWithin()</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//浅复制数组的一部分到同一数组中的另一个位置，并返回它，不会改变原数组的长度</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>].<span class="title function_">copyWithin</span>(-<span class="number">2</span>)</span><br><span class="line"><span class="comment">// [1, 2, 3, 1, 2]</span></span><br><span class="line"></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>].<span class="title function_">copyWithin</span>(<span class="number">0</span>, <span class="number">3</span>)</span><br><span class="line"><span class="comment">// [4, 5, 3, 4, 5]</span></span><br><span class="line"></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>].<span class="title function_">copyWithin</span>(<span class="number">0</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line"><span class="comment">// [4, 2, 3, 4, 5]</span></span><br><span class="line"></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>].<span class="title function_">copyWithin</span>(-<span class="number">2</span>, -<span class="number">3</span>, -<span class="number">1</span>)</span><br><span class="line"><span class="comment">// [1, 2, 3, 3, 4]</span></span><br><span class="line"></span><br><span class="line">[].<span class="property">copyWithin</span>.<span class="title function_">call</span>(&#123;<span class="attr">length</span>: <span class="number">5</span>, <span class="number">3</span>: <span class="number">1</span>&#125;, <span class="number">0</span>, <span class="number">3</span>);</span><br><span class="line"><span class="comment">// &#123;0: 1, 3: 1, length: 5&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ES2015 Typed Arrays are subclasses of Array</span></span><br><span class="line"><span class="keyword">var</span> i32a = <span class="keyword">new</span> <span class="title class_">Int32Array</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]);</span><br><span class="line"></span><br><span class="line">i32a.<span class="title function_">copyWithin</span>(<span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line"><span class="comment">// Int32Array [3, 4, 5, 4, 5]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// On platforms that are not yet ES2015 compliant:</span></span><br><span class="line">[].<span class="property">copyWithin</span>.<span class="title function_">call</span>(<span class="keyword">new</span> <span class="title class_">Int32Array</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]), <span class="number">0</span>, <span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line"><span class="comment">// Int32Array [4, 2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure></li><li><p>Array.fill()</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用一个固定值填充一个数组中从起始索引到终止索引内的全部元素。不包括终止索引</span></span><br><span class="line"><span class="keyword">const</span> array1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Fill with 0 from position 2 until position 4</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(array1.<span class="title function_">fill</span>(<span class="number">0</span>, <span class="number">2</span>, <span class="number">4</span>));</span><br><span class="line"><span class="comment">// Expected output: Array [1, 2, 0, 0]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Fill with 5 from position 1</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(array1.<span class="title function_">fill</span>(<span class="number">5</span>, <span class="number">1</span>));</span><br><span class="line"><span class="comment">// Expected output: Array [1, 5, 5, 5]</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(array1.<span class="title function_">fill</span>(<span class="number">6</span>));</span><br><span class="line"><span class="comment">// Expected output: Array [6, 6, 6, 6]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>].<span class="title function_">fill</span>(<span class="number">4</span>);               <span class="comment">// [4, 4, 4]</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>].<span class="title function_">fill</span>(<span class="number">4</span>, <span class="number">1</span>);            <span class="comment">// [1, 4, 4]</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>].<span class="title function_">fill</span>(<span class="number">4</span>, <span class="number">1</span>, <span class="number">2</span>);         <span class="comment">// [1, 4, 3]</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>].<span class="title function_">fill</span>(<span class="number">4</span>, <span class="number">1</span>, <span class="number">1</span>);         <span class="comment">// [1, 2, 3]</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>].<span class="title function_">fill</span>(<span class="number">4</span>, <span class="number">3</span>, <span class="number">3</span>);         <span class="comment">// [1, 2, 3]</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>].<span class="title function_">fill</span>(<span class="number">4</span>, -<span class="number">3</span>, -<span class="number">2</span>);       <span class="comment">// [4, 2, 3]</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>].<span class="title function_">fill</span>(<span class="number">4</span>, <span class="title class_">NaN</span>, <span class="title class_">NaN</span>);     <span class="comment">// [1, 2, 3]</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>].<span class="title function_">fill</span>(<span class="number">4</span>, <span class="number">3</span>, <span class="number">5</span>);         <span class="comment">// [1, 2, 3]</span></span><br><span class="line"><span class="title class_">Array</span>(<span class="number">3</span>).<span class="title function_">fill</span>(<span class="number">4</span>);                <span class="comment">// [4, 4, 4]</span></span><br><span class="line">[].<span class="property">fill</span>.<span class="title function_">call</span>(&#123; <span class="attr">length</span>: <span class="number">3</span> &#125;, <span class="number">4</span>);  <span class="comment">// &#123;0: 4, 1: 4, 2: 4, length: 3&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Objects by reference.</span></span><br><span class="line"><span class="keyword">const</span> arr = <span class="title class_">Array</span>(<span class="number">3</span>).<span class="title function_">fill</span>(&#123;&#125;) <span class="comment">// [&#123;&#125;, &#123;&#125;, &#123;&#125;];</span></span><br><span class="line"><span class="comment">// 需要注意如果 fill 的参数为引用类型，会导致都执行同一个引用类型</span></span><br><span class="line"><span class="comment">// 如 arr[0] === arr[1] 为 true</span></span><br><span class="line">arr[<span class="number">0</span>].<span class="property">hi</span> = <span class="string">&quot;hi&quot;</span>; <span class="comment">// [&#123; hi: &quot;hi&quot; &#125;, &#123; hi: &quot;hi&quot; &#125;, &#123; hi: &quot;hi&quot; &#125;]</span></span><br></pre></td></tr></table></figure></li><li><p>常用方法</p><ul><li>pop</li><li>push</li><li>shift</li><li>unshift</li><li>reduce</li><li>reduceRight</li><li>splice</li><li>reverse</li><li>sort</li><li>slice</li><li>at</li><li>concat</li><li>find</li><li>findIndex</li><li>findlast</li><li>findLastIndex</li><li>flat</li><li>flatMap</li><li>forEach</li><li>includes</li><li>indexOf</li><li>lastIndexOf</li><li>join</li><li>some</li><li>every</li><li>filter</li><li>map</li></ul></li></ul></li></ul></li><li><p>Symbol</p><ul><li>确保对象属性使用唯一标识符，不会发生属性冲突的危险。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> sym = <span class="title class_">Symbol</span>(); </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> sym); <span class="comment">// symbol </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> fooSymbol = <span class="title class_">Symbol</span>(<span class="string">&#x27;foo&#x27;</span>); </span><br><span class="line"><span class="keyword">let</span> otherFooSymbol = <span class="title class_">Symbol</span>(<span class="string">&#x27;foo&#x27;</span>); </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(fooSymbol == otherFooSymbol); <span class="comment">// false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(fooSymbol); <span class="comment">// Symbol(foo);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> fooGlobalSymbol = <span class="title class_">Symbol</span>.<span class="title function_">for</span>(<span class="string">&#x27;foo&#x27;</span>); </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> fooGlobalSymbol); <span class="comment">// symbol</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(fooGlobalSymbol); <span class="comment">// Symbol(foo)</span></span><br><span class="line"><span class="keyword">let</span> fooGlobalSymbol = <span class="title class_">Symbol</span>.<span class="title function_">for</span>(<span class="string">&#x27;foo&#x27;</span>); <span class="comment">// 创建新符号</span></span><br><span class="line"><span class="keyword">let</span> otherFooGlobalSymbol = <span class="title class_">Symbol</span>.<span class="title function_">for</span>(<span class="string">&#x27;foo&#x27;</span>); <span class="comment">// 重用已有符号</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(fooGlobalSymbol === otherFooGlobalSymbol); <span class="comment">// true </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> localSymbol = <span class="title class_">Symbol</span>(<span class="string">&#x27;foo&#x27;</span>); </span><br><span class="line"><span class="keyword">let</span> globalSymbol = <span class="title class_">Symbol</span>.<span class="title function_">for</span>(<span class="string">&#x27;foo&#x27;</span>); </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(localSymbol === globalSymbol); <span class="comment">// false </span></span><br></pre></td></tr></table></figure></li><li><p>Map、WeakMap</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> m = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line"><span class="keyword">const</span> m1 = <span class="keyword">new</span> <span class="title class_">Map</span>([ </span><br><span class="line"> [<span class="string">&quot;key1&quot;</span>, <span class="string">&quot;val1&quot;</span>], </span><br><span class="line"> [<span class="string">&quot;key2&quot;</span>, <span class="string">&quot;val2&quot;</span>], </span><br><span class="line"> [<span class="string">&quot;key3&quot;</span>, <span class="string">&quot;val3&quot;</span>] </span><br><span class="line">]); </span><br><span class="line"><span class="title function_">alert</span>(m1.<span class="property">size</span>); <span class="comment">// 3 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> m = <span class="keyword">new</span> <span class="title class_">Map</span>(); </span><br><span class="line"><span class="title function_">alert</span>(m.<span class="title function_">has</span>(<span class="string">&quot;firstName&quot;</span>)); <span class="comment">// false </span></span><br><span class="line"><span class="title function_">alert</span>(m.<span class="title function_">get</span>(<span class="string">&quot;firstName&quot;</span>)); <span class="comment">// undefined </span></span><br><span class="line"><span class="title function_">alert</span>(m.<span class="property">size</span>); <span class="comment">// 0 </span></span><br><span class="line">m.<span class="title function_">set</span>(<span class="string">&quot;firstName&quot;</span>, <span class="string">&quot;Matt&quot;</span>) </span><br><span class="line"> .<span class="title function_">set</span>(<span class="string">&quot;lastName&quot;</span>, <span class="string">&quot;Frisbie&quot;</span>); </span><br><span class="line"><span class="title function_">alert</span>(m.<span class="title function_">has</span>(<span class="string">&quot;firstName&quot;</span>)); <span class="comment">// true </span></span><br><span class="line"><span class="title function_">alert</span>(m.<span class="title function_">get</span>(<span class="string">&quot;firstName&quot;</span>)); <span class="comment">// Matt </span></span><br><span class="line"><span class="title function_">alert</span>(m.<span class="property">size</span>); <span class="comment">// 2 </span></span><br><span class="line">m.<span class="title function_">delete</span>(<span class="string">&quot;firstName&quot;</span>); <span class="comment">// 只删除这一个键/值对</span></span><br><span class="line"><span class="title function_">alert</span>(m.<span class="title function_">has</span>(<span class="string">&quot;firstName&quot;</span>)); <span class="comment">// false </span></span><br><span class="line"><span class="title function_">alert</span>(m.<span class="title function_">has</span>(<span class="string">&quot;lastName&quot;</span>)); <span class="comment">// true </span></span><br><span class="line"><span class="title function_">alert</span>(m.<span class="property">size</span>); <span class="comment">// 1 </span></span><br><span class="line">m.<span class="title function_">clear</span>(); <span class="comment">// 清除这个映射实例中的所有键/值对</span></span><br><span class="line"><span class="title function_">alert</span>(m.<span class="title function_">has</span>(<span class="string">&quot;firstName&quot;</span>)); <span class="comment">// false </span></span><br><span class="line"><span class="title function_">alert</span>(m.<span class="title function_">has</span>(<span class="string">&quot;lastName&quot;</span>)); <span class="comment">// false </span></span><br><span class="line"><span class="title function_">alert</span>(m.<span class="property">size</span>); <span class="comment">// 0 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> m = <span class="keyword">new</span> <span class="title class_">Map</span>().<span class="title function_">set</span>(<span class="string">&quot;key1&quot;</span>, <span class="string">&quot;val1&quot;</span>); </span><br><span class="line">m.<span class="title function_">set</span>(<span class="string">&quot;key2&quot;</span>, <span class="string">&quot;val2&quot;</span>) </span><br><span class="line"> .<span class="title function_">set</span>(<span class="string">&quot;key3&quot;</span>, <span class="string">&quot;val3&quot;</span>); </span><br><span class="line"><span class="title function_">alert</span>(m.<span class="property">size</span>); <span class="comment">// 3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> m = <span class="keyword">new</span> <span class="title class_">Map</span>([ </span><br><span class="line"> [<span class="string">&quot;key1&quot;</span>, <span class="string">&quot;val1&quot;</span>], </span><br><span class="line"> [<span class="string">&quot;key2&quot;</span>, <span class="string">&quot;val2&quot;</span>], </span><br><span class="line"> [<span class="string">&quot;key3&quot;</span>, <span class="string">&quot;val3&quot;</span>] </span><br><span class="line">]); </span><br><span class="line"><span class="title function_">alert</span>(m.<span class="property">entries</span> === m[<span class="title class_">Symbol</span>.<span class="property">iterator</span>]); <span class="comment">// true </span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> pair <span class="keyword">of</span> m.<span class="title function_">entries</span>()) &#123; </span><br><span class="line"> <span class="title function_">alert</span>(pair); </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// [key1,val1] </span></span><br><span class="line"><span class="comment">// [key2,val2] </span></span><br><span class="line"><span class="comment">// [key3,val3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> m = <span class="keyword">new</span> <span class="title class_">Map</span>([ </span><br><span class="line"> [<span class="string">&quot;key1&quot;</span>, <span class="string">&quot;val1&quot;</span>], </span><br><span class="line"> [<span class="string">&quot;key2&quot;</span>, <span class="string">&quot;val2&quot;</span>], </span><br><span class="line"> [<span class="string">&quot;key3&quot;</span>, <span class="string">&quot;val3&quot;</span>] </span><br><span class="line">]); </span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">of</span> m.<span class="title function_">keys</span>()) &#123; </span><br><span class="line"> <span class="title function_">alert</span>(key); </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// key1 </span></span><br><span class="line"><span class="comment">// key2 </span></span><br><span class="line"><span class="comment">// key3 </span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">of</span> m.<span class="title function_">values</span>()) &#123; </span><br><span class="line"> <span class="title function_">alert</span>(key); </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// value1 </span></span><br><span class="line"><span class="comment">// value2 </span></span><br><span class="line"><span class="comment">// value3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">/////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">因为 WeakMap 中的键/值对任何时候都可能被销毁，所以没必要提供迭代其键/值对的能力。当然，</span></span><br><span class="line"><span class="comment">也用不着像 clear()这样一次性销毁所有键/值的方法。WeakMap 确实没有这个方法。因为不可能迭代，</span></span><br><span class="line"><span class="comment">所以也不可能在不知道对象引用的情况下从弱映射中取得值。即便代码可以访问 WeakMap 实例，也没</span></span><br><span class="line"><span class="comment">办法看到其中的内容</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">const</span> key1 = &#123;<span class="attr">id</span>: <span class="number">1</span>&#125;, key2 = &#123;<span class="attr">id</span>: <span class="number">2</span>&#125;,key3 = &#123;<span class="attr">id</span>: <span class="number">3</span>&#125;; </span><br><span class="line"><span class="keyword">const</span> wm1 = <span class="keyword">new</span> <span class="title class_">WeakMap</span>([ </span><br><span class="line"> [key1, <span class="string">&quot;val1&quot;</span>], </span><br><span class="line"> [key2, <span class="string">&quot;val2&quot;</span>], </span><br><span class="line"> [key3, <span class="string">&quot;val3&quot;</span>] </span><br><span class="line">]); </span><br><span class="line"><span class="title function_">alert</span>(wm1.<span class="title function_">get</span>(key1)); <span class="comment">// val1 </span></span><br><span class="line"><span class="title function_">alert</span>(wm1.<span class="title function_">get</span>(key2)); <span class="comment">// val2 </span></span><br><span class="line"><span class="title function_">alert</span>(wm1.<span class="title function_">get</span>(key3)); <span class="comment">// val3 </span></span><br></pre></td></tr></table></figure></li><li><p>Set、WeakSet</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> m = <span class="keyword">new</span> <span class="title class_">Set</span>(); </span><br><span class="line"><span class="keyword">const</span> s1 = <span class="keyword">new</span> <span class="title class_">Set</span>([<span class="string">&quot;val1&quot;</span>, <span class="string">&quot;val2&quot;</span>, <span class="string">&quot;val3&quot;</span>]); </span><br><span class="line"><span class="title function_">alert</span>(s1.<span class="property">size</span>); <span class="comment">// 3 </span></span><br><span class="line"><span class="keyword">const</span> s = <span class="keyword">new</span> <span class="title class_">Set</span>(); </span><br><span class="line"><span class="title function_">alert</span>(s.<span class="title function_">has</span>(<span class="string">&quot;Matt&quot;</span>)); <span class="comment">// false </span></span><br><span class="line"><span class="title function_">alert</span>(s.<span class="property">size</span>); <span class="comment">// 0 </span></span><br><span class="line">s.<span class="title function_">add</span>(<span class="string">&quot;Matt&quot;</span>) </span><br><span class="line"> .<span class="title function_">add</span>(<span class="string">&quot;Frisbie&quot;</span>); </span><br><span class="line"><span class="title function_">alert</span>(s.<span class="title function_">has</span>(<span class="string">&quot;Matt&quot;</span>)); <span class="comment">// true </span></span><br><span class="line"><span class="title function_">alert</span>(s.<span class="property">size</span>); <span class="comment">// 2 </span></span><br><span class="line">s.<span class="title function_">delete</span>(<span class="string">&quot;Matt&quot;</span>); </span><br><span class="line"><span class="title function_">alert</span>(s.<span class="title function_">has</span>(<span class="string">&quot;Matt&quot;</span>)); <span class="comment">// false </span></span><br><span class="line"><span class="title function_">alert</span>(s.<span class="title function_">has</span>(<span class="string">&quot;Frisbie&quot;</span>)); <span class="comment">// true </span></span><br><span class="line"><span class="title function_">alert</span>(s.<span class="property">size</span>); <span class="comment">// 1 </span></span><br><span class="line">s.<span class="title function_">clear</span>(); <span class="comment">// 销毁集合实例中的所有值</span></span><br><span class="line"><span class="title function_">alert</span>(s.<span class="title function_">has</span>(<span class="string">&quot;Matt&quot;</span>)); <span class="comment">// false </span></span><br><span class="line"><span class="title function_">alert</span>(s.<span class="title function_">has</span>(<span class="string">&quot;Frisbie&quot;</span>)); <span class="comment">// false </span></span><br><span class="line"><span class="title function_">alert</span>(s.<span class="property">size</span>); <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> s = <span class="keyword">new</span> <span class="title class_">Set</span>().<span class="title function_">add</span>(<span class="string">&quot;val1&quot;</span>); </span><br><span class="line">s.<span class="title function_">add</span>(<span class="string">&quot;val2&quot;</span>) </span><br><span class="line"> .<span class="title function_">add</span>(<span class="string">&quot;val3&quot;</span>); </span><br><span class="line"><span class="title function_">alert</span>(s.<span class="property">size</span>); <span class="comment">// 3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> s = <span class="keyword">new</span> <span class="title class_">Set</span>(); </span><br><span class="line"><span class="keyword">const</span> functionVal = <span class="keyword">function</span>(<span class="params"></span>) &#123;&#125;; </span><br><span class="line"><span class="keyword">const</span> symbolVal = <span class="title class_">Symbol</span>(); </span><br><span class="line"><span class="keyword">const</span> objectVal = <span class="keyword">new</span> <span class="title class_">Object</span>(); </span><br><span class="line">s.<span class="title function_">add</span>(functionVal); </span><br><span class="line">s.<span class="title function_">add</span>(symbolVal); </span><br><span class="line">s.<span class="title function_">add</span>(objectVal); </span><br><span class="line"><span class="title function_">alert</span>(s.<span class="title function_">has</span>(functionVal)); <span class="comment">// true </span></span><br><span class="line"><span class="title function_">alert</span>(s.<span class="title function_">has</span>(symbolVal)); <span class="comment">// true </span></span><br><span class="line"><span class="title function_">alert</span>(s.<span class="title function_">has</span>(objectVal)); <span class="comment">// true </span></span><br><span class="line"><span class="comment">// SameValueZero 检查意味着独立的实例不会冲突</span></span><br><span class="line"><span class="title function_">alert</span>(s.<span class="title function_">has</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;&#125;)); <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">因为 WeakSet 中的值任何时候都可能被销毁，所以没必要提供迭代其值的能力。当然，也用不着</span></span><br><span class="line"><span class="comment">像 clear()这样一次性销毁所有值的方法。WeakSet 确实没有这个方法。因为不可能迭代，所以也不</span></span><br><span class="line"><span class="comment">可能在不知道对象引用的情况下从弱集合中取得值。即便代码可以访问 WeakSet 实例，也没办法看到</span></span><br><span class="line"><span class="comment">其中的内容。</span></span><br><span class="line"><span class="comment">WeakSet 之所以限制只能用对象作为值，是为了保证只有通过值对象的引用才能取得值。如果允许</span></span><br><span class="line"><span class="comment">原始值，那就没办法区分初始化时使用的字符串字面量和初始化之后使用的一个相等的字符串了。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">const</span> ws = <span class="keyword">new</span> <span class="title class_">WeakSet</span>(); </span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> val1 = &#123;<span class="attr">id</span>: <span class="number">1</span>&#125;, </span><br><span class="line"> val2 = &#123;<span class="attr">id</span>: <span class="number">2</span>&#125;, </span><br><span class="line"> val3 = &#123;<span class="attr">id</span>: <span class="number">3</span>&#125;; </span><br><span class="line"><span class="comment">// 使用数组初始化弱集合</span></span><br><span class="line"><span class="keyword">const</span> ws1 = <span class="keyword">new</span> <span class="title class_">WeakSet</span>([val1, val2, val3]); </span><br><span class="line"><span class="title function_">alert</span>(ws1.<span class="title function_">has</span>(val1)); <span class="comment">// true </span></span><br><span class="line"><span class="title function_">alert</span>(ws1.<span class="title function_">has</span>(val2)); <span class="comment">// true </span></span><br><span class="line"><span class="title function_">alert</span>(ws1.<span class="title function_">has</span>(val3)); <span class="comment">// true </span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>引用类型</p></li><li><p>数据类型检测</p><ul><li><p>typeof ：是一个操作数，可以使用参数，括号里面放入被检测的数据，但不是函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> s = <span class="string">&quot;Nicholas&quot;</span>; </span><br><span class="line"><span class="keyword">let</span> b = <span class="literal">true</span>; </span><br><span class="line"><span class="keyword">let</span> i = <span class="number">22</span>; </span><br><span class="line"><span class="keyword">let</span> u; </span><br><span class="line"><span class="keyword">let</span> n = <span class="literal">null</span>; </span><br><span class="line"><span class="keyword">let</span> o = <span class="keyword">new</span> <span class="title class_">Object</span>(); </span><br><span class="line"><span class="keyword">let</span> arr = <span class="keyword">new</span> <span class="title class_">Array</span>();</span><br><span class="line"><span class="keyword">let</span> f = <span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> s); <span class="comment">// string </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> i); <span class="comment">// number </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> b); <span class="comment">// boolean </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> u); <span class="comment">// undefined </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> n); <span class="comment">// object </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> o); <span class="comment">// object</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> arr); <span class="comment">// object</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> f); <span class="comment">// function,任何实现内部[[Call]]方法的对象都应该在typeof检测时返回&quot;function&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> <span class="title class_">Array</span>); <span class="comment">// function</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> <span class="title class_">Object</span>); <span class="comment">// function</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> <span class="title class_">Date</span>); <span class="comment">// function</span></span><br></pre></td></tr></table></figure></li><li><p>instanceof ：判断是什么类型的对象，判断变量是给定引用类型的实例</p><ul><li><p>所有引用值都是 Object 的实例</p></li><li><p>用 instanceof 检测原始值，则始终会返回 false， 因为原始值不是对象。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Array</span> <span class="keyword">instanceof</span> <span class="title class_">Object</span>); <span class="comment">//true</span></span><br><span class="line"><span class="keyword">let</span> arr = <span class="keyword">new</span> <span class="title class_">Array</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr <span class="keyword">instanceof</span> <span class="title class_">Object</span>); <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> f = <span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(f <span class="keyword">instanceof</span> <span class="title class_">Object</span>); <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Object</span> <span class="keyword">instanceof</span> <span class="title class_">Object</span>);<span class="comment">//true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul><h4 id="数据转换"><a href="#数据转换" class="headerlink" title="数据转换"></a>数据转换</h4><ul><li><p>&#x3D;&#x3D;</p><ul><li>如果任一操作数是布尔值，则将其转换为数值再比较是否相等。false 转换为 0，true 转换为1。</li><li>如果一个操作数是字符串，另一个操作数是数值，则尝试将字符串转换为数值，再比较是否相等。</li><li>如果一个操作数是对象，另一个操作数不是，则调用对象的 valueOf()方法取得其原始值，再根据前面的规则进行比较。</li><li>null 和 undefined 相等。</li><li>null 和 undefined 不能转换为其他类型的值再进行比较。</li><li>如果有任一操作数是 NaN，则相等操作符返回 false，不相等操作符返回 true。NaN不等于NaN。</li><li>如果两个操作数都是对象，则比较它们是不是同一个对象。</li></ul></li><li><p>&#x3D;&#x3D;&#x3D;</p><ul><li>只有两个操作数在不转换的前提下相等才返回 true。</li></ul></li></ul><h4 id="执行上下文-作用域"><a href="#执行上下文-作用域" class="headerlink" title="执行上下文(作用域)"></a>执行上下文(作用域)</h4><ul><li><p>针对变量、函数，上下文决定它们可以访问哪些数据以及它们的行为。</p></li><li><p>每个上下文都有关联一个变量对象，这个上下文中定义的所有变量和函数都在这个对象中。</p></li><li><p>全局上下文</p><ul><li>浏览器中是windows对象。</li></ul></li><li><p>上下文在所有代码都执行完毕后会被销毁，包括变量和函数，全局上下文会在应用退出销毁，如关闭网页或者退出浏览器。</p></li><li><p>每个函数都有自己的上下文，当代码执行流进入函数时，函数的上下文会被推到一个<strong>上下文栈</strong>上，函数执行完毕，上下文会弹出该函数的上下文，把控制权返还给之前的上下文。JS执行流是通过上下文栈进行控制的。</p></li></ul><h4 id="作用域链"><a href="#作用域链" class="headerlink" title="作用域链"></a>作用域链</h4><ul><li>上下文中的代码执行时，每进入一个新的上下文，都会创建变量对象的一个<strong>作用域链</strong>(scope chain),作用域链决定了各级上下文中的代码在访问变量和函数的顺序。</li></ul><h4 id="垃圾回收"><a href="#垃圾回收" class="headerlink" title="垃圾回收"></a>垃圾回收</h4><ul><li>标记清理</li><li>引用计数</li></ul><h4 id="全局对象"><a href="#全局对象" class="headerlink" title="全局对象"></a>全局对象</h4><ul><li><p>Global</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">undefined 特殊值 undefined</span><br><span class="line">NaN 特殊值 NaN</span><br><span class="line">Infinity 特殊值 Infinity</span><br><span class="line">Object Object 的构造函数</span><br><span class="line">Array Array 的构造函数</span><br><span class="line">Function Function 的构造函数</span><br><span class="line">Boolean Boolean 的构造函数</span><br><span class="line">String String 的构造函数</span><br><span class="line">Number Number 的构造函数</span><br><span class="line">Date Date 的构造函数</span><br><span class="line">RegExp RegExp 的构造函数</span><br><span class="line">Symbol Symbol 的伪构造函数</span><br><span class="line">Error Error 的构造函数</span><br><span class="line">EvalError EvalError 的构造函数</span><br><span class="line">RangeError RangeError 的构造函数</span><br><span class="line">ReferenceError ReferenceError 的构造函数</span><br><span class="line">SyntaxError SyntaxError 的构造函数</span><br><span class="line">TypeError TypeError 的构造函数</span><br><span class="line">URIError URIError 的构造函数</span><br></pre></td></tr></table></figure></li><li><p>window</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//浏览器将 window 对象实现为 Global对象的代理</span></span><br></pre></td></tr></table></figure></li><li><p>Math</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// Math.ceil()方法始终向上舍入为最接近的整数。</span></span><br><span class="line"><span class="comment">// Math.floor()方法始终向下舍入为最接近的整数。</span></span><br><span class="line"><span class="comment">// Math.round()方法执行四舍五入。</span></span><br><span class="line"><span class="comment">// Math.fround()方法返回数值最接近的单精度（32 位）浮点值表示。</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">ceil</span>(<span class="number">25.9</span>)); <span class="comment">// 26 </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">ceil</span>(<span class="number">25.5</span>)); <span class="comment">// 26 </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">ceil</span>(<span class="number">25.1</span>)); <span class="comment">// 26 </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">round</span>(<span class="number">25.9</span>)); <span class="comment">// 26 </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">round</span>(<span class="number">25.5</span>)); <span class="comment">// 26 </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">round</span>(<span class="number">25.1</span>)); <span class="comment">// 25 </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">fround</span>(<span class="number">0.4</span>)); <span class="comment">// 0.4000000059604645 </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">fround</span>(<span class="number">0.5</span>)); <span class="comment">// 0.5 </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">fround</span>(<span class="number">25.9</span>)); <span class="comment">// 25.899999618530273 </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="number">25.9</span>)); <span class="comment">// 25 </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="number">25.5</span>)); <span class="comment">// 25 </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="number">25.1</span>)); <span class="comment">// 25 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Math.random()方法返回一个 0~1 范围内的随机数，其中包含 0 但不包含 1</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="对象、类"><a href="#对象、类" class="headerlink" title="对象、类"></a>对象、类</h3>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> JavaScript </tag>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何判断是否为移动端</title>
      <link href="/posts/c41efd2e/"/>
      <url>/posts/c41efd2e/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> 移动端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 移动端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webpack基础知识</title>
      <link href="/posts/6a8991ce/"/>
      <url>/posts/6a8991ce/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p style="font-size:24px;font-weight:bold;">webpack基础知识</p><h2 id="webpack基本概念"><a href="#webpack基本概念" class="headerlink" title="webpack基本概念"></a>webpack基本概念</h2><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ul><li>静态模块打包工具</li><li>支持模块化</li></ul><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><ul><li><p>入口(entry)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//webpack.config.js</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">entry</span>:<span class="string">&#x27;./src/index.js&#x27;</span> <span class="comment">//指定webpack的入口，使用该模块作为构建依赖图(dependency graph)的开始，进入该起点，找出依赖的模块和库</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>输出(output)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//webpack.config.js</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"></span><br><span class="line">moudule.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">entry</span>:<span class="string">&#x27;./path/to/my/entry/file.js&#x27;</span>,</span><br><span class="line">  <span class="attr">output</span>:&#123;</span><br><span class="line">  <span class="attr">path</span>:path.<span class="title function_">resolve</span>(__dirname,<span class="string">&quot;dist&quot;</span>),<span class="comment">//指定打包后的文件位置</span></span><br><span class="line">    <span class="attr">filename</span>:<span class="string">&#x27;my-webpack-bundle.js&#x27;</span> <span class="comment">//指定打包后的文件名</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>loader</p><ul><li><p>webpack只能理解js和json文件，webpack处理其他类型的文件需要loader,通过loader将这些类型的文件转换为有效模块，添加到依赖图中</p></li><li><p>loader的属性</p><ul><li>test：识别哪些类型的文件需要被转换</li><li>use：定义出转换时需要哪些loader</li></ul></li><li><p>loader的使用</p><ul><li><p>安装相应的loader</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install  --save-dev raw-loader</span><br></pre></td></tr></table></figure></li><li><p>配置loader</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//webpack.config.js</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"></span><br><span class="line">moudule.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">entry</span>:<span class="string">&#x27;./path/to/my/entry/file.js&#x27;</span>,</span><br><span class="line">  <span class="attr">output</span>:&#123;</span><br><span class="line">  <span class="attr">path</span>:path.<span class="title function_">resolve</span>(__dirname,<span class="string">&quot;dist&quot;</span>),<span class="comment">//指定打包后的文件位置</span></span><br><span class="line">    <span class="attr">filename</span>:<span class="string">&#x27;my-webpack-bundle.js&#x27;</span> <span class="comment">//指定打包后的文件名</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">module</span>:&#123;</span><br><span class="line">    <span class="attr">rules</span>:[&#123;</span><br><span class="line">      <span class="attr">test</span>:<span class="regexp">/\.txt$/i</span>, <span class="comment">//转换txt类型的文件</span></span><br><span class="line">      <span class="attr">use</span>:<span class="string">&#x27;raw-loader&#x27;</span></span><br><span class="line">    &#125;]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>plugin</p><ul><li><p>plugin(插件)主要用于执行更广的任务，例如打包优化、资源管理、注入环境变量等额外的工作</p></li><li><p>plugin的使用</p><ul><li><p>安装需要的plugin</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev html-webpack-plugin</span><br></pre></td></tr></table></figure></li><li><p>配置plugin</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//webpack.config.js</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">HtmlWebpackPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;html-webpack-plugin&#x27;</span>) <span class="comment">//引入</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"></span><br><span class="line">moudule.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">entry</span>:<span class="string">&#x27;./path/to/my/entry/file.js&#x27;</span>,</span><br><span class="line">  <span class="attr">output</span>:&#123;</span><br><span class="line">    <span class="attr">path</span>:path.<span class="title function_">resolve</span>(__dirname,<span class="string">&quot;dist&quot;</span>),<span class="comment">//指定打包后的文件位置</span></span><br><span class="line">    <span class="attr">filename</span>:<span class="string">&#x27;my-webpack-bundle.js&#x27;</span> <span class="comment">//指定打包后的文件名</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">module</span>:&#123;</span><br><span class="line">    <span class="attr">rules</span>:[&#123;</span><br><span class="line">      <span class="attr">test</span>:<span class="regexp">/\.txt$/i</span>, <span class="comment">//转换txt类型的文件</span></span><br><span class="line">      <span class="attr">use</span>:<span class="string">&#x27;raw-loader&#x27;</span></span><br><span class="line">    &#125;]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//这个HtmlWebpackPlugin插件的作用是：生成一个html文件，并自动将生成的所有bundle模块注入到这个文件中，可以指定一个html模板，还可以指定其他参数</span></span><br><span class="line">  <span class="attr">plugins</span>:[<span class="keyword">new</span> <span class="title class_">HtmlWebpackPlugin</span>(&#123;<span class="attr">template</span>:<span class="string">&#x27;./src/index.html&#x27;</span>&#125;)]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>mode</p><ul><li><p>mode(模式)指定开发环境：默认值为production</p><ul><li>development：process.env.NODE_ENV &#x3D;&#x3D; ‘development’</li><li>production:：process.env.NODE_ENV &#x3D;&#x3D; ‘production’</li><li>none</li></ul></li><li><p>mode的使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">moudule.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">mode</span>:<span class="string">&#x27;development&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>浏览器兼容性(browser compatibility)：符合ES5标准，不支持IE8-</p></li><li><p>环境(environment)：Webpack5运行于Nodejs v10.13.0+</p></li></ul><h2 id="webpack配置"><a href="#webpack配置" class="headerlink" title="webpack配置"></a>webpack配置</h2><h3 id="安装webpack"><a href="#安装webpack" class="headerlink" title="安装webpack"></a>安装webpack</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">局部安装</span></span><br><span class="line">npm install --save-dev webpack</span><br><span class="line">//安装指定版本</span><br><span class="line">npm install --save-dev webpack@x</span><br><span class="line"></span><br><span class="line">//命令行工具可以安装webpack-cli</span><br><span class="line">npm install --save-dev webpack-cli</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">全局安装(不推荐)，避免影响当前项目</span></span><br><span class="line">npm install --global webpack</span><br></pre></td></tr></table></figure><h3 id="入口起点-entry-points"><a href="#入口起点-entry-points" class="headerlink" title="入口起点(entry points)"></a>入口起点(entry points)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//webpack.config.js</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">entry</span>:<span class="string">&#x27;./src/index.js&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//相当于</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">entry</span>:&#123;</span><br><span class="line">    <span class="attr">main</span>:<span class="string">&#x27;./src/index.js&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置多个文件</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">entry</span>:[<span class="string">&#x27;./src/index1.js&#x27;</span>,<span class="string">&#x27;./src/index2.js&#x27;</span>]</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//对象语法</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">entry</span>:&#123;</span><br><span class="line">    <span class="attr">app</span>:<span class="string">&#x27;./src/app.js&#x27;</span>,</span><br><span class="line">    <span class="attr">home</span>:<span class="string">&#x27;./src/home.js&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//描述入口文件</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">entry</span>: &#123;</span><br><span class="line">    <span class="attr">a2</span>: <span class="string">&#x27;dependingfile.js&#x27;</span>, <span class="comment">//指定要输出的文件名</span></span><br><span class="line">    <span class="attr">b2</span>: &#123;</span><br><span class="line">      <span class="attr">runtime</span>: <span class="string">&#x27;x2&#x27;</span>, <span class="comment">//运行时 chunk 的名字</span></span><br><span class="line">      <span class="attr">dependOn</span>: <span class="string">&#x27;a2&#x27;</span>, <span class="comment">//当前入口所依赖的入口。它们必须在该入口被加载前被加载</span></span><br><span class="line">      <span class="attr">import</span>: <span class="string">&#x27;./b&#x27;</span>, <span class="comment">//启动是需要加载的模块</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="出口-output"><a href="#出口-output" class="headerlink" title="出口(output)"></a>出口(output)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//webpack.config.js</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//单独文件</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">output</span>: &#123;</span><br><span class="line">    <span class="attr">filename</span>: <span class="string">&#x27;bundle.js&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//多个文件</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">entry</span>: &#123;</span><br><span class="line">    <span class="attr">app</span>: <span class="string">&#x27;./src/app.js&#x27;</span>,</span><br><span class="line">    <span class="attr">search</span>: <span class="string">&#x27;./src/search.js&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">output</span>: &#123;</span><br><span class="line">    <span class="attr">filename</span>: <span class="string">&#x27;[name].js&#x27;</span>, <span class="comment">//[]占位符，避免重复</span></span><br><span class="line">    <span class="attr">path</span>: __dirname + <span class="string">&#x27;/dist&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 最后打包的出口文件写入到硬盘：./dist/app.js, ./dist/search.js</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//CDN</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="comment">//...</span></span><br><span class="line">  <span class="attr">output</span>: &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/home/proj/cdn/assets/[fullhash]&#x27;</span>,</span><br><span class="line">    <span class="attr">publicPath</span>: <span class="string">&#x27;https://cdn.example.com/assets/[fullhash]/&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="loader"><a href="#loader" class="headerlink" title="loader"></a>loader</h3><ul><li><p>安装：需要转换哪种类型的文件就安装对应的loader</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev css-loader ts-loader</span><br></pre></td></tr></table></figure></li><li><p>配置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//webpack.config.js</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">module</span>: &#123;</span><br><span class="line">    <span class="attr">rules</span>: [</span><br><span class="line">      &#123; <span class="attr">test</span>: <span class="regexp">/\.css$/i</span>, <span class="attr">use</span>: <span class="string">&#x27;css-loader&#x27;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">test</span>: <span class="regexp">/\.ts$/i</span>, <span class="attr">use</span>: <span class="string">&#x27;ts-loader&#x27;</span> &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//其他配置，允许指定多个loader用于转换</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">module</span>: &#123;</span><br><span class="line">    <span class="attr">rules</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.css$/i</span>,</span><br><span class="line">        <span class="attr">use</span>: [ <span class="comment">//loader从右往左读取，sass-&gt;css-&gt;style,最终完成样式文件处理</span></span><br><span class="line">          &#123; <span class="attr">loader</span>: <span class="string">&#x27;style-loader&#x27;</span> &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">loader</span>: <span class="string">&#x27;css-loader&#x27;</span>,</span><br><span class="line">            <span class="attr">options</span>: &#123;</span><br><span class="line">              <span class="attr">modules</span>: <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123; <span class="attr">loader</span>: <span class="string">&#x27;sass-loader&#x27;</span> &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>特性</p><ul><li>loader 支持链式调用，链中的每个 loader 会将转换应用在已处理过的资源上</li><li>loader 可以是同步的，也可以是异步的</li><li>loader 运行在 Node.js 中，并且能够执行任何操作</li><li>loader 能够产生额外的任意文件</li></ul></li><li><p>loader原理</p><ul><li><p>从 npm install, node_modules 进行加载</p></li><li><p>loader模块导出一个函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//my-loader.js</span><br><span class="line"></span><br><span class="line">module.exports = function (source) &#123;</span><br><span class="line">  return source</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>常用loader</p><ul><li>样式：style-loader、css-loader、less-loader、sass-loader等</li><li>文件：raw-loader、vue-loader、file-loader 、url-loader等</li><li>编译：babel-loader、coffee-loader 、ts-loader等</li><li>校验测试：mocha-loader、jshint-loader 、eslint-loader等</li></ul></li><li><p>常用loader配置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">module</span>:&#123;</span><br><span class="line">    <span class="attr">rules</span>:[&#123;</span><br><span class="line">      <span class="attr">test</span>:<span class="string">&#x27;/\.css$/i&#x27;</span>,</span><br><span class="line">      <span class="attr">use</span>:[<span class="string">&#x27;style-loader&#x27;</span>,<span class="string">&#x27;css-loader&#x27;</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">test</span>:<span class="string">&#x27;/\.less$/i&#x27;</span>,</span><br><span class="line">      <span class="attr">use</span>:[<span class="string">&#x27;style-loader&#x27;</span>,<span class="string">&#x27;css-loader&#x27;</span>,<span class="string">&#x27;less-loader&#x27;</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">test</span>:<span class="string">&#x27;/\.s[ac]ss$/i&#x27;</span>,</span><br><span class="line">      <span class="attr">use</span>:[<span class="string">&#x27;style-loader&#x27;</span>,<span class="string">&#x27;css-loader&#x27;</span>,<span class="string">&#x27;sass-loader&#x27;</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">test</span>:<span class="string">&#x27;/\.vue/i&#x27;</span>,</span><br><span class="line">      <span class="attr">use</span>:[<span class="string">&#x27;vue-loader&#x27;</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">test</span>:<span class="string">&#x27;/\.html?$/i&#x27;</span>,</span><br><span class="line">      <span class="attr">use</span>:[<span class="string">&#x27;html-loader&#x27;</span>]</span><br><span class="line">    &#125;,&#123;</span><br><span class="line">      <span class="attr">test</span>:<span class="regexp">/\.(jpe?g|png|gif)$/i</span>,</span><br><span class="line">      <span class="attr">use</span>:&#123;</span><br><span class="line">        <span class="attr">loader</span>:<span class="string">&#x27;file-loader&#x27;</span>,</span><br><span class="line">        <span class="attr">options</span>: &#123;</span><br><span class="line">          <span class="comment">// 定义打包后文件的名称；</span></span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;[name]_[hash].[ext]&#x27;</span>, <span class="comment">// [name]:原文件名，[hash]:hash字符串（如果不定义名称，默认就以hash命名，[ext]:原文件的后缀名）</span></span><br><span class="line">          <span class="attr">outputPath</span>: <span class="string">&#x27;images/&#x27;</span> <span class="comment">// 定义图片输出的文件夹名（在output.path目录下）</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,&#123;</span><br><span class="line">      <span class="attr">test</span>:<span class="regexp">/\.(jpe?g|png|gif)$/i</span>,</span><br><span class="line">      <span class="attr">use</span>:&#123;</span><br><span class="line">        <span class="attr">loader</span>:<span class="string">&#x27;url-loader&#x27;</span>,</span><br><span class="line">        <span class="attr">options</span>: &#123;</span><br><span class="line">          <span class="comment">// 定义打包后文件的名称；</span></span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;[name]_[hash].[ext]&#x27;</span>, <span class="comment">// [name]:原文件名，[hash]:hash字符串（如果不定义名称，默认就以hash命名，[ext]:原文件的后缀名）</span></span><br><span class="line">          <span class="attr">outputPath</span>: <span class="string">&#x27;images/&#x27;</span>, <span class="comment">// 定义图片输出的文件夹名（在output.path目录下）</span></span><br><span class="line">          <span class="attr">limit</span>: <span class="number">204800</span> <span class="comment">// 大于200kb(200*1024=204800) 的图片会被打包在images文件夹里面，小于这个值的会被以base64的格式写在js文件中</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="plugin"><a href="#plugin" class="headerlink" title="plugin"></a>plugin</h3><ul><li><p>安装：需要哪些扩展功能就安装对应的plugin</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev html-webpack-plugin</span><br></pre></td></tr></table></figure></li><li><p>配置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">moudule.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">plugins</span>:[<span class="keyword">new</span> <span class="title class_">HtmlWebpackPlugin</span>()]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>原理</p><ul><li><p>模块导出一个对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// MyPlugin.js</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyPlugin</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>()</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">apply</span>(<span class="params">compiler</span>)&#123;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">MyPlugin</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>常用plugin</p><ul><li>html-webpack-plugin：可以根据模板自动生成html代码，并自动引用css和js文件</li><li>mini-css-extract-plugin：将js文件中引用的样式单独抽离成css文件</li><li>DefinePlugin：编译时配置全局变量，webpack内置plugin</li><li>BannerPlugin：每个文件头部添加一些信息，webpack内置plugin</li><li>HotModuleReplacementPlugin：热更新(HMR)，webpack内置plugin</li></ul></li><li><p>常用plugin配置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">HtmlWebpackPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;html-webpack-plugin&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> &#123;<span class="title class_">CleanWebpackPlugin</span>&#125; = <span class="built_in">require</span>(<span class="string">&#x27;clean-webpack-plugin&#x27;</span>) <span class="comment">//每次打包，先清理dist文件夹</span></span><br><span class="line"><span class="keyword">const</span> &#123;<span class="title class_">DefinePlugin</span>&#125; = <span class="built_in">require</span>(<span class="string">&#x27;webpack&#x27;</span>) <span class="comment">//webpack自带plugin,定义全局变量</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">MiniCssExtractPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;mini-css-extract-plugin&#x27;</span>) <span class="comment">//提取CSS</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">modules</span>:&#123;</span><br><span class="line">    <span class="attr">rules</span>:&#123;</span><br><span class="line">      <span class="attr">test</span>:<span class="string">&#x27;\.css$/i&#x27;</span>,</span><br><span class="line">      <span class="attr">use</span>:[<span class="title class_">MiniCssExtractPlugin</span>.<span class="property">loader</span>,<span class="string">&#x27;css-loader&#x27;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">plugins</span>:[ </span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">HtmlWebpackPlugin</span>(&#123;</span><br><span class="line">      <span class="attr">template</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;./index.html&#x27;</span>)</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">CleanWebpackPlugin</span>(),</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">DefinePlugin</span>(&#123;</span><br><span class="line">      <span class="attr">BASE_URL</span>:<span class="string">&#x27;&quot;./&quot;&#x27;</span></span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">MiniCssExtractPlugin</span>(&#123;</span><br><span class="line">      <span class="attr">filename</span>: <span class="string">&#x27;[name].[contenthash].css&#x27;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> webpack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> webpack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript基础知识(二)</title>
      <link href="/posts/e6471d7a/"/>
      <url>/posts/e6471d7a/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p style="font-size:24px;font-weight:bold;">JavaScript基础知识(二)——手写"源码"</p><h2 id="Promise"><a href="#Promise" class="headerlink" title="Promise"></a>Promise</h2><h3 id="Promise-1"><a href="#Promise-1" class="headerlink" title="Promise"></a>Promise</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyPromise</span> &#123;</span><br><span class="line">  <span class="comment">//定义三个静态属性，用于记录Promise的状态</span></span><br><span class="line">  <span class="keyword">static</span> <span class="variable constant_">PENDING</span> = <span class="string">&quot;pending&quot;</span></span><br><span class="line">  <span class="keyword">static</span> <span class="variable constant_">FULFILLED</span> = <span class="string">&quot;fulfilled&quot;</span></span><br><span class="line">  <span class="keyword">static</span> <span class="variable constant_">REJECTED</span> = <span class="string">&quot;rejected&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//初始化传入一个执行函数func,并且立即执行</span></span><br><span class="line">  <span class="comment">//执行函数func包含两个参数，resolve，reject,这两个参数也都是函数</span></span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">func</span>) &#123;</span><br><span class="line">    <span class="comment">//初始化定义一个状态属性，并且赋初值pending</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">PromiseState</span> = <span class="title class_">MyPromise</span>.<span class="property">PENDING</span></span><br><span class="line">    <span class="comment">//初始化定义一个变量，存储Promise执行之后的值</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">PromiseResult</span> = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//异步调用处理</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">onFulfilledCallBacks</span> = [] <span class="comment">//保存成功的回调函数</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">onRejectedCallBacks</span> = [] <span class="comment">//保存失败的回调函数</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//resolve,reject需要绑定this,resolve需要单独执行，this需要指向实例</span></span><br><span class="line">    <span class="title function_">func</span>(<span class="variable language_">this</span>.<span class="property">resolve</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>), <span class="variable language_">this</span>.<span class="property">resolve</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>))</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@description</span>:resolve函数,Promise成功之后的执行</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; result:定义执行成功的结果</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> &#123;<span class="type">*</span>&#125;</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="title function_">resolve</span>(<span class="params">result</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">PromiseState</span> === <span class="title class_">MyPromise</span>.<span class="property">PENDING</span>) &#123;</span><br><span class="line">      <span class="comment">//Promise成功之后、，状态属性修改为fulfilled</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">PromiseState</span> = <span class="title class_">MyPromise</span>.<span class="property">FULFILLED</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">PromiseResult</span> = result</span><br><span class="line">      <span class="comment">//依次执行回调函数</span></span><br><span class="line">      <span class="keyword">while</span> (<span class="variable language_">this</span>.<span class="property">onFulfilledCallBacks</span>.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">onFulfilledCallBacks</span>.<span class="title function_">shift</span>()(result)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@description</span>: 定义reject函数,Promise失败之后的执行</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; reason:定义执行失败的结果</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> &#123;<span class="type">*</span>&#125;</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="title function_">reject</span>(<span class="params">reason</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">PromiseState</span> === <span class="variable language_">this</span>.<span class="property">PENDING</span>) &#123;</span><br><span class="line">      <span class="comment">//Promise失败之后、，状态属性修改为rejected</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">PromiseState</span> = <span class="variable language_">this</span>.<span class="property">REJECTED</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">PromiseResult</span> = reason</span><br><span class="line">      <span class="comment">//依次执行回调函数</span></span><br><span class="line">      <span class="keyword">while</span> (<span class="variable language_">this</span>.<span class="property">onRejectedCallBacks</span>.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">onRejectedCallBacks</span>.<span class="title function_">shift</span>()(reason)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@description</span>: then函数实现</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; onFulfilled:promise成功时执行</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; onRejected:promise失败时执行</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> &#123;<span class="type">*</span>&#125;返回一个新的Promise对象</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="title function_">then</span>(<span class="params">onFulfilled, onRejected</span>) &#123;</span><br><span class="line">    <span class="comment">//参数需要是函数</span></span><br><span class="line">    onFulfilled = <span class="keyword">typeof</span> onFulfilled === <span class="string">&quot;function&quot;</span> ? onFulfilled : <span class="function">(<span class="params">val</span>) =&gt;</span> val</span><br><span class="line">    onRejected =</span><br><span class="line">      <span class="keyword">typeof</span> onRejected === <span class="string">&quot;function&quot;</span></span><br><span class="line">        ? onRejected</span><br><span class="line">        : <span class="function">(<span class="params">reason</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> reason</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//then需要返回一个新的Promise对象</span></span><br><span class="line">    <span class="keyword">const</span> thenpromise = <span class="keyword">new</span> <span class="title class_">MyPromise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">//参数处理</span></span><br><span class="line">      <span class="keyword">const</span> <span class="title function_">resolvep</span> = (<span class="params">cb</span>) =&gt; &#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//</span></span><br><span class="line">            <span class="keyword">const</span> x = <span class="title function_">cb</span>(<span class="variable language_">this</span>.<span class="property">PromiseResult</span>)</span><br><span class="line">            <span class="keyword">if</span> (x === thenpromise) &#123;</span><br><span class="line">              <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;err&quot;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (x <span class="keyword">instanceof</span> <span class="title class_">MyPromise</span>) &#123;</span><br><span class="line">              x.<span class="title function_">then</span>(resolve, reject)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              <span class="title function_">resolve</span>(x)</span><br><span class="line">            &#125;</span><br><span class="line">          &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">            <span class="title function_">reject</span>(err)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">PromiseState</span> === <span class="title class_">MyPromise</span>.<span class="property">FULFILLED</span>) &#123;</span><br><span class="line">        <span class="title function_">resolvep</span>(onFulfilled)</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">PromiseState</span> === <span class="title class_">MyPromise</span>.<span class="property">REJECTED</span>) &#123;</span><br><span class="line">        <span class="title function_">resolvep</span>(onRejected)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">onFulfilledCallBacks</span>.<span class="title function_">push</span>(resolvep.<span class="title function_">bind</span>(<span class="variable language_">this</span>, onFulfilled))</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">onRejectedCallBacks</span>.<span class="title function_">push</span>(resolvep.<span class="title function_">bind</span>(<span class="variable language_">this</span>, onRejected))</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> thenpromise</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试</span></span><br><span class="line"><span class="keyword">const</span> mp = <span class="keyword">new</span> <span class="title class_">MyPromise</span>(<span class="function">(<span class="params">res, rej</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>)</span><br><span class="line">    <span class="title function_">res</span>(<span class="number">2222</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">3</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">s</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(s)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="Promise-all"><a href="#Promise-all" class="headerlink" title="Promise.all"></a>Promise.all</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 所有的promise成功，则返回成功，否则返回失败</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; <span class="variable">promises</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">*</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title class_">Promise</span>.<span class="property">myAll</span> = <span class="function">(<span class="params">promises</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">let</span> result = []</span><br><span class="line">    <span class="keyword">const</span> len = promises.<span class="property">length</span> || <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> (len === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="title function_">resolve</span>([])</span><br><span class="line">    &#125;</span><br><span class="line">    promises.<span class="title function_">forEach</span>(<span class="function">(<span class="params">p, i</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(p)</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">          count += <span class="number">1</span> <span class="comment">//成功的promise计数</span></span><br><span class="line">          result[i] = res <span class="comment">//成功的promise记录</span></span><br><span class="line">          <span class="keyword">if</span> (count === len) &#123;</span><br><span class="line">            <span class="comment">//所有的promise都成功，返回</span></span><br><span class="line">            <span class="title function_">resolve</span>(result)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        .<span class="title function_">catch</span>(reject) <span class="comment">//有一个promise不成功，直接抛出</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Promise-allSettled"><a href="#Promise-allSettled" class="headerlink" title="Promise.allSettled"></a>Promise.allSettled</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>:所有的promise都返回，不管成功还是失败</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; <span class="variable">promises</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">*</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title class_">Promise</span>.<span class="property">myAllSettled</span> = <span class="function">(<span class="params">promises</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> counter = <span class="number">0</span></span><br><span class="line">    <span class="keyword">const</span> result = []</span><br><span class="line">    <span class="keyword">const</span> len = promises.<span class="property">length</span> || <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> (len === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="title function_">resolve</span>([])</span><br><span class="line">    &#125;</span><br><span class="line">    promises.<span class="title function_">forEach</span>(<span class="function">(<span class="params">p, i</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(p).<span class="title function_">then</span>(</span><br><span class="line">        <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">          counter += <span class="number">1</span></span><br><span class="line">          result[i] = &#123;</span><br><span class="line">            <span class="attr">status</span>: <span class="string">&quot;fulfilled&quot;</span>,</span><br><span class="line">            <span class="attr">value</span>: res</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span> (counter === len) &#123;</span><br><span class="line">            <span class="title function_">resolve</span>(result)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="function">(<span class="params">rej</span>) =&gt;</span> &#123;</span><br><span class="line">          counter += <span class="number">1</span></span><br><span class="line">          result[i] = &#123;</span><br><span class="line">            <span class="attr">status</span>: <span class="string">&quot;rejected&quot;</span>,</span><br><span class="line">            <span class="attr">value</span>: rej</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span> (counter === len) &#123;</span><br><span class="line">            <span class="title function_">reject</span>(result)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      )</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Promise-race"><a href="#Promise-race" class="headerlink" title="Promise.race"></a>Promise.race</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 返回最快的promise,不管它成功还是失败</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; <span class="variable">promises</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">*</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title class_">Promise</span>.<span class="property">myRace</span> = <span class="function">(<span class="params">promises</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span> (<span class="params">resolve, reject</span>) &#123;</span><br><span class="line">    promises.<span class="title function_">forEach</span>(<span class="function">(<span class="params">p</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 当第一个 promise 成功或失败时返回结果</span></span><br><span class="line">      <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(p).<span class="title function_">then</span>(resolve, reject)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Promise-any"><a href="#Promise-any" class="headerlink" title="Promise.any"></a>Promise.any</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 返回最快的成功promise,如果所有的promise失败，则返回失败的promise</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; <span class="variable">promises</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">*</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title class_">Promise</span>.<span class="property">myAny</span> = <span class="function">(<span class="params">promises</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> counter = <span class="number">0</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    promises.<span class="title function_">forEach</span>(<span class="function">(<span class="params">p</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(p).<span class="title function_">then</span>(resolve, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        counter += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> (counter === promises.<span class="property">length</span>) &#123;</span><br><span class="line">          <span class="title function_">reject</span>(<span class="string">&quot;全都不成功!&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="浅拷贝"><a href="#浅拷贝" class="headerlink" title="浅拷贝"></a>浅拷贝</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//对象</span></span><br><span class="line"><span class="keyword">const</span> newobj1 = <span class="title class_">Object</span>.<span class="title function_">assign</span>(&#123;&#125;, obj)</span><br><span class="line"><span class="keyword">const</span> newobj2 = &#123; ...obj &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//数组</span></span><br><span class="line"><span class="keyword">const</span> newArr1 = <span class="title class_">Array</span>.<span class="title function_">from</span>(arr)</span><br><span class="line"><span class="keyword">const</span> newArr2 = [...arr]</span><br><span class="line"><span class="keyword">const</span> newArr3 = arr.<span class="title function_">slice</span>()</span><br><span class="line"><span class="keyword">const</span> newArr4 = arr.<span class="title function_">concat</span>([])</span><br><span class="line"><span class="keyword">const</span> newArr5 = arr.<span class="title function_">filter</span>(<span class="function">(<span class="params">val</span>) =&gt;</span> val)</span><br><span class="line"><span class="keyword">const</span> newArr6 = arr.<span class="title function_">map</span>(<span class="function">(<span class="params">val</span>) =&gt;</span> val)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="深拷贝"><a href="#深拷贝" class="headerlink" title="深拷贝"></a>深拷贝</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">//手写深拷贝</span><br><span class="line">const obj1 = JSON.parse(JSON.stringify(obj))</span><br><span class="line"></span><br><span class="line">const obj2 = structuredClone(obj)</span><br><span class="line"></span><br><span class="line">function deepClone(obj, wk = new WeakMap()) &#123;</span><br><span class="line">  if (obj === null || typeof obj !== &quot;object&quot;) return obj</span><br><span class="line">  if (obj instanceof Date) return new Date(obj)</span><br><span class="line">  if (obj instanceof RegExp) return new RegExp(obj)</span><br><span class="line">  if (obj instanceof HTMLElement) return obj</span><br><span class="line"></span><br><span class="line">  if (wk.has(obj)) &#123;</span><br><span class="line">    return wk.get(obj)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  let target = Array.isArray(obj) ? [] : &#123;&#125;</span><br><span class="line">  wk.set(obj, target)</span><br><span class="line">  Reflect.ownKeys(obj).forEach((item) =&gt; &#123;</span><br><span class="line">    if (typeof obj[item] === &quot;object&quot; &amp;&amp; obj[item] !== null) &#123;</span><br><span class="line">      target[item] = deepClone(obj[item], wk)</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      target[item] = obj[item]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  return target</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数组去重"><a href="#数组去重" class="headerlink" title="数组去重"></a>数组去重</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//遍历循环,但是不能去除[] &#123;&#125; function&#123;&#125;</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">norepeatArr</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>, len = arr.<span class="property">length</span>; i &lt; len; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = i + <span class="number">1</span>; j &lt; len; j++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (arr[i] === arr[j] || <span class="title class_">Object</span>.<span class="title function_">is</span>(arr[i], arr[j])) &#123;</span><br><span class="line">        arr.<span class="title function_">slice</span>(j, <span class="number">1</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> arr</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历循环，判断索引,但是判断NaN</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">norepeatArr</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> newArr = []</span><br><span class="line">  arr.<span class="title function_">forEach</span>(<span class="function">(<span class="params">v, i</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (newArr.<span class="title function_">indexOf</span>(v) === i) &#123;</span><br><span class="line">      newArr.<span class="title function_">push</span>(v)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> newArr</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历循环，根据Map</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">norepeatArr2</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> map = <span class="keyword">new</span> <span class="title class_">Map</span>()</span><br><span class="line">  arr.<span class="title function_">forEach</span>(<span class="function">(<span class="params">v, i</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!map.<span class="title function_">has</span>(v)) &#123;</span><br><span class="line">      map.<span class="title function_">set</span>(v, i)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> [...map.<span class="title function_">keys</span>()]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Set</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">norepeatArr</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> [...<span class="keyword">new</span> <span class="title class_">Set</span>(arr)] <span class="comment">//return Array.from(new Set(arr))</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="多维数组展平"><a href="#多维数组展平" class="headerlink" title="多维数组展平"></a>多维数组展平</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//多维数组展平</span></span><br><span class="line"><span class="keyword">const</span> newArr = arr.<span class="title function_">flat</span>(<span class="number">1</span>) <span class="comment">//参数表示展平的层级</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//reduce遍历循环</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">flatArr1</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (!arr.<span class="property">length</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> arr.<span class="title function_">reduce</span>(<span class="function">(<span class="params">pre, cur</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Array</span>.<span class="title function_">isArray</span>(cur) ? [...pre, ...<span class="title function_">flatArr</span>(cur)] : [...pre, cur]</span><br><span class="line">  &#125;, [])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//迭代</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">flatArr2</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (!arr.<span class="property">length</span>) <span class="keyword">return</span></span><br><span class="line">  <span class="keyword">while</span> (</span><br><span class="line">    arr.<span class="title function_">some</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="title class_">Array</span>.<span class="title function_">isArray</span>(item)</span><br><span class="line">    &#125;)</span><br><span class="line">  ) &#123;</span><br><span class="line">    arr = [].<span class="title function_">concat</span>(...arr)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//指定展开深度</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">flatArr3</span>(<span class="params">arr, depth = <span class="number">1</span>, resArr = []</span>) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> item <span class="keyword">of</span> arr) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title class_">Array</span>.<span class="title function_">isArray</span>(item) &amp;&amp; depth &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="title function_">flatArr2</span>(item, depth - <span class="number">1</span>, resArr)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      resArr.<span class="title function_">push</span>(item)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> resArr</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="防抖和节流"><a href="#防抖和节流" class="headerlink" title="防抖和节流"></a>防抖和节流</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//防抖：在一段时间范围内，事件只执行一次</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 防抖</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; func 需要防抖处理的函数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; timer 定时时长</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; immediate 是否立即执行</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">*</span>&#125;返回防抖处理完成之后的函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">debounce</span>(<span class="params">func, timer = <span class="number">100</span>, immediate = <span class="literal">false</span></span>) &#123;</span><br><span class="line">  <span class="comment">//定义定时器，用于记录定时操作</span></span><br><span class="line">  <span class="keyword">let</span> setTime = <span class="literal">null</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">...args</span>) &#123;</span><br><span class="line">    <span class="comment">//清除定时器</span></span><br><span class="line">    setTime &amp;&amp; <span class="built_in">clearTimeout</span>(setTime)</span><br><span class="line">    <span class="comment">//每次调用func时，需要等待timer再执行</span></span><br><span class="line">    <span class="keyword">const</span> that = <span class="variable language_">this</span></span><br><span class="line">    <span class="keyword">if</span> (immediate) &#123;</span><br><span class="line">      <span class="keyword">let</span> flag = !setTime</span><br><span class="line">      <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">        func.<span class="title function_">apply</span>(that, args)</span><br><span class="line">      &#125;</span><br><span class="line">      setTime = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        setTime = <span class="literal">null</span></span><br><span class="line">      &#125;, timer)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      setTime = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        func.<span class="title function_">apply</span>(that, args) <span class="comment">//apply绑定，args,修改this指向调用者</span></span><br><span class="line">      &#125;, timer)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//节流：间隔一定时间执行一次</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 节流：间隔一定时间执行一次</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; func 需要节流处理的函数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; timer 定时时长</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">*</span>&#125; 返回需要节流处理的函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">throttle</span>(<span class="params">func, timer = <span class="number">2000</span></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> t1 = <span class="number">0</span> <span class="comment">//初始状态</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">...args</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> that = <span class="variable language_">this</span></span><br><span class="line">    <span class="keyword">let</span> t2 = <span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line">    <span class="keyword">if</span> (t2 - t1 &gt;= timer) &#123;</span><br><span class="line">      func.<span class="title function_">apply</span>(that, args)</span><br><span class="line">      t1 = <span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="setInterval"><a href="#setInterval" class="headerlink" title="setInterval"></a>setInterval</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">mySetInterval</span>(<span class="params">func, delay = <span class="number">1000</span>, maxcounter = <span class="number">10</span></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> counter = <span class="number">0</span></span><br><span class="line">  <span class="keyword">let</span> timer = <span class="literal">null</span></span><br><span class="line">  <span class="keyword">let</span> setfunction = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    func.<span class="title function_">call</span>(<span class="literal">null</span>)</span><br><span class="line">    counter++</span><br><span class="line">    timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">setfunction</span>()</span><br><span class="line">    &#125;, delay)</span><br><span class="line">    <span class="keyword">if</span> (counter &gt; maxcounter) &#123;</span><br><span class="line">      timer &amp;&amp; <span class="built_in">clearTimeout</span>(timer)</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">setfunction</span>()</span><br><span class="line">  &#125;, delay)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Object-is"><a href="#Object-is" class="headerlink" title="Object.is"></a>Object.is</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//Object.is</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * +0 === -0 //true</span></span><br><span class="line"><span class="comment"> * Object.is(+0, -0) //false</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * NaN == NaN //false</span></span><br><span class="line"><span class="comment"> * Object.is(NaN, NaN) //true</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">myObjectIs</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (a === b)</span><br><span class="line">    <span class="comment">//判断 +0，-0</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * /1/+0 == Infinity</span></span><br><span class="line"><span class="comment">     *1/-0 == - Infinity</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">return</span> a !== <span class="number">0</span> || <span class="number">1</span> / a === <span class="number">1</span> / b</span><br><span class="line">  <span class="keyword">return</span> a !== a &amp;&amp; b !== b <span class="comment">//判断 NaN,NaN</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">myObjectIs</span>(<span class="number">1</span>, <span class="number">1</span>)) <span class="comment">//true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">myObjectIs</span>(<span class="number">1</span>, <span class="number">2</span>)) <span class="comment">//false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">myObjectIs</span>([], [])) <span class="comment">//false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">myObjectIs</span>([], &#123;&#125;)) <span class="comment">//false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">myObjectIs</span>(<span class="number">0</span>, <span class="number">0</span>)) <span class="comment">//true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">myObjectIs</span>(+<span class="number">0</span>, +<span class="number">0</span>)) <span class="comment">//true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">myObjectIs</span>(+<span class="number">0</span>, -<span class="number">0</span>)) <span class="comment">//true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">myObjectIs</span>(<span class="title class_">NaN</span>, <span class="number">0</span>)) <span class="comment">//false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">myObjectIs</span>(<span class="title class_">NaN</span>, <span class="title class_">NaN</span>)) <span class="comment">//true</span></span><br></pre></td></tr></table></figure><h2 id="new"><a href="#new" class="headerlink" title="new"></a>new</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//手写new</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1.在内存中创建一个新对象</span></span><br><span class="line"><span class="comment"> * 2.这个新对象内部的[[prototype]]特性被赋值为构造函数的prototype属性</span></span><br><span class="line"><span class="comment"> * 3.构造函数内部的this被赋值为这个新对象(即this指向新对象)</span></span><br><span class="line"><span class="comment"> * 4.执行构造函数内部的代码(给新对象添加属性)</span></span><br><span class="line"><span class="comment"> * 5.如果构造函数返回非空 对象，则返回该对象；否则，返回刚创建的新对象。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">_new</span>(<span class="params">fn</span>) &#123;</span><br><span class="line">  <span class="comment">// 1 获取除fn以外的所有arguments</span></span><br><span class="line">  <span class="comment">// 使用slice删除arguments第一个元素就得到其他arguments</span></span><br><span class="line">  <span class="keyword">const</span> args = <span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">slice</span>.<span class="title function_">call</span>(<span class="variable language_">arguments</span>, <span class="number">1</span>)</span><br><span class="line">  <span class="comment">// 新建一个对象 用于函数变对象</span></span><br><span class="line">  <span class="keyword">const</span> newObj = &#123;&#125;</span><br><span class="line">  <span class="comment">// 原型链被赋值为原型对象</span></span><br><span class="line">  newObj.<span class="property">__proto__</span> = fn.<span class="property"><span class="keyword">prototype</span></span></span><br><span class="line">  <span class="comment">// this 指向新对象</span></span><br><span class="line">  fn.<span class="title function_">apply</span>(newObj, args)</span><br><span class="line">  <span class="comment">// 返回这个新对象</span></span><br><span class="line">  <span class="keyword">return</span> newObj</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> obj1 = <span class="title function_">_new</span>(obj,<span class="string">&#x27;name1&#x27;</span>,<span class="string">&#x27;age1&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="apply、call、bind"><a href="#apply、call、bind" class="headerlink" title="apply、call、bind"></a>apply、call、bind</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//call</span></span><br><span class="line"><span class="title class_">Function</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">myCall</span> = <span class="keyword">function</span> (<span class="params">targetFunc, ...args</span>) &#123;</span><br><span class="line">  targetFunc = targetFunc || <span class="variable language_">window</span> <span class="comment">//targetFunc为空，就指向window</span></span><br><span class="line">  <span class="keyword">const</span> symbolKey = <span class="title class_">Symbol</span>() <span class="comment">//定义唯一值存储this</span></span><br><span class="line">  targetFunc[symbolKey] = <span class="variable language_">this</span> <span class="comment">//谁调用myCall，this就指向谁，func1.myCall(),this指向func1</span></span><br><span class="line">  <span class="keyword">const</span> res = targetFunc[symbolKey](...args) <span class="comment">//执行方法</span></span><br><span class="line">  <span class="keyword">delete</span> targetFunc[symbolKey] <span class="comment">//删除临时存储值</span></span><br><span class="line">  <span class="keyword">return</span> res <span class="comment">//返回函数执行结果</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//apply</span></span><br><span class="line"><span class="title class_">Function</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">myApply</span> = <span class="keyword">function</span> (<span class="params">targetFunc, args</span>) &#123;</span><br><span class="line">  targetFunc = targetFunc || <span class="variable language_">window</span> <span class="comment">//targetFunc为空，就指向window</span></span><br><span class="line">  <span class="keyword">const</span> symbolKey = <span class="title class_">Symbol</span>() <span class="comment">//定义唯一值存储this</span></span><br><span class="line">  targetFunc[symbolKey] = <span class="variable language_">this</span> <span class="comment">//谁调用myCall，this就指向谁，func1.myCall(),this指向func1</span></span><br><span class="line">  <span class="keyword">const</span> res = targetFunc[symbolKey](...args) <span class="comment">//执行方法</span></span><br><span class="line">  <span class="keyword">delete</span> targetFunc[symbolKey] <span class="comment">//删除临时存储值</span></span><br><span class="line">  <span class="keyword">return</span> res <span class="comment">//返回函数执行结果</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//bind</span></span><br><span class="line"><span class="title class_">Function</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">myBind</span> = <span class="keyword">function</span> (<span class="params">targetFunc, ...args</span>) &#123;</span><br><span class="line">  targetFunc = targetFunc || <span class="variable language_">window</span> <span class="comment">//targetFunc为空，就指向window</span></span><br><span class="line">  <span class="keyword">const</span> symbolKey = <span class="title class_">Symbol</span>() <span class="comment">//定义唯一值存储this</span></span><br><span class="line">  <span class="keyword">const</span> that = <span class="variable language_">this</span> <span class="comment">//谁调用myCall，this就指向谁，func1.myCall(),this指向func1</span></span><br><span class="line">  targetFunc[symbolKey] = <span class="variable language_">this</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">...innerargs</span>) &#123;</span><br><span class="line">    <span class="comment">//bind的返回值是一个函数，可以接收参数</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span> <span class="keyword">instanceof</span> that) &#123;</span><br><span class="line">      <span class="comment">//使用bina之后的函数如果是个构造函数。可以new的话，this将执行实例</span></span><br><span class="line">      <span class="variable language_">this</span>[symbolKey] = that</span><br><span class="line">      <span class="variable language_">this</span>[symbolKey](...[...args, ...innerargs])</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> res = targetFunc[symbolKey](...[...args, ...innerargs])</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ajax"><a href="#ajax" class="headerlink" title="ajax"></a>ajax</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">ajax</span>(<span class="params">url</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>()</span><br><span class="line">  xhr.<span class="title function_">open</span>(<span class="string">&quot;GET&quot;</span>, url, <span class="literal">false</span>) <span class="comment">//false表示同步，true表示异步</span></span><br><span class="line">  xhr.<span class="title function_">setRequestHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>)</span><br><span class="line">  xhr.<span class="property">onreadystatechange</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (xhr.<span class="property">readyState</span> != <span class="number">4</span>) <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">if</span> (xhr.<span class="property">status</span> === <span class="number">200</span> || xhr.<span class="property">status</span> == <span class="number">304</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(xhr.<span class="property">responseText</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  xhr.<span class="title function_">send</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> JavaScript </tag>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS基础知识(一)</title>
      <link href="/posts/9dbcf95a/"/>
      <url>/posts/9dbcf95a/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p style="font-size:24px;font-weight:bold;">CSS基础知识(一)</p><h3 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h3><h4 id="1-基本语法"><a href="#1-基本语法" class="headerlink" title="1. 基本语法"></a>1. 基本语法</h4><h5 id="1-1-选择器"><a href="#1-1-选择器" class="headerlink" title="1.1. 选择器"></a>1.1. 选择器</h5><ul><li><p>基本选择器</p><ul><li>标签，div ul li ……</li><li>类，.className</li><li>ID，#id</li><li>通配符，*</li></ul></li><li><p>属性选择器</p><ul><li>指定属性，[attr]</li><li>指定某个属性，[attr&#x3D;val]</li><li>指定包含某个属性，[attr*&#x3D;val]</li><li>指定某个属性值开头，[attr^&#x3D;val]</li><li>指定某个属性值结尾，[attr$&#x3D;val]</li></ul></li><li><p>组合选择器</p><ul><li>相邻兄弟选择器，a+b</li><li>普通兄弟选择器，a~b</li><li>子选择器，a&gt;b</li><li>后代选择器，a b</li></ul></li><li><p>伪类</p><ul><li><p>条件伪类</p><ul><li>基于元素语言匹配页面元素，:lang()</li><li>匹配特定文字书写方向，:dir()</li><li>匹配包含指定元素，:has()</li><li>匹配指定列表里的元素，:is()</li><li>匹配不符合一组选择器的元素，:not()</li></ul></li><li><p>行为伪类</p><ul><li>鼠标激活，:active</li><li>鼠标悬浮，:hover</li><li>鼠标选中，::selection</li></ul></li><li><p>状态伪类</p><ul><li>当前锚点元素，:target</li><li>未访问的链接元素，:link</li><li>已访问的链接元素，:visited</li><li>聚焦元素，:focus</li><li>必填表单元素，:required</li><li>合法表单元素，:valid</li><li>非法表单元素，:invalid</li><li>输入范围以内的表单元素，:in-range</li><li>输入范围以外的表单元素，:out-of-range</li><li>选中的表单元素，:checked</li><li>可选的表单元素，:optional</li><li>事件启用的表单元素，:enabled</li><li>事件禁用的表单元素，:disabled</li><li>只读的表单元素，:read-only</li><li>可读可写的表单元素，:read-write</li><li>空的表单元素，:blank</li><li>浏览中的元素，:current()</li><li>已浏览的元素，:past()</li><li>未浏览的元素，:future()</li></ul></li><li><p>结构伪类</p><ul><li>文档根元素，:root</li><li>无子元素的元素，:empty</li><li>元素首字母，:first-letter</li><li>元素的首行，:first-line</li><li>元素中指定顺序索引的子元素，:nth-child(n)</li><li>元素中指定倒序索引的子元素，:nth-last-child(n)</li><li>元素的首元素，:first-child</li><li>元素的尾元素，:last-child</li><li>父元素仅有的元素，:only-child</li><li>标签指定顺序索引的标签，:nth-of-type(n)</li><li>标签指定倒序索引的标签，:nth-last-of-type(n)</li><li>标签的首标签，:first-of-type</li><li>标签的尾标签，:last-of-type</li><li>父标签仅有的标签，:only-of-type</li></ul></li></ul></li><li><p>伪元素</p><ul><li>在元素前插入内容，::before</li><li>在元素后插入内容，::after</li></ul></li><li><p>优先级</p><ul><li>!important &gt; inline style &gt; id &gt; class、 :a、 [attr] &gt; element 、::after、::before &gt; * 、 a b、a+b</li></ul></li><li><p>继承性：不会影响页面布局</p><ul><li>字体，font-*</li><li>文本，text-</li><li>列表，list-style</li><li>其他，visibility、cursor</li></ul></li></ul><h4 id="2-文档流"><a href="#2-文档流" class="headerlink" title="2. 文档流"></a>2. 文档流</h4><ul><li>内容从左到右，从上到下排列，一行行，每一行又有多列显示，流式布局</li><li>块级元素占一行</li><li>内联元素一行中一列</li><li>脱离文档流，定位和浮动，父节点不包含其高度</li></ul><h4 id="3-盒模型"><a href="#3-盒模型" class="headerlink" title="3. 盒模型"></a>3. 盒模型</h4><ul><li>标准盒子模型：box-sizing:content-box，content、padding、border、margin</li><li>IE盒子模型：box-sizing:border-box，content、padding、border、margin</li></ul><h4 id="4-视觉格式化模型"><a href="#4-视觉格式化模型" class="headerlink" title="4. 视觉格式化模型"></a>4. 视觉格式化模型</h4><ul><li><p>display</p><ul><li>占满一行，继承父元素宽度，多个块元素上下排列</li><li>width、height生效</li><li>padding、margin生效</li></ul></li><li><p>inline</p><ul><li>不占满一行，多个内联元素排成一行</li><li>width、height不生效</li><li>竖直方向margin、padding不生效</li></ul></li><li><p>inline-block</p><ul><li>行内块元素，不单独占一行</li><li>width、height生效</li><li>padding、margin生效</li></ul></li></ul><h4 id="5-格式化上下文"><a href="#5-格式化上下文" class="headerlink" title="5. 格式化上下文"></a>5. 格式化上下文</h4><ul><li><p>BFC：Block Formatting Context，块级格式化上下文</p><ul><li><p>一个独立的渲染区域，只有块级盒子，独立布局，与区域外无关</p></li><li><p>内部盒子在垂直方向放置</p></li><li><p>盒子垂直方向距离由margin决定，属于同一个BFC的两个相邻盒子margin会重叠</p></li><li><p>每个元素的margin的左边与border左边接触</p></li><li><p>BFC不会与float盒子重叠</p></li><li><p>BFC内部元素不影响外部元素，反之亦然</p></li><li><p>计算BFC的高度时，float元素参与计算</p></li><li><p>常见BFC：</p><ul><li>html</li><li>非溢出可见元素，overflow !&#x3D; visible</li><li>设置浮动</li><li>设定定位，position 为 absolute fixed</li><li>display：inline-block</li></ul></li><li><p>BFC应用场景</p><ul><li><p>自适应两栏布局</p><ul><li>right-div设置 overflow:auto</li></ul></li><li><p>清除内部浮动造成父元素高度坍塌</p><ul><li>父元素设置 overflow:hidden</li></ul></li><li><p>防止垂直margin合并</p><ul><li>bottom-div添加包裹元素，设置overflow:hidden</li></ul></li></ul></li></ul></li><li><p>IFC：Inline Formatting Context，行内格式化上下文</p><ul><li><p>块级元素中仅包含内联级元素</p></li><li><p>节点元素width、height无效，垂直方向margin、padding无效</p></li><li><p>line box ,占据一行，高度由line-height计算决定</p></li><li><p>IFC应用场景</p><ul><li>水平居中，display:inline-block;text-align:center;</li><li>垂直居中，子元素撑开父元素，vertical-align:middle;</li></ul></li></ul></li><li><p>FFC：Flex Formatting Context，弹性格式化上下文</p></li><li><p>GFC：Grid Formatting Context，格栅格式化上下文</p></li></ul><h4 id="6-层叠上下文"><a href="#6-层叠上下文" class="headerlink" title="6. 层叠上下文"></a>6. 层叠上下文</h4><ul><li>html文档根元素</li><li>position：absolute、relative，z-index不为auto</li><li>position：fixed、sticky</li><li>flex的子元素，z-index不为auto</li><li>grid的子元素，z-index不为auto</li><li>opacity属性值小于1</li><li>mix-blend-mode属性值不为normal</li></ul><h4 id="7-值和单位"><a href="#7-值和单位" class="headerlink" title="7. 值和单位"></a>7. 值和单位</h4><ul><li><p>数值</p><ul><li><p>px</p><ul><li>设备物理像素，device pixels，屏幕分辨率</li><li>设备像素比，dpr，dpr &#x3D; 物理像素&#x2F;逻辑像素(实际尺寸)，window.devicePixelRatio 表示1个css像素对应的物理像素值</li><li>像素密度，DPI&#x2F;PPI ，像素密度 &#x3D; 屏幕对角线的像素尺寸 &#x2F; 物理尺寸</li><li>设备独立像素，DIP，dip&#x3D;px*160&#x2F;dpi</li></ul></li><li><p>em</p><ul><li>font-size相对于父元素的font-size</li><li>width&#x2F;height&#x2F;padding&#x2F;margin，相对于自身的font-size</li></ul></li><li><p>rem：root em</p><ul><li>相对于html根元素</li><li>默认1rem&#x3D;12px，根元素html font-size:16px，设置为html font-size:62.5%，即1rem&#x3D;10px</li><li>iPhoneX 分辨率 375px*812px，UI设计稿width750px，设定1rem&#x3D;100px，即设计稿上宽度100px的元素宽度，手机上是375&#x2F;750x100&#x3D;50px&#x3D;0.5rem</li></ul></li><li><p>vw&#x2F;vh：相对于视口viewport宽度和高度</p><ul><li>1vw&#x3D;viewport宽度&#x2F;100</li><li>1vh&#x3D;viewport高度&#x2F;100</li></ul></li></ul></li><li><p>百分比</p></li><li><p>颜色</p><ul><li><p>颜色关键字，146个</p></li><li><p>transparent</p></li><li><p>currentColor</p></li><li><p>rgb</p><ul><li>16进制</li><li>函数<ul><li>rgb(255,0,0)</li><li>rgba(255,0,0,0.5)</li><li>rgb(100%,0%,0%,0.5)</li><li>rgba(100%,0%,0%,50%)</li><li>rgb(255 0 0 &#x2F;0.5)</li></ul></li></ul></li><li><p>hsl</p><ul><li>色相(hue)，0~360deg，0(360)红色，120绿色，240蓝色</li><li>饱和度(saturation)，0~100%，0%灰色，100%全色</li><li>亮度(lightness)，0~100%，0%暗，100%白</li><li>不透明度</li><li>hsl(10,50%,50%,80%)</li></ul></li></ul></li><li><p>坐标</p><ul><li>left，top，right，bottom，background-position</li></ul></li><li><p>函数：</p><ul><li>url，linear-gradient</li></ul></li></ul><h4 id="8-媒体查询"><a href="#8-媒体查询" class="headerlink" title="8. 媒体查询"></a>8. 媒体查询</h4><ul><li>针对不同的设备定制不同的样式</li><li>head中link media&#x3D;”screen”</li><li>@media(min-width:1024px){}</li></ul><h4 id="9-自定义属性"><a href="#9-自定义属性" class="headerlink" title="9. 自定义属性"></a>9. 自定义属性</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-pseudo">:root</span>&#123;</span><br><span class="line">    <span class="attr">--theme-color</span>:red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="built_in">var</span>(--theme-color)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="10-1px边框"><a href="#10-1px边框" class="headerlink" title="10. 1px边框"></a>10. 1px边框</h4><ul><li><p>概念：移动端的1px边框比实际的1px要粗</p></li><li><p>原因：window.devicePixelRatio像素比不为1&#x3D;物理像素&#x2F;独立像素</p></li><li><p>解决办法：</p><ul><li><p>0.5px边框：border-width:0.5px</p></li><li><p>border-image</p></li><li><p>background-image</p></li><li><p>多背景渐变</p></li><li><p>box-shadow</p></li><li><p>viewport设置initial-scale&#x3D;0.5</p></li><li><p>伪类，transform</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*单边框*/</span></span><br><span class="line"><span class="selector-class">.scale-1px</span>&#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">border</span>:none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.scale-1px</span><span class="selector-pseudo">:after</span>&#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#000</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">1px</span>;</span><br><span class="line">  -webkit-<span class="attribute">transform</span>: <span class="built_in">scaleY</span>(<span class="number">0.5</span>);</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scaleY</span>(<span class="number">0.5</span>);</span><br><span class="line">  -webkit-<span class="attribute">transform-origin</span>: <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">transform-origin</span>: <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*多边框*/</span></span><br><span class="line"><span class="selector-class">.scale-1px</span>&#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">border</span>:none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.scale-1px</span><span class="selector-pseudo">:after</span>&#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">  -webkit-<span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200%</span>;</span><br><span class="line">  -webkit-<span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.5</span>);</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.5</span>);</span><br><span class="line">  -webkit-<span class="attribute">transform-origin</span>: left top;</span><br><span class="line">  <span class="attribute">transform-origin</span>: left top;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="11-清除浮动"><a href="#11-清除浮动" class="headerlink" title="11. 清除浮动"></a>11. 清除浮动</h4><ul><li><p>概念：浮动脱离文档流，造成父元素高度塌陷</p></li><li><p>解决办法：</p><ul><li>设置父元素 overflow:hidden</li><li>在浮动元素后设置一个空元素，clear:both</li></ul></li><li><p>清除浏览器默认样式：normalize.css</p></li><li><p>长文本处理：数字、字母文本会超出容器，中文会换行</p><ul><li><p>解决办法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*单行文本换行*/</span></span><br><span class="line"><span class="selector-tag">span</span>&#123;</span><br><span class="line">    <span class="attribute">overflow-wrap</span>:bread-word;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*单行文本省略号*/</span></span><br><span class="line"><span class="selector-tag">span</span>&#123;</span><br><span class="line">    <span class="attribute">white-space</span>:nowrap;</span><br><span class="line">    <span class="attribute">overflow</span>:hidden;</span><br><span class="line">    <span class="attribute">text-overflow</span>:ellipsis;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*多行文本省略号*/</span></span><br><span class="line"><span class="selector-tag">span</span>&#123;</span><br><span class="line">    <span class="attribute">overflow</span>:hidden;</span><br><span class="line">    <span class="attribute">text-overflow</span>:ellipsis;</span><br><span class="line">    <span class="attribute">display</span>:-webkit-box;</span><br><span class="line">    -webkit-line-clamp:<span class="number">3</span>;<span class="comment">/*文本行数*/</span></span><br><span class="line">    -webkit-box-orient:vertical;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="12-水平垂直居中"><a href="#12-水平垂直居中" class="headerlink" title="12. 水平垂直居中"></a>12. 水平垂直居中</h4><ul><li><p>水平居中</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>:center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>垂直居中</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*单行文本，inline,inline-block*/</span></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">padding-top</span>:<span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">padding-bottom</span>:<span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>:<span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*固定宽高*/</span></span><br><span class="line"><span class="selector-class">.parent</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>:relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*1*/</span></span><br><span class="line"><span class="selector-class">.child</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">left</span>:<span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin</span>:-<span class="number">50px</span> <span class="number">0</span> <span class="number">0</span> -<span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*2*/</span></span><br><span class="line"><span class="selector-class">.child</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">left</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>:auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*3*/</span></span><br><span class="line"><span class="selector-class">.child</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">left</span>:<span class="built_in">calc</span>(<span class="number">50%</span> - <span class="number">50px</span>);</span><br><span class="line">    <span class="attribute">top</span>:<span class="built_in">calc</span>(<span class="number">50%</span> - <span class="number">50px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*不固定宽高*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*1*/</span></span><br><span class="line"><span class="selector-class">.parent</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>:relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.child</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">left</span>:<span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>:<span class="built_in">translate</span>(-<span class="number">50%</span>,-<span class="number">50%</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2*/</span></span><br><span class="line"><span class="selector-class">.parent</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:table-cell;</span><br><span class="line">    <span class="attribute">vertical-align</span>:center;</span><br><span class="line">    <span class="attribute">text-align</span>:center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.child</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:inline-block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*3*/</span></span><br><span class="line"><span class="selector-class">.parent</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:flex;</span><br><span class="line">    <span class="attribute">justify-content</span>:center;</span><br><span class="line">    <span class="attribute">align-items</span>:center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*4*/</span></span><br><span class="line"><span class="selector-class">.parent</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.child</span>&#123;</span><br><span class="line">    vertical-self:center;</span><br><span class="line">    <span class="attribute">align-self</span>:center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="13-常用布局"><a href="#13-常用布局" class="headerlink" title="13. 常用布局"></a>13. 常用布局</h4><h5 id="13-1-两栏布局"><a href="#13-1-两栏布局" class="headerlink" title="13.1. 两栏布局"></a>13.1. 两栏布局</h5><ul><li><p>float+overflow:hidden BFC原理</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.left</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">float</span><span class="selector-pseudo">:left</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.right</span>&#123;</span><br><span class="line">    <span class="attribute">overflow</span>:hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>float+margin-left</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.left</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">float</span><span class="selector-pseudo">:left</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.right</span>&#123;</span><br><span class="line">    <span class="attribute">margin-left</span>:<span class="number">100px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>flex</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.parent</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:flex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.child1</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.child2</span>&#123;</span><br><span class="line">    <span class="attribute">flex</span>:<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>grid</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.parent</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">grid-template-columns</span>:<span class="number">100px</span> auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="13-2-三栏布局"><a href="#13-2-三栏布局" class="headerlink" title="13.2. 三栏布局"></a>13.2. 三栏布局</h5><ul><li><p>圣杯布局</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">main</span>&gt;</span><span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">left</span>&gt;</span><span class="tag">&lt;/<span class="name">left</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">right</span>&gt;</span><span class="tag">&lt;/<span class="name">right</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.parent</span>&#123;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">0</span> <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.main</span>&#123;</span><br><span class="line">    <span class="attribute">float</span><span class="selector-pseudo">:left</span>;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.left</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>:relative;</span><br><span class="line">    <span class="attribute">float</span><span class="selector-pseudo">:left</span>;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">left</span>:-<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>:-<span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.right</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>:relative;</span><br><span class="line">    <span class="attribute">float</span><span class="selector-pseudo">:left</span>;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">right</span>:-<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>:-<span class="number">200px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>双飞翼布局</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">inner</span>&gt;</span><span class="tag">&lt;/<span class="name">inner</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">left</span>&gt;</span><span class="tag">&lt;/<span class="name">left</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">right</span>&gt;</span><span class="tag">&lt;/<span class="name">right</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.main</span>&#123;</span><br><span class="line">    <span class="attribute">float</span><span class="selector-pseudo">:left</span>;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.inner</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">0</span> <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.left</span>&#123;</span><br><span class="line">    <span class="attribute">float</span><span class="selector-pseudo">:left</span>;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>:-<span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.right</span>&#123;</span><br><span class="line">    <span class="attribute">float</span><span class="selector-pseudo">:left</span>;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>:-<span class="number">200px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>float+overflow(BFC)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">left</span>&gt;</span><span class="tag">&lt;/<span class="name">left</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">right</span>&gt;</span><span class="tag">&lt;/<span class="name">right</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">main</span>&gt;</span><span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.left</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">float</span><span class="selector-pseudo">:left</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.right</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">float</span><span class="selector-pseudo">:right</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.main</span>&#123;</span><br><span class="line">    <span class="attribute">overflow</span>:hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>flex</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">left</span>&gt;</span><span class="tag">&lt;/<span class="name">left</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">main</span>&gt;</span><span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">right</span>&gt;</span><span class="tag">&lt;/<span class="name">right</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.parent</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:flex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.left</span>,<span class="selector-class">.right</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.main</span>&#123;</span><br><span class="line">    <span class="attribute">flex</span>:<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>grid</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">left</span>&gt;</span><span class="tag">&lt;/<span class="name">left</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">main</span>&gt;</span><span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">right</span>&gt;</span><span class="tag">&lt;/<span class="name">right</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.parent</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:grid;</span><br><span class="line">    <span class="attribute">grid-template-columns</span>:<span class="number">200px</span> auto <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="13-3-多列等高布局"><a href="#13-3-多列等高布局" class="headerlink" title="13.3. 多列等高布局"></a>13.3. 多列等高布局</h5><ul><li><p>padding+负margin</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">child</span>&gt;</span><span class="tag">&lt;/<span class="name">child</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">child</span>&gt;</span><span class="tag">&lt;/<span class="name">child</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">child</span>&gt;</span><span class="tag">&lt;/<span class="name">child</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.parent</span>&#123;</span><br><span class="line">    <span class="attribute">overflow</span>:hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.child</span>&#123;</span><br><span class="line">    <span class="attribute">float</span><span class="selector-pseudo">:left</span>;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">33.33%</span>;</span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">1000px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: -<span class="number">1000px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>设置父级背景图片</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">child</span>&gt;</span><span class="tag">&lt;/<span class="name">child</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">child</span>&gt;</span><span class="tag">&lt;/<span class="name">child</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">child</span>&gt;</span><span class="tag">&lt;/<span class="name">child</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.parent</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">url</span>() repeat-y;</span><br><span class="line">    <span class="attribute">background-size</span>:<span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.child</span>&#123;</span><br><span class="line">    <span class="attribute">float</span><span class="selector-pseudo">:left</span>;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">33.33%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="13-4-三行布局"><a href="#13-4-三行布局" class="headerlink" title="13.4. 三行布局"></a>13.4. 三行布局</h5><h6 id="13-4-1-头尾定高中间自适应"><a href="#13-4-1-头尾定高中间自适应" class="headerlink" title="13.4.1. 头尾定高中间自适应"></a>13.4.1. 头尾定高中间自适应</h6><ul><li><p>calc</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layout&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;inner&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span>,</span><br><span class="line"><span class="selector-tag">body</span>,</span><br><span class="line"><span class="selector-class">.layout</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">header</span>, </span><br><span class="line"><span class="selector-tag">footer</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">main</span> &#123;</span><br><span class="line">    <span class="attribute">overflow-y</span>: auto;</span><br><span class="line">    <span class="attribute">height</span>:<span class="built_in">calc</span>(<span class="number">100%</span> - <span class="number">100px</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>absolute</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span>,</span><br><span class="line"><span class="selector-tag">body</span>,</span><br><span class="line"><span class="selector-class">.layout</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">header</span>, </span><br><span class="line"><span class="selector-tag">footer</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">main</span> &#123;</span><br><span class="line">    <span class="attribute">overflow-y</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.layout</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>：relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">header</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">footer</span>:&#123;</span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100%</span>; </span><br><span class="line">    <span class="attribute">bottom</span>:<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">main</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">bottom</span>:<span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">box-sizing</span>:border-box;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>flex</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span>,</span><br><span class="line"><span class="selector-tag">body</span>,</span><br><span class="line"><span class="selector-class">.layout</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">header</span>, </span><br><span class="line"><span class="selector-tag">footer</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">main</span> &#123;</span><br><span class="line">    <span class="attribute">overflow-y</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.layout</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>：<span class="attribute">flex</span>;</span><br><span class="line">    <span class="attribute">flex-direction</span>:column;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">main</span>&#123;</span><br><span class="line">    <span class="attribute">flex</span>:<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>grid</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span>,</span><br><span class="line"><span class="selector-tag">body</span>,</span><br><span class="line"><span class="selector-class">.layout</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">header</span>, </span><br><span class="line"><span class="selector-tag">footer</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">main</span> &#123;</span><br><span class="line">    <span class="attribute">overflow-y</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.layout</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>：<span class="attribute">grid</span>;</span><br><span class="line">    <span class="attribute">grid-template-rows</span>:<span class="number">50px</span> <span class="number">1</span>fr <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="14-动画"><a href="#14-动画" class="headerlink" title="14. 动画"></a>14. 动画</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">animation</span>: change <span class="number">3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> change&#123;</span><br><span class="line">    <span class="number">0%</span>&#123;</span><br><span class="line">        <span class="attribute">color</span>:<span class="number">#000</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">100%</span>&#123;</span><br><span class="line">        <span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="15-less-sass-scss-stylus"><a href="#15-less-sass-scss-stylus" class="headerlink" title="15. less sass scss stylus"></a>15. less sass scss stylus</h4><h5 id="15-1-less简介"><a href="#15-1-less简介" class="headerlink" title="15.1. less简介"></a>15.1. less简介</h5><ul><li>概念：一种css预处理语言</li></ul><h5 id="15-2-使用方法"><a href="#15-2-使用方法" class="headerlink" title="15.2. 使用方法"></a>15.2. 使用方法</h5><ul><li><p>本地或者CDN引入，先引入less文件，且link的rel属性值为stylesheet&#x2F;less, 再引入js库</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet/less&quot;</span> <span class="attr">href</span>=<span class="string">&quot;style.less&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//cdnjs.cloudflare.com/ajax/libs/less.js/2.7.2/less.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>npm安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g less</span><br><span class="line">lessc styles.less &gt; styles.css</span><br></pre></td></tr></table></figure></li></ul><h5 id="15-3-语法"><a href="#15-3-语法" class="headerlink" title="15.3. 语法"></a>15.3. 语法</h5><h6 id="15-3-1-变量"><a href="#15-3-1-变量" class="headerlink" title="15.3.1. 变量"></a>15.3.1. 变量</h6><ul><li><p>普通变量</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@color:</span><span class="number">#fff</span>;</span><br><span class="line"><span class="variable">@bgColor:</span><span class="number">#000</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="variable">@color</span>;</span><br><span class="line">    <span class="attribute">background-color</span>:<span class="variable">@bgColor</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*解析*/</span></span><br><span class="line"><span class="selector-id">#div</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">background-color</span>:<span class="number">#000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>选择器变量</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@theDiv:</span>#div;</span><br><span class="line"><span class="variable">@theClass:</span>divclass;</span><br><span class="line"></span><br><span class="line"><span class="variable">@&#123;theDiv&#125;</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.@&#123;theClass&#125;</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*解析*/</span></span><br><span class="line"><span class="selector-id">#div</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.divclass</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>属性变量</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@color:</span>color;</span><br><span class="line"><span class="variable">@fz:</span>font-size;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div</span>&#123;</span><br><span class="line">    @&#123;<span class="attribute">color&#125;</span>:<span class="number">#fff</span>;</span><br><span class="line">    @&#123;fz&#125;:<span class="number">16px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*解析*/</span></span><br><span class="line"><span class="selector-id">#div</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">16px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>url变量</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@image:</span><span class="string">&#x27;../img&#x27;</span>;</span><br><span class="line"><span class="selector-id">#div</span>&#123;</span><br><span class="line">    <span class="attribute">background-image</span>:url(<span class="string">&#x27;@&#123;image&#125;/1.jpg&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*解析*/</span></span><br><span class="line"><span class="selector-id">#div</span>&#123;</span><br><span class="line">    <span class="attribute">background-image</span>:url(<span class="string">&#x27;../img/1.jpg&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>声名变量</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@fonts:</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">16px</span>;</span><br><span class="line">&#125;</span><br><span class="line">#div&#123;</span><br><span class="line">    <span class="variable">@fonts</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*解析*/</span></span><br><span class="line">#div &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>变量运算</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@width:</span><span class="number">200px</span>;</span><br><span class="line"><span class="variable">@color:</span><span class="number">#123</span>;</span><br><span class="line"><span class="selector-id">#div</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="variable">@width</span> - <span class="number">100</span>;<span class="comment">/*减号需要有空格*/</span></span><br><span class="line">    <span class="attribute">margin</span>:(<span class="variable">@width</span> - <span class="number">10</span>)*<span class="number">1</span>;</span><br><span class="line">    <span class="attribute">color</span>:<span class="variable">@color</span>*<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*解析*/</span></span><br><span class="line"><span class="selector-id">#div</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">190px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#224466</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>变量作用域</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@var:</span><span class="variable">@a</span>;</span><br><span class="line"><span class="variable">@a:</span><span class="number">100%</span>;</span><br><span class="line"><span class="selector-id">#div</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="variable">@var</span>;</span><br><span class="line">    <span class="variable">@a:</span><span class="number">50%</span>;<span class="comment">/*就近原则*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*解析*/</span></span><br><span class="line"><span class="selector-id">#div</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>用变量去定义变量</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@a:</span><span class="string">&#x27;内容&#x27;</span>;</span><br><span class="line"><span class="variable">@b:</span><span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="selector-id">#div</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>:<span class="variable">@@b</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*解析*/</span></span><br><span class="line"><span class="selector-id">#div</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;内容&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h6 id="15-3-2-嵌套"><a href="#15-3-2-嵌套" class="headerlink" title="15.3.2. 嵌套"></a>15.3.2. 嵌套</h6><ul><li><p>&amp;的用法，表示上一层选择器的名称</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div</span>&#123;</span><br><span class="line">    <span class="selector-tag">&amp;</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">        <span class="attribute">content</span>:<span class="string">&#x27;内容&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">&amp;</span><span class="selector-tag">_span</span>&#123;</span><br><span class="line">        <span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.title</span>&#123;</span><br><span class="line">        <span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*解析*/</span></span><br><span class="line"><span class="selector-id">#div</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;内容&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div_span</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#div</span> <span class="selector-class">.title</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>媒体查询</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div</span>&#123;</span><br><span class="line">    <span class="keyword">@media</span> screen&#123;</span><br><span class="line">        <span class="keyword">@media</span> (<span class="attribute">max-width</span>:<span class="number">768px</span>)&#123;</span><br><span class="line">            <span class="attribute">color</span>:<span class="number">#f00</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*解析*/</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">768px</span>)</span><br><span class="line">#div &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#f00</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h6 id="15-3-3-混合"><a href="#15-3-3-混合" class="headerlink" title="15.3.3. 混合"></a>15.3.3. 混合</h6><ul><li><p>无参数方法</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.style1</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#div</span>&#123;</span><br><span class="line">    <span class="selector-class">.style1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*或者*/</span></span><br><span class="line"><span class="selector-class">.style1</span>()&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#div</span>&#123;</span><br><span class="line">    <span class="selector-class">.style1</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*解析*/</span></span><br><span class="line"><span class="selector-id">#div</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>默认参数方法</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.style1</span>(<span class="variable">@a</span>:<span class="number">#fff</span>,<span class="variable">@b</span>:<span class="number">100px</span>)&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="variable">@a</span>;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="variable">@b</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div</span>&#123;</span><br><span class="line">    <span class="selector-class">.style1</span>(<span class="number">#fff</span>,<span class="number">200px</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div</span> &#123;</span><br><span class="line">    <span class="selector-class">.style1</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*解析*/</span></span><br><span class="line"><span class="selector-id">#div</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#div</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>方法的匹配模式</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.style</span>(s1,<span class="variable">@b</span>:<span class="number">#fff</span>,<span class="variable">@c</span>:<span class="number">100px</span>)&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="variable">@b</span>;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="variable">@c</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.style</span>(s2,<span class="variable">@b</span>:<span class="number">#f00</span>,<span class="variable">@c</span>:<span class="number">200px</span>)&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="variable">@b</span>;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="variable">@c</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.style</span>(s3,<span class="variable">@b</span>:<span class="number">#fff</span>,<span class="variable">@c</span>:<span class="number">300px</span>)&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="variable">@b</span>;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="variable">@c</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div</span>&#123;</span><br><span class="line">   <span class="selector-class">.style</span>(s2,<span class="number">#ff0</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*解析*/</span></span><br><span class="line"><span class="selector-id">#div</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff0</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>方法的命名空间</p></li><li><p>方法的条件筛选，when</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#style1</span>&#123;</span><br><span class="line">    <span class="selector-class">.color</span>(<span class="variable">@width</span>,<span class="variable">@color</span>) <span class="keyword">when</span> (<span class="variable">@width</span>&gt;<span class="number">300px</span>) <span class="keyword">and</span> (<span class="variable">@color</span> = <span class="number">#fff</span>)&#123;</span><br><span class="line">        <span class="attribute">color</span>:<span class="variable">@color</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.background</span>(<span class="variable">@color</span>) <span class="keyword">when</span> <span class="keyword">not</span> (<span class="variable">@color</span>&lt;<span class="number">#f00</span>)&#123;</span><br><span class="line">        <span class="attribute">background-color</span>:<span class="variable">@color</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.font</span>(<span class="variable">@size</span>:<span class="number">20px</span>) <span class="keyword">when</span> (<span class="variable">@size</span>&lt;<span class="number">50px</span>) , (<span class="variable">@size</span>&gt;<span class="number">100px</span>)&#123;</span><br><span class="line">        <span class="attribute">font-size</span>:<span class="variable">@size</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#div</span>&#123;</span><br><span class="line">    <span class="selector-id">#style1</span> &gt; <span class="selector-class">.color</span>(<span class="number">500px</span>,<span class="number">#fff</span>);</span><br><span class="line">    <span class="selector-id">#style1</span> &gt; <span class="selector-class">.background</span>(<span class="number">#f0f</span>);</span><br><span class="line">    <span class="selector-id">#style1</span> &gt; <span class="selector-class">.font</span>(<span class="number">200px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*解析*/</span></span><br><span class="line"><span class="selector-id">#div</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f0f</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>数量不定参数</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.border</span>(...)&#123;</span><br><span class="line">    <span class="attribute">border</span>:<span class="variable">@arguments</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#div</span>&#123;</span><br><span class="line">    <span class="selector-class">.border</span>(<span class="number">3px</span>,solid,<span class="number">#f0f</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*解析*/</span></span><br><span class="line"><span class="selector-id">#div</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">3px</span> solid <span class="number">#f0f</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>方法使用!important</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.style1</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#div</span> &#123;</span><br><span class="line">    <span class="selector-class">.style1</span>() !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*解析*/</span></span><br><span class="line"><span class="selector-id">#div</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>循环</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="selector-class">.generate-columns</span>(<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.generate-columns</span>(<span class="variable">@n</span>, <span class="variable">@i</span>: <span class="number">1</span>) <span class="keyword">when</span> (<span class="variable">@i</span> =&lt; <span class="variable">@n</span>) &#123;</span><br><span class="line">  <span class="selector-class">.column-</span><span class="variable">@&#123;i&#125;</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: (<span class="variable">@i</span> * <span class="number">100%</span> / <span class="variable">@n</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.generate-columns</span>(<span class="variable">@n</span>, (<span class="variable">@i</span> + <span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 解析 */</span></span><br><span class="line"><span class="selector-class">.column-1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">25%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.column-2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.column-3</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">75%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.column-4</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>属性拼接</p><ul><li><p>逗号，+</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="selector-class">.boxShadow</span>() &#123;</span><br><span class="line">    <span class="selector-tag">box-shadow</span>+: <span class="selector-tag">inset</span> <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="selector-id">#555</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.main</span> &#123;</span><br><span class="line">  <span class="selector-class">.boxShadow</span>();</span><br><span class="line">  <span class="selector-tag">box-shadow</span>+: <span class="number">0</span> <span class="number">0</span> <span class="number">20px</span> <span class="selector-tag">black</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 解析 */</span></span><br><span class="line"><span class="selector-class">.main</span> &#123;</span><br><span class="line">  <span class="attribute">box-shadow</span>: inset <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="number">#555</span>, <span class="number">0</span> <span class="number">0</span> <span class="number">20px</span> black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>空格，+_</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="selector-class">.Animation</span>() &#123;</span><br><span class="line">  <span class="selector-tag">transform</span>+<span class="selector-tag">_</span>: <span class="selector-tag">scale</span>(<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.main</span> &#123;</span><br><span class="line">  <span class="selector-class">.Animation</span>();</span><br><span class="line">  <span class="selector-tag">transform</span>+<span class="selector-tag">_</span>: <span class="selector-tag">rotate</span>(<span class="number">15deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 解析 */</span></span><br><span class="line"><span class="selector-class">.main</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">2</span>) <span class="built_in">rotate</span>(<span class="number">15deg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h6 id="15-3-4-继承"><a href="#15-3-4-继承" class="headerlink" title="15.3.4. 继承"></a>15.3.4. 继承</h6><ul><li><p>extend</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="selector-class">.animation</span>&#123;</span><br><span class="line">    <span class="attribute">transition</span>: all .<span class="number">3s</span> ease-out;</span><br><span class="line">    <span class="selector-class">.hide</span>&#123;</span><br><span class="line">      <span class="attribute">transform</span>:<span class="built_in">scale</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">    <span class="selector-tag">&amp;</span>:<span class="selector-tag">extend</span>(.animation);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#con</span>&#123;</span><br><span class="line">    <span class="selector-tag">&amp;</span>:<span class="selector-tag">extend</span>(.animation .hide);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 解析 */</span></span><br><span class="line"><span class="selector-class">.animation</span>,<span class="selector-id">#main</span>&#123;</span><br><span class="line">  <span class="attribute">transition</span>: all .<span class="number">3s</span> ease-out;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.animation</span> <span class="selector-class">.hide</span> , <span class="selector-id">#con</span>&#123;</span><br><span class="line">    <span class="attribute">transform</span>:<span class="built_in">scale</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>all</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span> &#123;</span><br><span class="line">  <span class="selector-tag">&amp;</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>:<span class="string">&quot;Less is good!&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#wrap</span>:<span class="selector-tag">extend</span>(#main all) &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 解析 */</span></span><br><span class="line"><span class="selector-id">#main</span>,<span class="selector-id">#wrap</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span><span class="selector-pseudo">:after</span>, <span class="selector-id">#wrap</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;Less is good!&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h6 id="15-3-5-导入"><a href="#15-3-5-导入" class="headerlink" title="15.3.5. 导入"></a>15.3.5. 导入</h6><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">import</span> &quot;<span class="selector-tag">main</span><span class="selector-class">.less</span>&quot;;</span><br><span class="line">@<span class="selector-tag">import</span> (reference) &quot;<span class="selector-tag">bootstrap</span><span class="selector-class">.less</span>&quot;; <span class="comment">/*reference 导入外部less,但是不会编译输出，只引用*/</span></span><br><span class="line">@<span class="selector-tag">import</span> (once) &quot;<span class="selector-tag">foo</span><span class="selector-class">.less</span>&quot;;<span class="comment">/*once 相同的文件只会被导入一次*/</span></span><br><span class="line">@<span class="selector-tag">import</span> (multiple) &quot;<span class="selector-tag">foo</span><span class="selector-class">.less</span>&quot;;<span class="comment">/*multiple 相同的文件可导入多次*/</span></span><br></pre></td></tr></table></figure><h6 id="15-3-6-函数"><a href="#15-3-6-函数" class="headerlink" title="15.3.6. 函数"></a>15.3.6. 函数</h6><ul><li><p>判断类型</p><ul><li>isnumber，判断给定的值 是否 是一个数字</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">isnumber</span>(<span class="number">#ff0</span>);     <span class="comment">// false</span></span><br><span class="line"><span class="selector-tag">isnumber</span>(blue);     <span class="comment">// false</span></span><br><span class="line"><span class="selector-tag">isnumber</span>(<span class="string">&quot;string&quot;</span>); <span class="comment">// false</span></span><br><span class="line"><span class="selector-tag">isnumber</span>(<span class="number">1234</span>);     <span class="comment">// true</span></span><br><span class="line"><span class="selector-tag">isnumber</span>(<span class="number">56px</span>);     <span class="comment">// true</span></span><br><span class="line"><span class="selector-tag">isnumber</span>(<span class="number">7.8%</span>);     <span class="comment">// true</span></span><br><span class="line"><span class="selector-tag">isnumber</span>(keyword);  <span class="comment">// false</span></span><br><span class="line"><span class="selector-tag">isnumber</span>(url(<span class="string">...</span>)); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><ul><li>iscolor，判断给定的值 是否 是一个颜色</li><li>isurl，判断给定的值 是否 是一个 url</li></ul></li><li><p>颜色</p><ul><li>saturate，增加一定数值的颜色饱和度</li><li>lighten，增加一定数值的颜色亮度</li><li>darken，降低一定数值的颜色亮度</li><li>fade，给颜色设定一定数值的透明度</li><li>mix，根据比例混合两种颜色</li></ul></li><li><p>数学：ceil、floor、percentage、round、sqrt、abs、pow</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript基础知识(一)</title>
      <link href="/posts/49768618/"/>
      <url>/posts/49768618/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="JavaScript基础知识-一"><a href="#JavaScript基础知识-一" class="headerlink" title="JavaScript基础知识(一)"></a>JavaScript基础知识(一)</h2><h3 id="1-数据类型-判断"><a href="#1-数据类型-判断" class="headerlink" title="1. 数据类型&amp;判断"></a>1. 数据类型&amp;判断</h3><h4 id="1-1-数据类型"><a href="#1-1-数据类型" class="headerlink" title="1.1. 数据类型"></a>1.1. 数据类型</h4><ul><li>Number</li><li>String</li><li>Boolean</li><li>Undefined</li><li>Null</li><li>Symbol</li><li>BigInt</li><li>Object</li></ul><h4 id="1-2-类型判断"><a href="#1-2-类型判断" class="headerlink" title="1.2. 类型判断"></a>1.2. 类型判断</h4><ul><li><p>typeof</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typeof</span> <span class="number">123</span> <span class="comment">//number</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">true</span> <span class="comment">//boolean</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="string">&quot;abc&quot;</span> <span class="comment">//string</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">undefined</span> <span class="comment">//undefined</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">null</span> <span class="comment">//object</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="number">123n</span> <span class="comment">//bigint</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="title class_">Symbol</span>(a) <span class="comment">//symbol</span></span><br><span class="line"><span class="keyword">typeof</span> [] <span class="comment">//object</span></span><br><span class="line"><span class="keyword">typeof</span> &#123;&#125; <span class="comment">//object</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;&#125; <span class="comment">//function</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="title class_">NaN</span> <span class="comment">//number</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="keyword">new</span> <span class="title class_">Date</span>() <span class="comment">//object</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="title class_">RegExp</span>() <span class="comment">//object</span></span><br></pre></td></tr></table></figure></li><li><p>instanceof</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params"></span>) &#123;&#125;</span><br><span class="line"><span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Person</span>()</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(p <span class="keyword">instanceof</span> <span class="title class_">Person</span>) <span class="comment">//true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(p <span class="keyword">instanceof</span> <span class="title class_">Object</span>) <span class="comment">//true</span></span><br></pre></td></tr></table></figure></li><li><p>constructor</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params"></span>) &#123;&#125;</span><br><span class="line"><span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Person</span>()</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(p.<span class="property">constructor</span> === <span class="title class_">Person</span>) <span class="comment">//true</span></span><br></pre></td></tr></table></figure></li><li><p>Array</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Array</span>.<span class="title function_">isArray</span>([]) <span class="comment">//true</span></span><br></pre></td></tr></table></figure></li><li><p>NaN</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">isNaN</span>(<span class="title class_">NaN</span>) <span class="comment">//true</span></span><br><span class="line"><span class="built_in">isNaN</span>(<span class="number">123</span>) <span class="comment">//false</span></span><br><span class="line"><span class="built_in">isNaN</span>(<span class="string">&quot;abc&quot;</span>) <span class="comment">//true</span></span><br></pre></td></tr></table></figure></li><li><p>prototype</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(<span class="number">123</span>) <span class="comment">//[object Number]</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(<span class="string">&quot;abc&quot;</span>) <span class="comment">//[object String]</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(<span class="literal">true</span>) <span class="comment">//[object Boolean]</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(<span class="literal">undefined</span>) <span class="comment">//[object Undefined]</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(<span class="literal">null</span>) <span class="comment">//[object Null]</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(<span class="title class_">Symbol</span>()) <span class="comment">//[object Symbol]</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(<span class="number">123n</span>) <span class="comment">//[object BigInt]</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>([]) <span class="comment">//[object Array]</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(&#123;&#125;) <span class="comment">//[object Object]</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;&#125;) <span class="comment">//[object Function]</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(<span class="keyword">new</span> <span class="title class_">Date</span>()) <span class="comment">//[object Date]</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(<span class="title class_">RegExp</span>()) <span class="comment">//[object RegExp]</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="1-3-判断是否相等"><a href="#1-3-判断是否相等" class="headerlink" title="1.3. 判断是否相等"></a>1.3. 判断是否相等</h4><ul><li><p>全等</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">null</span> == <span class="literal">undefined</span> <span class="comment">//true</span></span><br><span class="line"><span class="literal">null</span> === <span class="literal">undefined</span> <span class="comment">//false</span></span><br><span class="line"><span class="title class_">NaN</span> == <span class="title class_">NaN</span> <span class="comment">//false</span></span><br><span class="line">+<span class="number">0</span> === <span class="number">0</span> <span class="comment">//true</span></span><br><span class="line">+<span class="number">0</span> === -<span class="number">0</span> <span class="comment">//true</span></span><br></pre></td></tr></table></figure></li><li><p>Object.is</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Object</span>.<span class="title function_">is</span>(<span class="literal">null</span>, <span class="literal">undefined</span>) <span class="comment">//false</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">is</span>(<span class="title class_">NaN</span>, <span class="title class_">NaN</span>) <span class="comment">//true</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">is</span>(+<span class="number">0</span>, <span class="number">0</span>) <span class="comment">//true</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">is</span>(-<span class="number">0</span>, <span class="number">0</span>) <span class="comment">//false</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">is</span>(+<span class="number">0</span>, -<span class="number">0</span>) <span class="comment">//false</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="1-4-判断是否为空"><a href="#1-4-判断是否为空" class="headerlink" title="1.4. 判断是否为空"></a>1.4. 判断是否为空</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断是否为null</span></span><br><span class="line">value === <span class="literal">null</span></span><br><span class="line">!value &amp;&amp; <span class="keyword">typeof</span> value != <span class="string">&quot;undefined&quot;</span> &amp;&amp; value != <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//判断是否为空</span></span><br><span class="line">!value <span class="comment">//判断null undefine NaN 0 false &quot;&quot;</span></span><br><span class="line">value.<span class="property">length</span> === <span class="number">0</span> <span class="comment">//判断[]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Object.getOwnPropertyNames 判断&#123;&#125;</span></span><br><span class="line"><span class="keyword">var</span> value = &#123;&#125;</span><br><span class="line"><span class="keyword">var</span> arr = <span class="title class_">Object</span>.<span class="title function_">getOwnPropertyNames</span>(value)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="property">length</span> == <span class="number">0</span>) <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Object.getOwnPropertySymbols 判断Symbol()</span></span><br><span class="line"><span class="keyword">var</span> value = &#123;&#125;</span><br><span class="line"><span class="keyword">var</span> arr = <span class="title class_">Object</span>.<span class="title function_">getOwnPropertySymbols</span>(value)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="property">length</span> == <span class="number">0</span>) <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h3 id="2-构造函数-原型-实例-类"><a href="#2-构造函数-原型-实例-类" class="headerlink" title="2. 构造函数&amp;原型&amp;实例&amp;类"></a>2. 构造函数&amp;原型&amp;实例&amp;类</h3><h4 id="2-1-关系"><a href="#2-1-关系" class="headerlink" title="2.1. 关系"></a>2.1. 关系</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.构造函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params">name, age</span>) &#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">name</span> = name</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">age</span> = age</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">sayName</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;Jim Green&quot;</span>, <span class="number">12</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//2. 构造函数的原型</span></span><br><span class="line"><span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">job</span> = <span class="string">&quot;student&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//3. 关系</span></span><br><span class="line">p <span class="keyword">instanceof</span> <span class="title class_">Person</span> <span class="comment">//true</span></span><br><span class="line">p.<span class="property">__proto__</span> === <span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span> <span class="comment">//true</span></span><br><span class="line"><span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">constructor</span> === <span class="title class_">Person</span> <span class="comment">// true</span></span><br><span class="line"><span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="title function_">isPrototypeOf</span>(p) <span class="comment">//true</span></span><br></pre></td></tr></table></figure><h4 id="2-2-继承"><a href="#2-2-继承" class="headerlink" title="2.2. 继承"></a>2.2. 继承</h4><h5 id="2-2-1-原型继承"><a href="#2-2-1-原型继承" class="headerlink" title="2.2.1. 原型继承"></a>2.2.1. 原型继承</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">SuperType</span>(<span class="params">name,age</span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">sayName</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">SubType</span>(<span class="params"></span>)&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">SubType</span>.<span class="property"><span class="keyword">prototype</span></span> = <span class="keyword">new</span> <span class="title class_">SuperType</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> sub = <span class="keyword">new</span> <span class="title class_">SubType</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sub <span class="keyword">instanceof</span> <span class="title class_">SubType</span>); <span class="comment">//true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sub <span class="keyword">instanceof</span> <span class="title class_">SuperType</span>); <span class="comment">//true</span></span><br></pre></td></tr></table></figure><h5 id="2-2-2-经典继承"><a href="#2-2-2-经典继承" class="headerlink" title="2.2.2. 经典继承"></a>2.2.2. 经典继承</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">SuperType</span>(<span class="params">name,age</span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">sayName</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">SubType</span>(<span class="params">name, age</span>)&#123;</span><br><span class="line">    <span class="title class_">SuperType</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>, name, age)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> sub = <span class="keyword">new</span> <span class="title class_">SubType</span>(<span class="string">&#x27;Jim Green&#x27;</span>,<span class="number">12</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sub.<span class="property">name</span>); <span class="comment">//Jim Green</span></span><br><span class="line">sub.<span class="title function_">sayName</span>(); <span class="comment">//Jim Green</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sub <span class="keyword">instanceof</span> <span class="title class_">SubType</span>); <span class="comment">//true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sub <span class="keyword">instanceof</span> <span class="title class_">SuperType</span>); <span class="comment">//false</span></span><br></pre></td></tr></table></figure><h5 id="2-2-3-组合继承"><a href="#2-2-3-组合继承" class="headerlink" title="2.2.3. 组合继承"></a>2.2.3. 组合继承</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">SuperType</span>(<span class="params">name,age</span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">sayName</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">SuperType</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">sayAge</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">age</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">SubType</span>(<span class="params">name, age, job</span>)&#123;</span><br><span class="line">    <span class="title class_">SuperType</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>, name, age)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">job</span> = job</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">SubType</span>.<span class="property"><span class="keyword">prototype</span></span> = <span class="keyword">new</span> <span class="title class_">SuperType</span>();</span><br><span class="line"><span class="title class_">SubType</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">sayJob</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">job</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> sub = <span class="keyword">new</span> <span class="title class_">SubType</span>(<span class="string">&#x27;Jim Green&#x27;</span>,<span class="number">12</span>,<span class="string">&#x27;student&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sub.<span class="property">name</span>); <span class="comment">//Jim Green</span></span><br><span class="line">sub.<span class="title function_">sayName</span>(); <span class="comment">//Jim Green</span></span><br><span class="line">sub.<span class="title function_">sayAge</span>(); <span class="comment">//12</span></span><br><span class="line">sub.<span class="title function_">sayJob</span>(); <span class="comment">//student</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sub <span class="keyword">instanceof</span> <span class="title class_">SubType</span>); <span class="comment">//true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sub <span class="keyword">instanceof</span> <span class="title class_">SuperType</span>); <span class="comment">//true</span></span><br></pre></td></tr></table></figure><h5 id="2-2-4-原型式继承"><a href="#2-2-4-原型式继承" class="headerlink" title="2.2.4. 原型式继承"></a>2.2.4. 原型式继承</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">object</span>(<span class="params">o</span>)&#123;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">F</span>(<span class="params"></span>)&#123;&#125;</span><br><span class="line">    F.<span class="property"><span class="keyword">prototype</span></span> = o</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title function_">F</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> person = &#123; </span><br><span class="line"><span class="attr">name</span>: <span class="string">&quot;Nicholas&quot;</span>, </span><br><span class="line"><span class="attr">friends</span>: [<span class="string">&quot;Shelby&quot;</span>, <span class="string">&quot;Court&quot;</span>, <span class="string">&quot;Van&quot;</span>] </span><br><span class="line">&#125;; </span><br><span class="line"><span class="keyword">let</span> anotherPerson = <span class="title function_">object</span>(person); </span><br><span class="line">anotherPerson.<span class="property">name</span> = <span class="string">&quot;Greg&quot;</span>; </span><br><span class="line">anotherPerson.<span class="property">friends</span>.<span class="title function_">push</span>(<span class="string">&quot;Rob&quot;</span>); </span><br><span class="line"><span class="keyword">let</span> yetAnotherPerson = <span class="title function_">object</span>(person); </span><br><span class="line">yetAnotherPerson.<span class="property">name</span> = <span class="string">&quot;Linda&quot;</span>; </span><br><span class="line">yetAnotherPerson.<span class="property">friends</span>.<span class="title function_">push</span>(<span class="string">&quot;Barbie&quot;</span>); </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(person.<span class="property">friends</span>);<span class="comment">// [&#x27;Shelby&#x27;, &#x27;Court&#x27;, &#x27;Van&#x27;, &#x27;Rob&#x27;, &#x27;Barbie&#x27;]</span></span><br></pre></td></tr></table></figure><h5 id="2-2-5-寄生式组合继承"><a href="#2-2-5-寄生式组合继承" class="headerlink" title="2.2.5. 寄生式组合继承"></a>2.2.5. 寄生式组合继承</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">object</span>(<span class="params">o</span>)&#123;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">F</span>(<span class="params"></span>)&#123;&#125;</span><br><span class="line">    F.<span class="property"><span class="keyword">prototype</span></span> = o</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title function_">F</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">inheritPrototype</span>(<span class="params">subType,superType</span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> prototype = <span class="title function_">object</span>(superType.<span class="property"><span class="keyword">prototype</span></span>);</span><br><span class="line">    prototype.<span class="property">constructor</span> = subType;</span><br><span class="line">    subType.<span class="property"><span class="keyword">prototype</span></span> = prototype;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-3-类"><a href="#2-3-类" class="headerlink" title="2.3. 类"></a>2.3. 类</h4><h5 id="2-3-1-类的构成"><a href="#2-3-1-类的构成" class="headerlink" title="2.3.1. 类的构成"></a>2.3.1. 类的构成</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Foo</span>&#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name,age</span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = name ;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">sayName</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">baseF</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> f = <span class="keyword">new</span> <span class="title class_">Foo</span>(<span class="string">&#x27;Jim Green&#x27;</span>,<span class="number">12</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(f.<span class="property">name</span>); <span class="comment">// Jim Green</span></span><br><span class="line">f.<span class="title function_">sayName</span>(); <span class="comment">// Jim Green</span></span><br><span class="line"><span class="title class_">Foo</span>.<span class="title function_">baseF</span>(); <span class="comment">// class Foo&#123;...&#125;</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="title class_">Foo</span> ; <span class="comment">// funciton </span></span><br></pre></td></tr></table></figure><h5 id="2-3-2-类继承"><a href="#2-3-2-类继承" class="headerlink" title="2.3.2. 类继承"></a>2.3.2. 类继承</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Super</span>&#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name,age</span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = name ;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">sayName</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">baseF</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Sub</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Super</span>&#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name,age,job</span>)&#123;</span><br><span class="line">        <span class="variable language_">super</span>(name,age);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">job</span> = job; </span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> s = <span class="keyword">new</span> <span class="title class_">Sub</span>(<span class="string">&#x27;Jim Green&#x27;</span>,<span class="number">12</span>, <span class="string">&#x27;student&#x27;</span>);<span class="comment">//Jim Green</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(s.<span class="property">age</span>); <span class="comment">//12</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(s.<span class="property">job</span>); <span class="comment">//student</span></span><br><span class="line">s.<span class="title function_">sayName</span>(); <span class="comment">//Jim Green</span></span><br><span class="line"><span class="title class_">Sub</span>.<span class="title function_">baseF</span>(); <span class="comment">//class Sub&#123;...&#125;</span></span><br></pre></td></tr></table></figure><h3 id="3-数组遍历"><a href="#3-数组遍历" class="headerlink" title="3. 数组遍历"></a>3. 数组遍历</h3><ul><li>for循环  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">17</span>,<span class="number">19</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>, len = arr.<span class="property">length</span> ; i &lt; len ; i++ )&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(arr[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>forEach  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">17</span>,<span class="number">19</span>];</span><br><span class="line">arr.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">item,index,arr</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(item)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li>for…in  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">17</span>,<span class="number">19</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> index <span class="keyword">in</span> arr)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(arr[index]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>for…of  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">17</span>,<span class="number">19</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> item <span class="keyword">of</span> arr)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(item);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>Object.entries  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">17</span>,<span class="number">19</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> [index,item] <span class="keyword">of</span> arr.<span class="title function_">entries</span>())&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(index,item);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>Object.keys()  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">17</span>,<span class="number">19</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> index <span class="keyword">of</span> arr.<span class="title function_">keys</span>())&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(index);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>Object.values()  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">17</span>,<span class="number">19</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> item <span class="keyword">of</span> arr.<span class="title function_">values</span>())&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(item);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="4-对象遍历"><a href="#4-对象遍历" class="headerlink" title="4. 对象遍历"></a>4. 对象遍历</h3><ul><li>for-in 循环——只遍历可枚举属性，包含实例属性和原型属性  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">    <span class="attr">a</span>:<span class="number">123</span>,</span><br><span class="line">    <span class="attr">b</span>:<span class="string">&#x27;abc&#x27;</span>,</span><br><span class="line">    <span class="attr">c</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>( <span class="keyword">let</span> key <span class="keyword">in</span> obj)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(obj[key])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>Object.keys()——只遍历可枚举属性，只包含实例属性  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line"><span class="attr">a</span>: <span class="number">123</span>,</span><br><span class="line"><span class="attr">b</span>: <span class="string">&quot;abc&quot;</span>,</span><br><span class="line"><span class="attr">c</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> res = <span class="title class_">Object</span>.<span class="title function_">keys</span>(obj)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br></pre></td></tr></table></figure></li><li>Object.values()——只遍历可枚举属性，只包含实例属性  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line"><span class="attr">a</span>: <span class="number">123</span>,</span><br><span class="line"><span class="attr">b</span>: <span class="string">&quot;abc&quot;</span>,</span><br><span class="line"><span class="attr">c</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> res = <span class="title class_">Object</span>.<span class="title function_">values</span>(obj)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br></pre></td></tr></table></figure></li><li>Object.entries()——只遍历可枚举属性，只包含实例属性  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line"><span class="attr">a</span>: <span class="number">123</span>,</span><br><span class="line"><span class="attr">b</span>: <span class="string">&quot;abc&quot;</span>,</span><br><span class="line"><span class="attr">c</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> res = <span class="title class_">Object</span>.<span class="title function_">entries</span>(obj)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br></pre></td></tr></table></figure></li><li>Object.getOwnPropertyNames——遍历所有属性，除了Symbol属性，包含可枚举和不可枚举，包含实例属性和原型属性  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line"><span class="attr">a</span>: <span class="number">123</span>,</span><br><span class="line"><span class="attr">b</span>: <span class="string">&quot;abc&quot;</span>,</span><br><span class="line"><span class="attr">c</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>()</span><br><span class="line">&#125;,</span><br><span class="line">[<span class="title class_">Symbol</span>()]:<span class="number">111</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> res = <span class="title class_">Object</span>.<span class="title function_">getOwnPropertyNames</span>(obj)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br></pre></td></tr></table></figure></li><li>Object.getOwnPropertySymbols——只遍历Symbol属性，包含可枚举和不可枚举，包含实例属性和原型属性  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line"><span class="attr">a</span>: <span class="number">123</span>,</span><br><span class="line"><span class="attr">b</span>: <span class="string">&quot;abc&quot;</span>,</span><br><span class="line"><span class="attr">c</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>()</span><br><span class="line">&#125;,</span><br><span class="line">[<span class="title class_">Symbol</span>()]:<span class="number">111</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> res = <span class="title class_">Object</span>.<span class="title function_">getOwnPropertySymbols</span>(obj)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br></pre></td></tr></table></figure></li><li>Reflect.ownKeys——遍历所有属性，包含可枚举和不可枚举，包含实例属性和原型属性  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line"><span class="attr">a</span>: <span class="number">123</span>,</span><br><span class="line"><span class="attr">b</span>: <span class="string">&quot;abc&quot;</span>,</span><br><span class="line"><span class="attr">c</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>()</span><br><span class="line">&#125;,</span><br><span class="line">[<span class="title class_">Symbol</span>()]:<span class="number">111</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> res = <span class="title class_">Reflect</span>.<span class="title function_">ownKeys</span>(obj)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br></pre></td></tr></table></figure></li></ul><h3 id="5-对象解构"><a href="#5-对象解构" class="headerlink" title="5. 对象解构"></a>5. 对象解构</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line"><span class="attr">a</span>: <span class="number">123</span>,</span><br><span class="line"><span class="attr">b</span>: <span class="string">&quot;abc&quot;</span>,</span><br><span class="line"><span class="attr">c</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>()</span><br><span class="line">&#125;,</span><br><span class="line">[<span class="title class_">Symbol</span>()]:<span class="number">111</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> &#123;b,c,a&#125; = obj</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(b,c,a)</span><br></pre></td></tr></table></figure><h3 id="6-展开运算符"><a href="#6-展开运算符" class="headerlink" title="6. 展开运算符"></a>6. 展开运算符</h3><h4 id="6-1-展开数组"><a href="#6-1-展开数组" class="headerlink" title="6.1. 展开数组"></a>6.1. 展开数组</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//数组转换</span></span><br><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(...arr) <span class="comment">// 1 2 3 4 5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//数组浅拷贝</span></span><br><span class="line"><span class="keyword">let</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, &#123; <span class="attr">m</span>: <span class="number">123</span> &#125;]</span><br><span class="line"><span class="keyword">let</span> b = [...a]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(b)</span><br><span class="line">b[<span class="number">0</span>] = <span class="number">5</span></span><br><span class="line">b[<span class="number">3</span>].<span class="property">m</span> = <span class="number">456</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(b)</span><br><span class="line"></span><br><span class="line"><span class="comment">//拼接数组</span></span><br><span class="line"><span class="keyword">let</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="keyword">let</span> b = [-<span class="number">1</span>, <span class="number">0</span>, ...a, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(b)</span><br></pre></td></tr></table></figure><h4 id="6-2-展开函数"><a href="#6-2-展开函数" class="headerlink" title="6.2. 展开函数"></a>6.2. 展开函数</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">f</span>(<span class="params">...args</span>) &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(args)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">f</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>) <span class="comment">//[1, 2, 3]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">f</span>(<span class="params">a, ...args</span>) &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(args)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">f</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>) <span class="comment">//[2, 3]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">f</span>(<span class="params">a, ...args, b</span>) &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(args)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">f</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>) <span class="comment">//SyntaxError: Rest parameter must be last formal parameter</span></span><br></pre></td></tr></table></figure><h4 id="6-3-展开对象"><a href="#6-3-展开对象" class="headerlink" title="6.3. 展开对象"></a>6.3. 展开对象</h4><ul><li><p>对象浅拷贝</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//对象浅拷贝</span></span><br><span class="line"><span class="keyword">let</span> obj1 = &#123;</span><br><span class="line">    <span class="attr">a</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">b</span>: <span class="string">&quot;xyz&quot;</span>,</span><br><span class="line">    <span class="attr">c</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;&#125;,</span><br><span class="line">    <span class="attr">d</span>: &#123;</span><br><span class="line">        <span class="attr">m</span>: <span class="number">123</span></span><br><span class="line">    &#125;,</span><br><span class="line">    [<span class="title class_">Symbol</span>()]: <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> obj2 = &#123; ...obj1 &#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj2) <span class="comment">//&#123; a: 1, b: &#x27;xyz&#x27;, c: [Function: c], d: &#123; m: 123 &#125;, [Symbol()]: 1 &#125;</span></span><br><span class="line"></span><br><span class="line">obj2.<span class="property">a</span> = <span class="number">2</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj1) <span class="comment">//&#123; a: 1, b: &#x27;xyz&#x27;, c: [Function: c], d: &#123; m: 123 &#125;, [Symbol()]: 1 &#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj2) <span class="comment">//&#123; a: 2, b: &#x27;xyz&#x27;, c: [Function: c], d: &#123; m: 123 &#125;, [Symbol()]: 1 &#125;</span></span><br><span class="line"></span><br><span class="line">obj2.<span class="property">d</span>.<span class="property">m</span> = <span class="number">456</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj1) <span class="comment">//&#123; a: 1, b: &#x27;xyz&#x27;, c: [Function: c], d: &#123; m: 456 &#125;, [Symbol()]: 1 &#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj2) <span class="comment">//&#123; a: 2, b: &#x27;xyz&#x27;, c: [Function: c], d: &#123; m: 456 &#125;, [Symbol()]: 1 &#125;</span></span><br></pre></td></tr></table></figure></li><li><p>对象合并</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//合并对象</span></span><br><span class="line"><span class="keyword">let</span> obj1 = &#123;</span><br><span class="line"><span class="attr">a</span>: <span class="number">1</span>,</span><br><span class="line"><span class="attr">b</span>: <span class="string">&quot;xyz&quot;</span>,</span><br><span class="line"><span class="attr">c</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;&#125;,</span><br><span class="line"><span class="attr">d</span>: &#123;</span><br><span class="line">    <span class="attr">m</span>: <span class="number">123</span></span><br><span class="line">&#125;,</span><br><span class="line">[<span class="title class_">Symbol</span>()]: <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> obj2 = &#123; ...obj1, <span class="attr">e</span>: <span class="number">111</span> &#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj2)  <span class="comment">//&#123; a: 1, b: &#x27;xyz&#x27;, c: [Function: c], d: &#123; m: 123 &#125;,  e: 111, [Symbol()]: 1 &#125;</span></span><br></pre></td></tr></table></figure></li><li><p>对象解构</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj1 = &#123;</span><br><span class="line"><span class="attr">a</span>: <span class="number">1</span>,</span><br><span class="line"><span class="attr">b</span>: <span class="string">&quot;xyz&quot;</span>,</span><br><span class="line"><span class="attr">c</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;&#125;,</span><br><span class="line"><span class="attr">d</span>: &#123;</span><br><span class="line">    <span class="attr">m</span>: <span class="number">123</span></span><br><span class="line">&#125;,</span><br><span class="line">[<span class="title class_">Symbol</span>()]: <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> &#123; a, b, ...obj2 &#125; = obj1</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj2) <span class="comment">//&#123; c: [Function: c], d: &#123; m: 123 &#125;, [Symbol()]: 1 &#125;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="7-Object-方法"><a href="#7-Object-方法" class="headerlink" title="7. Object 方法"></a>7. Object 方法</h3><ul><li><p>Object.assign</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//浅拷贝</span></span><br><span class="line"><span class="keyword">const</span> obj1 = &#123;</span><br><span class="line"><span class="attr">a</span>: <span class="number">1</span>,</span><br><span class="line"><span class="attr">b</span>: <span class="string">&quot;xyz&quot;</span>,</span><br><span class="line"><span class="attr">c</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;&#125;,</span><br><span class="line"><span class="attr">d</span>: &#123;</span><br><span class="line">    <span class="attr">m</span>: <span class="number">123</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> obj2 = <span class="title class_">Object</span>.<span class="title function_">assign</span>(&#123;&#125;,obj1)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj2) <span class="comment">//&#123; a: 1, b: &#x27;xyz&#x27;, c: [Function: c], d: &#123; m: 123 &#125; &#125;</span></span><br><span class="line"></span><br><span class="line">obj2.<span class="property">d</span>.<span class="property">m</span> = <span class="number">456</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj1) <span class="comment">//&#123; a: 1, b: &#x27;xyz&#x27;, c: [Function: c], d: &#123; m: 456 &#125; &#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj2) <span class="comment">//&#123; a: 1, b: &#x27;xyz&#x27;, c: [Function: c], d: &#123; m: 456 &#125; &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//合并</span></span><br><span class="line"><span class="keyword">const</span> obj1 = &#123;</span><br><span class="line"><span class="attr">a</span>: <span class="number">1</span>,</span><br><span class="line"><span class="attr">b</span>: <span class="string">&quot;xyz&quot;</span>,</span><br><span class="line"><span class="attr">c</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;&#125;,</span><br><span class="line"><span class="attr">d</span>: &#123;</span><br><span class="line">    <span class="attr">m</span>: <span class="number">123</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> obj2 = &#123;</span><br><span class="line"><span class="attr">a</span>: <span class="number">2</span>,</span><br><span class="line"><span class="attr">b</span>: <span class="string">&quot;abc&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> obj3 = <span class="title class_">Object</span>.<span class="title function_">assign</span>(obj1, obj2)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj3) <span class="comment">//&#123; a: 2, b: &#x27;abc&#x27;, c: [Function: c], d: &#123; m: 123 &#125; &#125;</span></span><br></pre></td></tr></table></figure></li><li><p>Object.create</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建新对象，源对象是新对象的原型</span></span><br><span class="line"><span class="keyword">const</span> obj1 = &#123;</span><br><span class="line"><span class="attr">a</span>: <span class="number">1</span>,</span><br><span class="line"><span class="attr">b</span>: <span class="string">&quot;xyz&quot;</span>,</span><br><span class="line"><span class="attr">c</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;&#125;,</span><br><span class="line"><span class="attr">d</span>: &#123;</span><br><span class="line">    <span class="attr">m</span>: <span class="number">123</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> obj2 = <span class="title class_">Object</span>.<span class="title function_">create</span>(obj1)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj2.<span class="property">a</span>) <span class="comment">//1</span></span><br><span class="line"></span><br><span class="line">obj2.<span class="property">d</span>.<span class="property">m</span> = <span class="number">456</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj1) <span class="comment">//&#123; a: 1, b: &#x27;xyz&#x27;, c: [Function: c], d: &#123; m: 456 &#125; &#125;</span></span><br></pre></td></tr></table></figure></li><li><p>Object.defineProperty</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//对象添加属性</span></span><br><span class="line"><span class="keyword">const</span> obj = &#123;&#125;</span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(obj, <span class="string">&quot;a&quot;</span>, &#123;</span><br><span class="line"><span class="attr">configurable</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="attr">enumerable</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="attr">writable</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="attr">value</span>: <span class="number">123</span></span><br><span class="line">&#125;)</span><br><span class="line">obj.<span class="property">a</span> = <span class="number">456</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj) <span class="comment">//&#123;a:456&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>Object.defineProperties</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//对象多个属性</span></span><br><span class="line"><span class="keyword">const</span> obj = &#123;&#125;</span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">defineProperties</span>(obj, &#123;</span><br><span class="line"><span class="attr">a</span>: &#123;</span><br><span class="line">    <span class="attr">configurable</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">enumerable</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">writable</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">value</span>: <span class="number">123</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">b</span>: &#123;</span><br><span class="line">    <span class="attr">configurable</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">enumerable</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">writable</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">value</span>: &#123;</span><br><span class="line">    <span class="attr">m</span>: <span class="number">10</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj) <span class="comment">//&#123; a: 123, b: &#123; m: 10 &#125; &#125;</span></span><br></pre></td></tr></table></figure></li><li><p>Object.entries</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//返回对象可枚举属性的键值对数组</span></span><br><span class="line"><span class="keyword">const</span> obj = &#123; <span class="attr">a</span>: <span class="number">123</span>, <span class="attr">b</span>: &#123; <span class="attr">m</span>: <span class="number">10</span> &#125; &#125;</span><br><span class="line"><span class="keyword">const</span> res = <span class="title class_">Object</span>.<span class="title function_">entries</span>(obj)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res) <span class="comment">//[ [ &#x27;a&#x27;, 123 ], [ &#x27;b&#x27;, &#123; m: 10 &#125; ] ]</span></span><br></pre></td></tr></table></figure></li><li><p>Object.fromEntries</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//键值对列表转换为一个对象</span></span><br><span class="line"><span class="keyword">const</span> obj = &#123; <span class="attr">a</span>: <span class="number">123</span>, <span class="attr">b</span>: &#123; <span class="attr">m</span>: <span class="number">10</span> &#125; &#125;</span><br><span class="line"><span class="keyword">const</span> res = <span class="title class_">Object</span>.<span class="title function_">entries</span>(obj)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res) <span class="comment">//&#123; a: 123, b: &#123; m: 10 &#125; &#125;</span></span><br></pre></td></tr></table></figure></li><li><p>Object.getOwnPropertyDescriptor</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//返回对象的某个元素的描述符</span></span><br><span class="line"><span class="keyword">const</span> obj = &#123; <span class="attr">a</span>: <span class="number">123</span>, <span class="attr">b</span>: &#123; <span class="attr">m</span>: <span class="number">10</span> &#125; &#125;</span><br><span class="line"><span class="keyword">const</span> res = <span class="title class_">Object</span>.<span class="title function_">getOwnPropertyDescriptor</span>(obj, <span class="string">&quot;a&quot;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res) <span class="comment">//&#123; value: 123, writable: true, enumerable: true, configurable: true &#125;</span></span><br></pre></td></tr></table></figure></li><li><p>Object.getOwnPropertyDescriptors()</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//返回对象的所有自身属性的描述符</span></span><br><span class="line"><span class="keyword">const</span> obj = &#123; <span class="attr">a</span>: <span class="number">123</span>, <span class="attr">b</span>: &#123; <span class="attr">m</span>: <span class="number">10</span> &#125; &#125;</span><br><span class="line"><span class="keyword">const</span> res = <span class="title class_">Object</span>.<span class="title function_">getOwnPropertyDescriptors</span>(obj)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res) <span class="comment">//</span></span><br></pre></td></tr></table></figure></li><li><p>Object.getOwnPropertyNames</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//对象的所有自身属性的属性名（包括不可枚举属性但不包括 Symbol 值作为名称的属性）组成的数组</span></span><br><span class="line"><span class="keyword">const</span> obj = &#123; <span class="attr">a</span>: <span class="number">123</span>, <span class="attr">b</span>: &#123; <span class="attr">m</span>: <span class="number">10</span> &#125; &#125;</span><br><span class="line"><span class="keyword">const</span> res = <span class="title class_">Object</span>.<span class="title function_">getOwnPropertyNames</span>(obj)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res) <span class="comment">//[ &#x27;a&#x27;, &#x27;b&#x27; ]</span></span><br></pre></td></tr></table></figure></li><li><p>Object.getOwnPropertySymbols</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//对象的所有自身属性的属性名（只包括 Symbol 值作为名称的属性）组成的数组</span></span><br><span class="line"><span class="keyword">const</span> obj = &#123; <span class="attr">a</span>: <span class="number">123</span>, <span class="attr">b</span>: &#123; <span class="attr">m</span>: <span class="number">10</span> &#125;, [<span class="title class_">Symbol</span>()]: <span class="number">1</span> &#125;</span><br><span class="line"><span class="keyword">const</span> res = <span class="title class_">Object</span>.<span class="title function_">getOwnPropertySymbols</span>(obj)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res) <span class="comment">//[ Symbol() ]</span></span><br></pre></td></tr></table></figure></li><li><p>Object.freeze</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//冻结一个对象，不能被修改</span></span><br><span class="line"><span class="keyword">const</span> obj = &#123; <span class="attr">a</span>: <span class="number">123</span>, <span class="attr">b</span>: &#123; <span class="attr">m</span>: <span class="number">10</span> &#125; &#125;</span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">freeze</span>(obj)</span><br><span class="line">obj.<span class="property">a</span> = <span class="number">456</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj) <span class="comment">//&#123; a: 123, b: &#123; m: 10 &#125; &#125;</span></span><br></pre></td></tr></table></figure></li><li><p>Object.getPrototypeOf</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//对象的原型</span></span><br><span class="line"><span class="keyword">const</span> obj = &#123; <span class="attr">a</span>: <span class="number">123</span>, <span class="attr">b</span>: &#123; <span class="attr">m</span>: <span class="number">10</span> &#125; &#125;</span><br><span class="line"><span class="keyword">const</span> res = <span class="title class_">Object</span>.<span class="title function_">getOwnPropertyNames</span>(obj)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res) <span class="comment">//[Object: null prototype] &#123;&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>Object.prototype.hasOwnProperty()</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//对象的是否有指定属性，不包含原型属性</span></span><br><span class="line"><span class="keyword">const</span> obj = &#123; <span class="attr">a</span>: <span class="number">123</span>, <span class="attr">b</span>: &#123; <span class="attr">m</span>: <span class="number">10</span> &#125; &#125;</span><br><span class="line"><span class="keyword">const</span> res = obj.<span class="title function_">hasOwnProperty</span>(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res) <span class="comment">//true</span></span><br></pre></td></tr></table></figure></li><li><p>Object.prototype.isPrototypeOf</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//对象是否存在于另一个对象的原型链上</span></span><br><span class="line"><span class="keyword">const</span> obj = &#123; <span class="attr">a</span>: <span class="number">123</span>, <span class="attr">b</span>: &#123; <span class="attr">m</span>: <span class="number">10</span> &#125; &#125;</span><br><span class="line"><span class="keyword">const</span> res = obj.<span class="title function_">isPrototypeOf</span>(<span class="title class_">Object</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res) <span class="comment">//false</span></span><br></pre></td></tr></table></figure></li><li><p>Object.is</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//判断两个值是否为同一个值</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">is</span>(<span class="literal">null</span>, <span class="literal">undefined</span>) <span class="comment">//false</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">is</span>(<span class="title class_">NaN</span>, <span class="title class_">NaN</span>) <span class="comment">//true</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">is</span>(+<span class="number">0</span>, <span class="number">0</span>) <span class="comment">//true</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">is</span>(-<span class="number">0</span>, <span class="number">0</span>) <span class="comment">//false</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">is</span>(+<span class="number">0</span>, -<span class="number">0</span>) <span class="comment">//false</span></span><br></pre></td></tr></table></figure></li><li><p>Object.keys</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//返回对象的自身可枚举属性组成的数组，数组中属性名的排列顺序和正常循环遍历该对象时返回的顺序一致</span></span><br><span class="line"><span class="keyword">const</span> obj = &#123; <span class="attr">a</span>: <span class="number">123</span>, <span class="attr">b</span>: &#123; <span class="attr">m</span>: <span class="number">10</span> &#125; &#125;</span><br><span class="line"><span class="keyword">const</span> res = <span class="title class_">Object</span>.<span class="title function_">keys</span>(obj)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res) <span class="comment">//[ &#x27;a&#x27;, &#x27;b&#x27; ]</span></span><br></pre></td></tr></table></figure></li><li><p>Object.values</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//返回对象自身的所有可枚举属性值的数组，值的顺序与使用for...in循环的顺序相同</span></span><br><span class="line"><span class="keyword">const</span> obj = &#123; <span class="attr">a</span>: <span class="number">123</span>, <span class="attr">b</span>: &#123; <span class="attr">m</span>: <span class="number">10</span> &#125; &#125;</span><br><span class="line"><span class="keyword">const</span> res = <span class="title class_">Object</span>.<span class="title function_">keys</span>(obj)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res) <span class="comment">//[ 123, &#123; m: 10 &#125; ]</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="8-Array-方法"><a href="#8-Array-方法" class="headerlink" title="8. Array 方法"></a>8. Array 方法</h3><ul><li>Array.isArray —— 判断是否为数组</li><li>Array.of ——参数变数组  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Array</span>.<span class="title function_">of</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>) ;<span class="comment">//[1, 2, 3]</span></span><br></pre></td></tr></table></figure></li><li>Array.from ——类似数组或可迭代对象创建一个新的，浅拷贝的数组实例  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Array</span>.<span class="title function_">from</span>(<span class="string">&#x27;foo&#x27;</span>) <span class="comment">// [&#x27;f&#x27;,&#x27;o&#x27;,&#x27;o&#x27;]</span></span><br><span class="line"><span class="title class_">Array</span>.<span class="title function_">from</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], <span class="function"><span class="params">x</span> =&gt;</span> x + x) <span class="comment">//[2, 4, 6]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> set = <span class="keyword">new</span> <span class="title class_">Set</span>([<span class="string">&#x27;foo&#x27;</span>, <span class="string">&#x27;bar&#x27;</span>, <span class="string">&#x27;baz&#x27;</span>, <span class="string">&#x27;foo&#x27;</span>])</span><br><span class="line"><span class="title class_">Array</span>.<span class="title function_">from</span>(set)  <span class="comment">//[&#x27;foo&#x27;, &#x27;bar&#x27;, &#x27;baz&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> map = <span class="keyword">new</span> <span class="title class_">Map</span>([[<span class="number">1</span>, <span class="number">2</span>], [<span class="number">2</span>, <span class="number">4</span>], [<span class="number">4</span>, <span class="number">8</span>]])</span><br><span class="line"><span class="title class_">Array</span>.<span class="title function_">from</span>(map) <span class="comment">//[[1, 2], [2, 4], [4, 8]]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mapper = <span class="keyword">new</span> <span class="title class_">Map</span>([[<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;a&#x27;</span>], [<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;b&#x27;</span>]])</span><br><span class="line"><span class="title class_">Array</span>.<span class="title function_">from</span>(mapper.<span class="title function_">values</span>()) <span class="comment">//[&#x27;a&#x27;, &#x27;b&#x27;]</span></span><br><span class="line"><span class="title class_">Array</span>.<span class="title function_">from</span>(mapper.<span class="title function_">keys</span>()) <span class="comment">//[&#x27;1&#x27;, &#x27;2&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Array</span>.<span class="title function_">from</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], <span class="function"><span class="params">x</span> =&gt;</span> x + x) <span class="comment">//[2, 4, 6]</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Array</span>.<span class="title function_">from</span>(&#123; <span class="attr">length</span>: <span class="number">3</span> &#125;, <span class="function">(<span class="params">_, i</span>) =&gt;</span> i) <span class="comment">// [0,1,2] 序列生成器</span></span><br></pre></td></tr></table></figure></li><li>concat ——合并两个或多个数组，不改变当前数组，返回新数组</li><li>pop ——从数组中删除最后一个元素，并返回该元素的值。改变数组的长度</li><li>push ——将一个或多个元素添加到数组的末尾，并返回该数组的新长度。改变数组的长度</li><li>shift ——从数组中删除第一个元素，并返回该元素的值。改变数组的长度</li><li>unshift ——将一个或多个元素添加到数组的开头，并返回该数组的新长度。改变数组的长度</li><li>splice ——删除或替换现有元素或者原地添加新的元素来修改数组，并以数组形式返回被修改的内容。此方法会改变原数组。</li><li>slice ——返回一个新的数组对象，由 begin 和 end 决定的原数组的浅拷贝（包括 begin，不包括end）。不改变当前数组</li><li>every ——数组内的所有元素是否都能通过某个指定函数的测试。返回一个布尔值</li><li>some ——数组内的至少有 1 个元素通过了被提供的函数测试。返回一个布尔值</li><li>map ——创建一个新数组，这个新数组由原数组中的每个元素都调用一次提供的函数后的返回值组成</li><li>filter ——创建一个新数组，其包含通过所提供函数实现的测试的所有元素</li><li>reduce ——迭代归并</li><li>join ——一个数组（或一个类数组对象）的所有元素连接成一个字符串并返回这个字符串，可传参数</li><li>sort ——元素进行排序。默认排序是将元素转换为字符串，比较它们的 UTF-16 代码，可传入自定义比较函数。改变原数组</li><li>reverse ——元素的位置倒叙，改变原数组</li><li>find ——返回数组中满足提供的测试函数的第一个元素的值。否则返回 undefined</li><li>findIndex ——返回数组中满足提供的测试函数的第一个元素的索引。否则返回-1</li><li>indexOf ——返回在数组中可以找到一个给定元素的第一个索引。否则返回-1</li><li>lastIndexOf ——返回在数组中可以找到一个给定元素的最后一个索引。否则返回-1</li><li>includes ——判断一个数组是否包含一个指定的值，返回布尔值</li><li>entries ——返回一个新的Array Iterator对象，该对象包含数组中每个索引的键&#x2F;值对</li><li>values ——返回一个新的 Array Iterator 对象，该对象包含数组每个索引的值</li><li>keys ——返回一个包含数组中每个索引键的Array Iterator对象</li><li>forEach ——对数组的每个元素执行一次给定的函数</li><li>copyWithin ——浅复制数组的一部分到同一数组中的另一个位置，并返回它。不改变原数组</li><li>toStrng —— 返回一个字符串，表示指定的数组及其元素</li><li>fill ——用一个固定值填充一个数组中从起始索引到终止索引内的全部元素。不包括终止索引</li><li>flat ——按照一个可指定的深度递归遍历数组，并将所有元素与遍历到的子数组中的元素合并为一个新数组返回  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr1 = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, [<span class="number">3</span>, <span class="number">4</span>]];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr1.<span class="title function_">flat</span>());</span><br><span class="line"><span class="comment">// expected output: [0, 1, 2, 3, 4]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> arr2 = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, [[[<span class="number">3</span>, <span class="number">4</span>]]]];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr2.<span class="title function_">flat</span>(<span class="number">2</span>));</span><br><span class="line"><span class="comment">// expected output: [0, 1, 2, [3, 4]]</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="9-数组去重"><a href="#9-数组去重" class="headerlink" title="9. 数组去重"></a>9. 数组去重</h3><ul><li>遍历循环判断  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">norepeat</span>(<span class="params">arr</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>, len = arr.<span class="property">length</span>; i &lt; len; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = i + <span class="number">1</span>; j &lt; len; j++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (arr[i] === arr[j] || <span class="title class_">Object</span>.<span class="title function_">is</span>(arr[i], arr[j])) &#123;</span><br><span class="line">        arr.<span class="title function_">splice</span>(j, <span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> arr</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//无法去除[] &#123;&#125; function()&#123;&#125;</span></span><br></pre></td></tr></table></figure></li><li>Set  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[...<span class="keyword">new</span> <span class="title class_">Set</span>(arr)]</span><br></pre></td></tr></table></figure></li><li>indexOf  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">norepeat</span>(<span class="params">arr</span>) &#123;</span><br><span class="line"><span class="keyword">const</span> newarr = []</span><br><span class="line">arr.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (newarr.<span class="title function_">indexOf</span>(item) === -<span class="number">1</span>) &#123;</span><br><span class="line">    newarr.<span class="title function_">push</span>(item)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">return</span> newarr</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">norepeat</span>(<span class="params">arr</span>) &#123;</span><br><span class="line"><span class="keyword">const</span> newarr = []</span><br><span class="line">arr.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">item,index</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (arr.<span class="title function_">indexOf</span>(item) === index) &#123;</span><br><span class="line">    newarr.<span class="title function_">push</span>(item)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">return</span> newarr</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">norepeat</span>(<span class="params">arr</span>) &#123;</span><br><span class="line"><span class="keyword">return</span>  arr.<span class="title function_">filter</span>(<span class="keyword">function</span> (<span class="params">item,index</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> arr.<span class="title function_">indexOf</span>(item) === index</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//不能判断NaN</span></span><br></pre></td></tr></table></figure></li><li>includes  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">norepeat</span>(<span class="params">arr</span>) &#123;</span><br><span class="line"><span class="keyword">const</span> newarr = []</span><br><span class="line">arr.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">item, index</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!newarr.<span class="title function_">includes</span>(item)) &#123;</span><br><span class="line">    newarr.<span class="title function_">push</span>(item)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">return</span> newarr</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>Map  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">norepeat</span>(<span class="params">arr</span>) &#123;</span><br><span class="line"><span class="keyword">const</span> newarr = []</span><br><span class="line"><span class="keyword">const</span> map = <span class="keyword">new</span> <span class="title class_">Map</span>()</span><br><span class="line">arr.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!map.<span class="title function_">has</span>(item)) &#123;</span><br><span class="line">    newarr.<span class="title function_">push</span>(item)</span><br><span class="line">    map.<span class="title function_">set</span>(item, <span class="literal">true</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">return</span> newarr</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>object  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">norepeat</span>(<span class="params">arr</span>) &#123;</span><br><span class="line"><span class="keyword">const</span> newarr = []</span><br><span class="line"><span class="keyword">const</span> obj = &#123;&#125;</span><br><span class="line">arr.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!obj[item]) &#123;</span><br><span class="line">    newarr.<span class="title function_">push</span>(item)</span><br><span class="line">    obj[item] = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">return</span> newarr</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="10-多维数组遍历"><a href="#10-多维数组遍历" class="headerlink" title="10. 多维数组遍历"></a>10. 多维数组遍历</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">flatten</span>(<span class="params">sourceArr, flattenedArr = []</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> item <span class="keyword">of</span> sourceArr) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title class_">Array</span>.<span class="title function_">isArray</span>(item)) &#123;</span><br><span class="line">    <span class="title function_">flatten</span>(item, flattenedArr)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    flattenedArr.<span class="title function_">push</span>(item)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> flattenedArr</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, [<span class="number">2</span>, <span class="number">3</span>], [[<span class="number">4</span>, <span class="number">5</span>], <span class="number">6</span>], [[[[<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]]]]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">flatten</span>(arr)) <span class="comment">//[1, 2, 3, 4, 5, 6, 3, 4, 5, 6]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//指定展开级别</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">flattenDepth</span>(<span class="params">sourceArr, depth, flattenedArr = []</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> item <span class="keyword">of</span> sourceArr) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title class_">Array</span>.<span class="title function_">isArray</span>(item) &amp;&amp; depth &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="title function_">flattenDepth</span>(item, depth - <span class="number">1</span>, flattenedArr)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    flattenedArr.<span class="title function_">push</span>(item)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> flattenedArr</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, [<span class="number">2</span>, <span class="number">3</span>], [[<span class="number">4</span>, <span class="number">5</span>], <span class="number">6</span>], [[<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">flattenDepth</span>(arr, <span class="number">1</span>)) <span class="comment">//[ 1, 2, 3, [ 4, 5 ], 6, [ 3, 4, 5, 6 ] ]</span></span><br></pre></td></tr></table></figure><h3 id="11-浅拷贝-深拷贝"><a href="#11-浅拷贝-深拷贝" class="headerlink" title="11. 浅拷贝&amp;深拷贝"></a>11. 浅拷贝&amp;深拷贝</h3><h4 id="11-1-数组浅拷贝"><a href="#11-1-数组浅拷贝" class="headerlink" title="11.1. 数组浅拷贝"></a>11.1. 数组浅拷贝</h4><ul><li>展开运算符  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, [<span class="number">6</span>, <span class="number">7</span>]]</span><br><span class="line"><span class="keyword">const</span> a2 = [...a1]</span><br><span class="line"></span><br><span class="line">a2[<span class="number">2</span>] = <span class="number">5</span></span><br><span class="line">a2[<span class="number">3</span>][<span class="number">1</span>] = <span class="number">8</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a1) <span class="comment">//[ 1, 2, 3, [ 6, 8 ] ]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a2) <span class="comment">//[ 1, 2, 5, [ 6, 8 ] ]</span></span><br></pre></td></tr></table></figure></li><li>Array.from  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, [<span class="number">6</span>, <span class="number">7</span>]]</span><br><span class="line"><span class="keyword">const</span> a2 = <span class="title class_">Array</span>.<span class="title function_">from</span>(a1)</span><br><span class="line"></span><br><span class="line">a2[<span class="number">2</span>] = <span class="number">5</span></span><br><span class="line">a2[<span class="number">3</span>][<span class="number">1</span>] = <span class="number">8</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a1) <span class="comment">//[ 1, 2, 3, [ 6, 8 ] ]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a2) <span class="comment">//[ 1, 2, 5, [ 6, 8 ] ]</span></span><br></pre></td></tr></table></figure></li><li>slice<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, [<span class="number">6</span>, <span class="number">7</span>]]</span><br><span class="line"><span class="keyword">const</span> a2 = a1.<span class="title function_">slice</span>()</span><br><span class="line"></span><br><span class="line">a2[<span class="number">2</span>] = <span class="number">5</span></span><br><span class="line">a2[<span class="number">3</span>][<span class="number">1</span>] = <span class="number">8</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a1) <span class="comment">//[ 1, 2, 3, [ 6, 8 ] ]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a2) <span class="comment">//[ 1, 2, 5, [ 6, 8 ] ]</span></span><br></pre></td></tr></table></figure></li><li>concat  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, [<span class="number">6</span>, <span class="number">7</span>]]</span><br><span class="line"><span class="keyword">const</span> a2 = a1.<span class="title function_">concat</span>([])</span><br><span class="line"></span><br><span class="line">a2[<span class="number">2</span>] = <span class="number">5</span></span><br><span class="line">a2[<span class="number">3</span>][<span class="number">1</span>] = <span class="number">8</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a1) <span class="comment">//[ 1, 2, 3, [ 6, 8 ] ]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a2) <span class="comment">//[ 1, 2, 5, [ 6, 8 ] ]</span></span><br></pre></td></tr></table></figure></li><li>filer <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, [<span class="number">6</span>, <span class="number">7</span>]]</span><br><span class="line"><span class="keyword">const</span> a2 = a1.<span class="title function_">filter</span>(<span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">a2[<span class="number">2</span>] = <span class="number">5</span></span><br><span class="line">a2[<span class="number">3</span>][<span class="number">1</span>] = <span class="number">8</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a1) <span class="comment">//[ 1, 2, 3, [ 6, 8 ] ]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a2) <span class="comment">//[ 1, 2, 5, [ 6, 8 ] ]</span></span><br></pre></td></tr></table></figure></li><li>map  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, [<span class="number">6</span>, <span class="number">7</span>]]</span><br><span class="line"><span class="keyword">const</span> a2 = a1.<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">item</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> item</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">a2[<span class="number">2</span>] = <span class="number">5</span></span><br><span class="line">a2[<span class="number">3</span>][<span class="number">1</span>] = <span class="number">8</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a1) <span class="comment">//[ 1, 2, 3, [ 6, 8 ] ]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a2) <span class="comment">//[ 1, 2, 5, [ 6, 8 ] ]</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="11-2-数组深拷贝"><a href="#11-2-数组深拷贝" class="headerlink" title="11.2. 数组深拷贝"></a>11.2. 数组深拷贝</h4><ul><li>JSON    转换<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, [<span class="number">6</span>, <span class="number">7</span>]]</span><br><span class="line"><span class="keyword">const</span> a2 = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(a1))</span><br><span class="line"></span><br><span class="line">a2[<span class="number">2</span>] = <span class="number">5</span></span><br><span class="line">a2[<span class="number">3</span>][<span class="number">1</span>] = <span class="number">8</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a1) <span class="comment">//[ 1, 2, 3, [ 6, 7 ] ]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a2) <span class="comment">//[ 1, 2, 5, [ 6, 8 ] ]</span></span><br></pre></td></tr></table></figure></li><li>自定义函数  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">deepcloneObj</span>(<span class="params">obj</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> deepclonedobj = <span class="title class_">Array</span>.<span class="title function_">isArray</span>(obj) ? [] : &#123;&#125;</span><br><span class="line">    <span class="keyword">if</span> (obj &amp;&amp; <span class="keyword">typeof</span> obj === <span class="string">&quot;object&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">        <span class="keyword">if</span> (obj.<span class="title function_">hasOwnProperty</span>(key)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (obj[key] &amp;&amp; <span class="keyword">typeof</span> obj[key] === <span class="string">&quot;object&quot;</span>) &#123;</span><br><span class="line">            deepclonedobj[key] = <span class="title function_">deepcloneObj</span>(obj[key])</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            deepclonedobj[key] = obj[key]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> deepclonedobj</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> a1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, [<span class="number">6</span>, <span class="number">7</span>]]</span><br><span class="line"><span class="keyword">const</span> a2 = <span class="title function_">deepcloneObj</span>(a1)</span><br><span class="line"></span><br><span class="line">a2[<span class="number">2</span>] = <span class="number">5</span></span><br><span class="line">a2[<span class="number">3</span>][<span class="number">1</span>] = <span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a1) <span class="comment">//[ 1, 2, 3, [ 6, 7 ] ]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a2) <span class="comment">//[ 1, 2, 5, [ 6, 8 ] ]</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="11-2-浅拷贝"><a href="#11-2-浅拷贝" class="headerlink" title="11.2. 浅拷贝"></a>11.2. 浅拷贝</h4><ul><li>展开运算符  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj1 = &#123;</span><br><span class="line">    <span class="attr">x</span>: <span class="number">123</span>,</span><br><span class="line">    <span class="attr">y</span>: <span class="string">&quot;abc&quot;</span>,</span><br><span class="line">    <span class="attr">z</span>: &#123;</span><br><span class="line">        <span class="attr">a</span>: <span class="number">111</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> obj2 = &#123; ...obj1 &#125;</span><br><span class="line">obj2.<span class="property">x</span> = <span class="number">456</span></span><br><span class="line">obj2.<span class="property">z</span>.<span class="property">a</span> = <span class="number">222</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj1) <span class="comment">//&#123; x: 123, y: &#x27;abc&#x27;, z: &#123; a: 222 &#125; &#125;</span></span><br></pre></td></tr></table></figure></li><li>Object.assign  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj1 = &#123;</span><br><span class="line">    <span class="attr">x</span>: <span class="number">123</span>,</span><br><span class="line">    <span class="attr">y</span>: <span class="string">&quot;abc&quot;</span>,</span><br><span class="line">    <span class="attr">z</span>: &#123;</span><br><span class="line">        <span class="attr">a</span>: <span class="number">111</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> obj2 = <span class="title class_">Object</span>.<span class="title function_">assign</span>(&#123;&#125;, obj1)</span><br><span class="line">obj2.<span class="property">x</span> = <span class="number">456</span></span><br><span class="line">obj2.<span class="property">z</span>.<span class="property">a</span> = <span class="number">222</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj1) <span class="comment">//&#123; x: 123, y: &#x27;abc&#x27;, z: &#123; a: 222 &#125; &#125;</span></span><br></pre></td></tr></table></figure></li><li>自定义函数 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">//简单深拷贝</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">deepcloneObj1</span>(<span class="params">obj</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> deepclonedobj = <span class="title class_">Array</span>.<span class="title function_">isArray</span>(obj) ? [] : &#123;&#125;</span><br><span class="line">    <span class="keyword">if</span> (obj &amp;&amp; <span class="keyword">typeof</span> obj === <span class="string">&quot;object&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">        <span class="keyword">if</span> (obj.<span class="title function_">hasOwnProperty</span>(key)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (obj[key] &amp;&amp; <span class="keyword">typeof</span> obj[key] === <span class="string">&quot;object&quot;</span>) &#123;</span><br><span class="line">            deepclonedobj[key] = <span class="title function_">deepcloneObj</span>(obj[key])</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            deepclonedobj[key] = obj[key]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> deepclonedobj</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> obj1 = &#123;</span><br><span class="line">    <span class="attr">x</span>: <span class="number">123</span>,</span><br><span class="line">    <span class="attr">y</span>: <span class="string">&quot;abc&quot;</span>,</span><br><span class="line">    <span class="attr">z</span>: &#123;</span><br><span class="line">        <span class="attr">m</span>: <span class="number">111</span></span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> obj2 = <span class="title function_">deepcloneObj1</span>(obj1)</span><br><span class="line">    obj2.<span class="property">z</span>.<span class="property">m</span> = <span class="number">222</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(obj1) <span class="comment">//&#123; x: 123, y: &#x27;abc&#x27;, z: &#123; m: 111 &#125; &#125;</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(obj2) <span class="comment">//&#123; x: 123, y: &#x27;abc&#x27;, z: &#123; m: 222 &#125; &#125;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">//进阶深拷贝</span></span><br><span class="line"><span class="comment">//.....</span></span><br></pre></td></tr></table></figure><ul><li>jQuery extends</li><li>lodash _deepclone</li></ul></li></ul><h3 id="12-手写-Promise"><a href="#12-手写-Promise" class="headerlink" title="12. 手写 Promise"></a>12. 手写 Promise</h3><h3 id="13-fetch、-ajax"><a href="#13-fetch、-ajax" class="headerlink" title="13. fetch、 ajax"></a>13. fetch、 ajax</h3><h3 id="14-防抖和节流"><a href="#14-防抖和节流" class="headerlink" title="14. 防抖和节流"></a>14. 防抖和节流</h3><ul><li>防抖 ——持续触发事件时，一定时间内没有去触发事件，事件才会执行一次；一定时间内触发事件，需要重新计时，直到满足指定时间再执行  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">debounce</span>(<span class="params">fn,wait</span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> timer = <span class="literal">null</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">const</span> that = <span class="variable language_">this</span></span><br><span class="line">        <span class="keyword">const</span> args = <span class="variable language_">arguments</span></span><br><span class="line">        <span class="keyword">if</span>(timer)&#123;</span><br><span class="line">            <span class="built_in">clearTimeout</span>(timer)</span><br><span class="line">        &#125;</span><br><span class="line">        timer = <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            fn.<span class="title function_">apply</span>(that,args)</span><br><span class="line">        &#125;, wait)      </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>节流 ——持续触发事件时，在一定时间内只执行一次  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">throttle</span>(<span class="params">fn,wait</span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> timer = <span class="literal">null</span></span><br><span class="line">    <span class="keyword">const</span> pre_time = <span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">const</span> that = <span class="variable language_">this</span></span><br><span class="line">        <span class="keyword">const</span> args = <span class="variable language_">arguments</span></span><br><span class="line">        <span class="keyword">const</span> now_time = <span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line">        <span class="keyword">if</span>(now_time - pre_time &gt;=wait)&#123;</span><br><span class="line">            fn.<span class="title function_">apply</span>(that, args)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(!timer)&#123;</span><br><span class="line">                timer = <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">                    fn.<span class="title function_">apply</span>(that, args)</span><br><span class="line">                    <span class="built_in">clearTimeout</span>(timer)</span><br><span class="line">                &#125;,now_time - pre_time)    </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="15-async-、await"><a href="#15-async-、await" class="headerlink" title="15. async 、await"></a>15. async 、await</h3><h4 id="15-1-介绍"><a href="#15-1-介绍" class="headerlink" title="15.1. 介绍"></a>15.1. 介绍</h4><ul><li>async是函数声名的关键字</li><li>await用在async函数内部</li><li>async函数返回的是一个promise</li><li>优化处理promise</li><li>使用try…catch进行错误处理</li></ul><h4 id="15-2-优点"><a href="#15-2-优点" class="headerlink" title="15.2. 优点"></a>15.2. 优点</h4><ul><li>代码清晰简洁</li><li>减少回调</li></ul><h3 id="16-apply、call、bind"><a href="#16-apply、call、bind" class="headerlink" title="16. apply、call、bind"></a>16. apply、call、bind</h3><ul><li>相同点：<ul><li>改变this指向，修改作用域</li></ul></li><li>不同点：<ul><li>apply的第二个参数是数组，call是一个个的单独参数</li><li>apply、call是立即执行函数，bind只是返回一个函数</li></ul></li></ul><h3 id="17-代理"><a href="#17-代理" class="headerlink" title="17. 代理"></a>17. 代理</h3><h3 id="18-Map、Set"><a href="#18-Map、Set" class="headerlink" title="18. Map、Set"></a>18. Map、Set</h3><h4 id="18-1-概念"><a href="#18-1-概念" class="headerlink" title="18.1. 概念"></a>18.1. 概念</h4><ul><li>Map：键值对的数据映射集合</li><li>Set：有序的数据集合列表，元素相互独立且唯一非重复</li></ul><h4 id="18-2-用法"><a href="#18-2-用法" class="headerlink" title="18.2. 用法"></a>18.2. 用法</h4><ul><li><p>Map</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//新建</span></span><br><span class="line"><span class="keyword">const</span> map = <span class="keyword">new</span> <span class="title class_">Map</span>()</span><br><span class="line"><span class="comment">//或者</span></span><br><span class="line"><span class="keyword">const</span> map = <span class="keyword">new</span> <span class="title class_">Map</span>([<span class="string">&#x27;key1&#x27;</span>,<span class="string">&#x27;value1&#x27;</span>],[<span class="string">&#x27;key2&#x27;</span>,<span class="string">&#x27;value2&#x27;</span>])</span><br><span class="line"><span class="comment">//或者</span></span><br><span class="line"><span class="keyword">const</span> map = <span class="keyword">new</span> <span class="title class_">Map</span>().<span class="title function_">set</span>(<span class="string">&#x27;key1&#x27;</span>,<span class="string">&#x27;value1&#x27;</span>).<span class="title function_">set</span>(<span class="string">&#x27;key2&#x27;</span>,<span class="string">&#x27;value2&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">//长度</span></span><br><span class="line">map.<span class="property">size</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//增加元素</span></span><br><span class="line">map.<span class="title function_">set</span>(<span class="string">&#x27;keya&#x27;</span>,<span class="string">&#x27;valuea&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取</span></span><br><span class="line"><span class="keyword">const</span> val = map.<span class="title function_">get</span>(<span class="string">&#x27;keya&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断是否含有某元素</span></span><br><span class="line"><span class="keyword">const</span> res = map.<span class="title function_">has</span>(<span class="string">&#x27;keya&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除某元素</span></span><br><span class="line">map.<span class="title function_">delete</span>(<span class="string">&#x27;keya&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//清空</span></span><br><span class="line">map.<span class="title function_">clear</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">//迭代</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> m <span class="keyword">of</span> map)&#123;</span><br><span class="line">    <span class="comment">//按照之前插入map的顺序迭代</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> m <span class="keyword">of</span> map.<span class="title function_">entries</span>())&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> m <span class="keyword">of</span> map.<span class="title function_">keys</span>())&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> m <span class="keyword">of</span> map.<span class="title function_">values</span>())&#123;</span><br><span class="line">    </span><br><span class="line">&#125;   </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> m <span class="keyword">of</span> map[<span class="title class_">Symbol</span>.<span class="property">iterator</span>]())&#123;</span><br><span class="line">        </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[...map]</span><br><span class="line"></span><br><span class="line">map.<span class="title function_">forEach</span>(<span class="function">(<span class="params">value,key</span>)=&gt;</span>&#123;&#125;)</span><br></pre></td></tr></table></figure></li><li><p>Set</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//新建</span></span><br><span class="line"><span class="keyword">const</span> set = <span class="keyword">new</span> <span class="title class_">Set</span>()</span><br><span class="line"><span class="comment">//或者</span></span><br><span class="line"><span class="keyword">const</span> set = <span class="keyword">new</span> <span class="title class_">Set</span>([<span class="string">&#x27;value1&#x27;</span>,<span class="string">&#x27;value2&#x27;</span>])</span><br><span class="line"><span class="comment">//或者</span></span><br><span class="line"><span class="keyword">const</span> set = <span class="keyword">new</span> <span class="title class_">Set</span>().<span class="title function_">add</span>(<span class="string">&#x27;value1&#x27;</span>).<span class="title function_">add</span>(<span class="string">&#x27;value2&#x27;</span>)</span><br><span class="line"><span class="comment">//长度</span></span><br><span class="line">set.<span class="property">size</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//增加元素</span></span><br><span class="line">set.<span class="title function_">add</span>(<span class="string">&#x27;valuea&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断是否含有某元素</span></span><br><span class="line"><span class="keyword">const</span> res = set.<span class="title function_">has</span>(<span class="string">&#x27;valuea&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除某元素</span></span><br><span class="line">set.<span class="title function_">delete</span>(<span class="string">&#x27;keya&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//清空</span></span><br><span class="line">set.<span class="title function_">clear</span>()</span><br><span class="line">    </span><br><span class="line"><span class="comment">//迭代</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> s <span class="keyword">of</span> set)&#123;</span><br><span class="line">    <span class="comment">//按照之前插入set的顺序迭代</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> s <span class="keyword">of</span> set.<span class="title function_">entries</span>())&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> s <span class="keyword">of</span> set.<span class="title function_">keys</span>())&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> s <span class="keyword">of</span> set.<span class="title function_">values</span>())&#123;</span><br><span class="line">    </span><br><span class="line">&#125;   </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> s <span class="keyword">of</span> set[<span class="title class_">Symbol</span>.<span class="property">iterator</span>]())&#123;</span><br><span class="line">        </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[...set]</span><br><span class="line"></span><br><span class="line">set.<span class="title function_">forEach</span>(<span class="function">(<span class="params">value,key</span>)=&gt;</span>&#123;&#125;)</span><br></pre></td></tr></table></figure></li></ul><h4 id="18-3-WeakMap、WeakSet"><a href="#18-3-WeakMap、WeakSet" class="headerlink" title="18.3. WeakMap、WeakSet"></a>18.3. WeakMap、WeakSet</h4><ul><li>WeakMap ——弱映射，Map的健只能是Object或者继承于Object,不可迭代，不可clear</li><li>WeakSet ——弱集合，元素只能是Object或者继承于Object，不可迭代，不可clear</li></ul><h3 id="19-事件循环Event-Loop"><a href="#19-事件循环Event-Loop" class="headerlink" title="19. 事件循环Event Loop"></a>19. 事件循环Event Loop</h3><h4 id="19-1-JS语言的特点"><a href="#19-1-JS语言的特点" class="headerlink" title="19.1. JS语言的特点"></a>19.1. JS语言的特点</h4><ul><li>概念：单线程、非阻塞的脚本语言</li></ul><h3 id="20-this"><a href="#20-this" class="headerlink" title="20. this"></a>20. this</h3><ul><li>确定过程：创建执行上下文时，创建变量对象、确定作用域链、确定this指向</li><li>this指向是在函数被调用时确定的</li><li>全局this,一般指向window</li><li>函数中的this由调用者提供，指向由调用方式决定</li><li>如果调用者函数被某一对象所拥有，函数调用时，this指向该对象</li><li>如果<strong>函数独立</strong>，函数内部的this指向undefined,非严格模式下，this指向undefined时，会自动指向window</li><li>call和aplly改变this的指向</li><li>构造函数中的this,指向新的实例对象</li><li>箭头函数没有this，到上级作用域找this，上级作用域没有this则继续往上找；箭头函数绑定apply、call、bind只传递参数，不绑定this</li></ul><h3 id="21-作用域、作用域链、执行上下文、闭包"><a href="#21-作用域、作用域链、执行上下文、闭包" class="headerlink" title="21. 作用域、作用域链、执行上下文、闭包"></a>21. 作用域、作用域链、执行上下文、闭包</h3><ul><li>执行上下文 ——代码的执行环境<ul><li>执行环境：全局环境、函数环境、eval</li><li>全局执行上下文在js代码开始运行时创建</li><li>函数的执行上下文在函数被调用时创建</li></ul></li><li>作用域 ——变量和函数可以访问的范围</li><li>作用域链 ——变量的可访问作用域对象的集和</li><li>闭包 ——可访问另一个函数作用域的变量的函数，继续使用函数声名时的作用域，保护函数内部变量，回调函数</li></ul><h3 id="22-var-、let、const"><a href="#22-var-、let、const" class="headerlink" title="22. var 、let、const"></a>22. var 、let、const</h3><ul><li>var、let ——定义变量</li><li>const ——声名常量</li><li>const必须初始化</li><li>const不可修改，除了对象中的元素</li><li>const、let不可重复定义</li><li>const、let不是全局对象的属性</li><li>变量提升 ——let、const需要先声名再使用</li><li>块级作用域 ——if、while、for循环、switch、大括号、函数等</li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> JavaScript </tag>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>字体推荐</title>
      <link href="/posts/d9b39aa4/"/>
      <url>/posts/d9b39aa4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="中文字体推荐（一）"><a href="#中文字体推荐（一）" class="headerlink" title="中文字体推荐（一）"></a>中文字体推荐（一）</h2><h3 id="字体说明"><a href="#字体说明" class="headerlink" title="字体说明"></a>字体说明</h3><blockquote></blockquote><ul><li>字体名称: 芫荽</li><li>版本: 0.943</li><li>字型：繁体中文</li><li>字数：7800±</li><li>字符集：Big5</li><li>开源说明：基于 SIL Open Font License 1.1</li><li>使用说明：可商用</li><li>作者：<a href="https://github.com/ButTaiwan">ButTaiwan</a></li><li>来源：<a href="https://github.com/ButTaiwan/iansui">https://github.com/ButTaiwan/iansui</a></li></ul><blockquote></blockquote><h3 id="字体欣赏"><a href="#字体欣赏" class="headerlink" title="字体欣赏"></a>字体欣赏</h3><img src="/posts/d9b39aa4/font1.webp" class="" title="字体欣赏">]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
          <category> 前端 </category>
          
          <category> 字体 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> 项目 </tag>
            
            <tag> Font </tag>
            
            <tag> 字体 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你好2023</title>
      <link href="/posts/121220ae/"/>
      <url>/posts/121220ae/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div style="font-size:32px;">你好，2023！</div>]]></content>
      
      
      <categories>
          
          <category> 小记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开篇 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的电影2022</title>
      <link href="/posts/ecb83c7a/"/>
      <url>/posts/ecb83c7a/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div style="font-size:31px;"> 我的电影 2022</div><img src="/posts/ecb83c7a/mymovies2022.webp" class="" title="我的电影2022">]]></content>
      
      
      <categories>
          
          <category> 影视 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电影 </tag>
            
            <tag> 年终总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>年终总结</title>
      <link href="/posts/1f18a9aa/"/>
      <url>/posts/1f18a9aa/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div style="font-size:32px;background: #8A2387;background: -webkit-linear-gradient(to right, #F27121, #E94057, #8A2387);background: linear-gradient(to right, #F27121, #E94057, #8A2387);-webkit-background-clip: text;color: transparent;">    年终总结</div>]]></content>
      
      
      <categories>
          
          <category> 年终总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>十一月一日风雨大作</title>
      <link href="/posts/9beb0896/"/>
      <url>/posts/9beb0896/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div style="font-size:32px;background: #BBD2C5background: -webkit-linear-gradient(to right, #292E49, #536976, #BBD2C5);background: linear-gradient(to right, #292E49, #536976, #BBD2C5); -webkit-background-clip: text;color: transparent;">    十一月一日风雨大作</div><p style="font-size:20px;">台风尼格来袭</p><p style="font-size:20px;">入秋的风和雨</p><p style="font-size:20px;">比盛夏的轻</p><p style="font-size:20px;">比盛夏的冷</p>]]></content>
      
      
      <categories>
          
          <category> 小记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>十月天</title>
      <link href="/posts/46b97df7/"/>
      <url>/posts/46b97df7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div style="font-size:32px;background: #F7971E; background: -webkit-linear-gradient(to right, #FFD200, #F7971E);background: linear-gradient(to right, #FFD200, #F7971E); -webkit-background-clip: text;color: transparent;">    十月天</div><p style="font-size:20px;">金秋十月</p><p style="font-size:20px;">本是收获的天</p><p style="font-size:20px;">奈何走不出心灵的牢笼与羁绊!</p><p style="font-size:20px;">一天天把光阴散</p><p style="font-size:20px;">刚离开酷热的暑天</p><p style="font-size:20px;">也离阴冷的冬天不远</p><p style="font-size:20px;">勉励自己要努力勤奋地干！</p><br/><p style="font-size:20px;">说过了多少遍</p><p style="font-size:20px;">不如脚踏实地去实践</p><p style="font-size:20px;">不要违背当初的誓言</p><p style="font-size:20px;">免得到时候整日愁眉苦脸</p><p style="font-size:20px;">后悔的把气叹！</p>]]></content>
      
      
      <categories>
          
          <category> 小记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>忆九月</title>
      <link href="/posts/3e68a357/"/>
      <url>/posts/3e68a357/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div style="font-size:32px;background: #F2994A;background: -webkit-linear-gradient(to right, #F2C94C, #F2994A);background: linear-gradient(to right, #F2C94C, #F2994A); -webkit-background-clip: text;color: transparent;">    忆九月</div><p style="font-size:20px;">怀念学生时代！</p><p style="font-size:20px;">九月，就是新的开始！</p><p style="font-size:20px;">希望现在的我也要振作起来！</p><p style="font-size:20px;">有个好的新的开始！</p><p style="font-size:20px;">好好学习，天天向上！</p><p style="font-size:20px;">好好努力，天天向上！</p>]]></content>
      
      
      <categories>
          
          <category> 小记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>八月的忧愁</title>
      <link href="/posts/6a4428cd/"/>
      <url>/posts/6a4428cd/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div style="font-size:32px;background: #659999;background: -webkit-linear-gradient(to right, #f4791f, #659999);background: linear-gradient(to right, #f4791f, #659999); -webkit-background-clip: text;color: transparent;">    八月的忧愁</div><p style="font-size:20px;">《八月的忧愁》  -- 林徽因 </p>黄水塘里游着白鸭，<br>高粱梗油青的刚高过头，<br>这跳动的心怎样安插，<br>田里一窄条路，八月里这忧愁？<br>天是昨夜雨洗过的，山岗<br>照着太阳又留一片影；<br>羊跟着放羊的转进村庄，<br>一大棵树荫下罩着井，又像是心！<br>从没有人说过八月什么话，<br>夏天过去了，也不到秋天。<br>但我望着田垄，土墙上的瓜，<br>仍不明白生活同梦怎样的连牵。<br><p>迟到千年 苏打绿</p>]]></content>
      
      
      <categories>
          
          <category> 小记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最近听的歌</title>
      <link href="/posts/f75d36c1/"/>
      <url>/posts/f75d36c1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note blue icon-padding flat"><i class="note-icon fas fa-music"></i><p>本周歌单主题：【夏天的夏】 </p></div><div style="font-size:24px;background: #2193b0; background: -webkit-linear-gradient(to right, #6dd5ed, #2193b0);background: linear-gradient(to right, #6dd5ed, #2193b0); -webkit-background-clip: text;color: transparent;">2022-07-10 第29周歌单</div>        <div id="aplayer-OAYgazLD" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;"></div>  <script>  var options = {"narrow":false,"autoplay":false,"showlrc":3,"music":[{"title":"被风吹过的夏天","author":"林俊杰 / 金莎","url":"http://music.163.com/song/media/outer/url?id=247579.mp3","pic":"http://p1.music.126.net/JwutozZSE9flEAxTdLm1hQ==/109951165422704899.jpg","lrc":"被风吹过的夏天.txt"},{"title":"菊次郎的夏天","author":"何璟昕 (Ayen)","url":"http://music.163.com/song/media/outer/url?id=1843306799.mp3","pic":"http://p1.music.126.net/ch9TQ3lXPRh6q90XARXkpA==/109951165510231803.jpg","lrc":"菊次郎的夏天.txt"}]};  options.element = document.getElementById("aplayer-OAYgazLD");  var ap = new APlayer(options);    window.aplayers || (window.aplayers = []);  window.aplayers.push(ap);  </script>]]></content>
      
      
      <categories>
          
          <category> 歌 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 歌单 </tag>
            
            <tag> 歌 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最近听的歌</title>
      <link href="/posts/a19b6d00/"/>
      <url>/posts/a19b6d00/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note blue icon-padding flat"><i class="note-icon fas fa-music"></i><p>本周歌单主题：【Cheer】 </p></div><div style="font-size:24px;background: #2193b0; background: -webkit-linear-gradient(to right, #6dd5ed, #2193b0);background: linear-gradient(to right, #6dd5ed, #2193b0); -webkit-background-clip: text;color: transparent;">2022-07-03 第28周歌单</div>        <div id="aplayer-tCkNukXJ" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;"></div>  <script>  var options = {"narrow":false,"autoplay":false,"showlrc":3,"music":[{"title":"我喜欢上你时的内心活动","author":"陈绮贞","url":"http://music.163.com/song/media/outer/url?id=471403427.mp3","pic":"http://p1.music.126.net/AyyxC4stCu-Pm5qa8gaqDQ==/18762066418246617.jpg","lrc":"我喜欢上你时的内心活动.txt"},{"title":"会不会","author":"陈绮贞","url":"http://music.163.com/song/media/outer/url?id=209530.mp3","pic":"http://p1.music.126.net/YPqrig0F8ErKT88fZV5l2g==/78065325572962.jpg","lrc":"会不会.txt"},{"title":"失败者的飞翔","author":"陈绮贞","url":"http://music.163.com/song/media/outer/url?id=209142.mp3","pic":"http://p1.music.126.net/URl7aBYoIXXGIkWptGnBBw==/109951167148144504.jpg","lrc":"失败者的飞翔.txt"}]};  options.element = document.getElementById("aplayer-tCkNukXJ");  var ap = new APlayer(options);    window.aplayers || (window.aplayers = []);  window.aplayers.push(ap);  </script>]]></content>
      
      
      <categories>
          
          <category> 歌 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 歌单 </tag>
            
            <tag> 歌 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>七月流火</title>
      <link href="/posts/d028959c/"/>
      <url>/posts/d028959c/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div style="font-size:32px;background: #dd3e54;background: -webkit-linear-gradient(to right, #6be585, #dd3e54);background: linear-gradient(to right, #6be585, #dd3e54);-webkit-background-clip: text;color: transparent;">    七月流火</div>        <div id="aplayer-rErEsKXy" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content">[00:00.000] 作词 : Jam[00:01.000] 作曲 : Jam[00:12.88]我化尘埃飞扬，追寻赤裸逆翔[00:21.25]奔去七月刑场，时间烧灼滚烫[00:29.21]回忆撕毁臆想，路上行走匆忙[00:37.46]难能可贵世上，散播留香磁场[00:49.42]我欲乘风破浪，踏遍黄沙海洋[00:53.45]与其误会一场，也要不负勇往[00:57.60]我愿你是个谎，从未出现南墙[01:01.89]笑是神的伪装，笑是强忍的伤[01:06.35]就让我走向你，走向你的窗[01:10.54]就让我看见你，看见你的伤[01:15.05]我想你就站在，站在大漠边疆[01:19.64]我想你就站在，站在七月上[01:30.54][01:38.22]我化尘埃飞扬，追寻赤裸逆翔[01:46.28]奔去七月刑场，时间烧灼滚烫[01:54.39]回忆撕毁臆想，路上行走匆忙[02:02.69]难能可贵世上，散播留香磁场[02:10.05][02:14.64]我欲乘风破浪，踏遍黄沙海洋[02:18.85]与其误会一场，也要不负勇往[02:22.96]我愿你是个谎，从未出现南墙[02:27.92]笑是神的伪装，笑是强忍的伤[02:32.27]就让我走向你，走向你的窗[02:36.62]就让我看见你，看见你的伤[02:40.92]我想你就站在，站在大漠边疆[02:45.38]我想你就站在，站在七月上</pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-rErEsKXy"),            narrow: false,            autoplay: false,            showlrc: 2,            music: {              title: "七月上",              author: "Jam",              url: "http://music.163.com/song/media/outer/url?id=31445554.mp3",              pic: "http://p1.music.126.net/uxyYBS5jhmi_DN4xDYy3eg==/7872503255697381.jpg",              lrc: "七月上.txt"            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script>]]></content>
      
      
      <categories>
          
          <category> 小记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最近听的歌</title>
      <link href="/posts/ad01b2d8/"/>
      <url>/posts/ad01b2d8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note green icon-padding flat"><i class="note-icon fas fa-music"></i><p>本周歌单主题：【好歌曲精选】 </p></div><div style="font-size:24px;background: #00F260;background: -webkit-linear-gradient(to right, #0575E6, #00F260);background: linear-gradient(to right, #0575E6, #00F260); -webkit-background-clip: text;color: transparent;">2022-06-27 第27周歌单</div>        <div id="aplayer-bkeOoivJ" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;"></div>  <script>  var options = {"narrow":false,"autoplay":false,"showlrc":3,"music":[{"title":"阿楚姑娘","author":"梁凡","url":"http://music.163.com/song/media/outer/url?id=407759451.mp3","pic":"http://p2.music.126.net/XxKhyage6x5cOvYAT30nKQ==/17680146974797288.jpg","lrc":"阿楚姑娘.txt"}]};  options.element = document.getElementById("aplayer-bkeOoivJ");  var ap = new APlayer(options);    window.aplayers || (window.aplayers = []);  window.aplayers.push(ap);  </script>]]></content>
      
      
      <categories>
          
          <category> 歌 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 歌单 </tag>
            
            <tag> 歌 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最近听的歌</title>
      <link href="/posts/cca4e879/"/>
      <url>/posts/cca4e879/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note red icon-padding flat"><i class="note-icon fas fa-music"></i><p>本周歌单主题：【红豆】 </p></div><div style="font-size:24px;background: #8A2387;background: -webkit-linear-gradient(to right, #F27121, #E94057, #8A2387);background: linear-gradient(to right, #F27121, #E94057, #8A2387); -webkit-background-clip: text;color: transparent;">2022-06-25 第26周歌单</div>        <div id="aplayer-sVqJxmfK" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;"></div>  <script>  var options = {"narrow":false,"autoplay":false,"showlrc":3,"music":[{"title":"红豆","author":"张悬","url":"http://music.163.com/song/media/outer/url?id=26590188.mp3","pic":"http://p2.music.126.net/oQ-tutMCPG7nahOQtYClAg==/2495891395114313.jpg","lrc":"红豆.txt"}]};  options.element = document.getElementById("aplayer-sVqJxmfK");  var ap = new APlayer(options);    window.aplayers || (window.aplayers = []);  window.aplayers.push(ap);  </script>]]></content>
      
      
      <categories>
          
          <category> 歌 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 歌单 </tag>
            
            <tag> 歌 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IE停用</title>
      <link href="/posts/19d7b39f/"/>
      <url>/posts/19d7b39f/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>IE 浏览器已于 2022 年 06 月 15 日停用，全面转向 Microsoft Edge 浏览器</p></blockquote><img src="/posts/19d7b39f/1.webp" class="" title="IE终止"><img src="/posts/19d7b39f/2.webp" class="" title="IE终止"><div class="timeline blue"><div class='timeline-item headline'>        <div class='timeline-item-title'>          <div class='item-circle'><p>IE浏览器历史</p></div>        </div>      </div><div class='timeline-item'>        <div class='timeline-item-title'>          <div class='item-circle'><p>2013-10 Internet Explorer 11</p></div>        </div>        <div class='timeline-item-content'><img src="/posts/19d7b39f/IE10.jpg" class="" title="IE11"></div>      </div><div class='timeline-item'>        <div class='timeline-item-title'>          <div class='item-circle'><p>2012-08 Internet Explorer 10</p></div>        </div>        <div class='timeline-item-content'><img src="/posts/19d7b39f/IE10.jpg" class="" title="IE10"></div>      </div><div class='timeline-item'>        <div class='timeline-item-title'>          <div class='item-circle'><p>2011-03 Internet Explorer 9</p></div>        </div>        <div class='timeline-item-content'><img src="/posts/19d7b39f/IE9.png" class="" title="IE9"></div>      </div><div class='timeline-item'>        <div class='timeline-item-title'>          <div class='item-circle'><p>2008-03 Internet Explorer 8</p></div>        </div>        <div class='timeline-item-content'><img src="/posts/19d7b39f/IE8.png" class="" title="IE8"></div>      </div><div class='timeline-item'>        <div class='timeline-item-title'>          <div class='item-circle'><p>2006-10 Internet Explorer 7</p></div>        </div>        <div class='timeline-item-content'><img src="/posts/19d7b39f/IE7.png" class="" title="IE7"></div>      </div><div class='timeline-item'>        <div class='timeline-item-title'>          <div class='item-circle'><p>2001-10 Internet Explorer 6</p></div>        </div>        <div class='timeline-item-content'><img src="/posts/19d7b39f/IE6.jpg" class="" title="IE6"></div>      </div><div class='timeline-item'>        <div class='timeline-item-title'>          <div class='item-circle'><p>1999-05 Internet Explorer 5</p></div>        </div>        <div class='timeline-item-content'><img src="/posts/19d7b39f/IE5.gif" class="" title="IE5"></div>      </div><div class='timeline-item'>        <div class='timeline-item-title'>          <div class='item-circle'><p>1997-09 Internet Explorer 4</p></div>        </div>        <div class='timeline-item-content'><img src="/posts/19d7b39f/IE4.png" class="" title="IE4"></div>      </div><div class='timeline-item'>        <div class='timeline-item-title'>          <div class='item-circle'><p>1996-08 Internet Explorer 3</p></div>        </div>        <div class='timeline-item-content'><img src="/posts/19d7b39f/IE3.gif" class="" title="IE3"></div>      </div><div class='timeline-item'>        <div class='timeline-item-title'>          <div class='item-circle'><p>1995-11 Internet Explorer 2</p></div>        </div>        <div class='timeline-item-content'><img src="/posts/19d7b39f/IE2.gif" class="" title="IE2"></div>      </div><div class='timeline-item'>        <div class='timeline-item-title'>          <div class='item-circle'><p>1995-08 Internet Explorer 1</p></div>        </div>        <div class='timeline-item-content'><img src="/posts/19d7b39f/IE1.jpg" class="" title="IE1"></div>      </div></div>]]></content>
      
      
      <categories>
          
          <category> 互联网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微软 </tag>
            
            <tag> 浏览器 </tag>
            
            <tag> IE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最近听的歌</title>
      <link href="/posts/3e3e5cc1/"/>
      <url>/posts/3e3e5cc1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note blue icon-padding flat"><i class="note-icon fas fa-music"></i><p>本周歌单主题：【也许】 </p></div><div style="font-size:24px;background: #b92b27;background: -webkit-linear-gradient(to right, #1565C0, #b92b27);background: linear-gradient(to right, #1565C0, #b92b27); -webkit-background-clip: text;color: transparent;">2022-06-12 第25周歌单</div>        <div id="aplayer-TnmONdTz" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;"></div>  <script>  var options = {"narrow":false,"autoplay":false,"showlrc":3,"music":[{"title":"LAST TEXT","author":"Jake Miller","url":"http://music.163.com/song/media/outer/url?id=1386055783.mp3","pic":"http://p2.music.126.net/1aKA1k8K1vBtOgihNTMyLg==/109951164315952304.jpg","lrc":"LAST TEXT.txt"},{"title":"Call You Tonight","author":"Johnta Austin","url":"http://music.163.com/song/media/outer/url?id=1571835.mp3","pic":"http://p1.music.126.net/i_W0AmGXPTjZR-l6N29r_g==/1774611767230481.jpg","lrc":"Call You Tonight.txt"},{"title":"Let Her Go","author":"Passenger","url":"http://music.163.com/song/media/outer/url?id=18161816.mp3","pic":"http://p2.music.126.net/pAj2FEh7-68jLnL9H6E0sA==/109951165968178223.jpg","lrc":"Let Her Go.txt"},{"title":"Answer","author":"Batsu","url":"http://music.163.com/song/media/outer/url?id=441491486.mp3","pic":"http://p2.music.126.net/eUML7nkdRpRE-sSbG83kwA==/3394192436383319.jpg","lrc":"Answer.txt"}]};  options.element = document.getElementById("aplayer-TnmONdTz");  var ap = new APlayer(options);    window.aplayers || (window.aplayers = []);  window.aplayers.push(ap);  </script>]]></content>
      
      
      <categories>
          
          <category> 歌 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 歌单 </tag>
            
            <tag> 歌 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中国56项世界遗产全名单</title>
      <link href="/posts/46fd4f34/"/>
      <url>/posts/46fd4f34/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div style="font-size:32px;background: #00B4DB;background: -webkit-linear-gradient(to right, #0083B0, #00B4DB);background: linear-gradient(to right, #0083B0, #00B4DB);-webkit-background-clip: text;color: transparent;">    中国56项世界遗产全名单</div>(via <a href="https://m.weibo.cn/u/2803301701">@人民日报</a>)<br><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"s1.webp","alt":"","title":""},{"url":"s2.webp","alt":"","title":""},{"url":"s3.webp","alt":"","title":""},{"url":"s4.webp","alt":"","title":""},{"url":"s5.webp","alt":"","title":""},{"url":"s6.webp","alt":"","title":""},{"url":"s7.webp","alt":"","title":""},{"url":"s8.webp","alt":"","title":""},{"url":"s9.webp","alt":"","title":""}]</div>  </div>]]></content>
      
      
      <categories>
          
          <category> 人与自然 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 世界遗产 </tag>
            
            <tag> 中国 </tag>
            
            <tag> 图片 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生日快乐</title>
      <link href="/posts/42dbb1c3/"/>
      <url>/posts/42dbb1c3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div style="font-size:32px;background: #00b09b;background: -webkit-linear-gradient(to right, #96c93d, #00b09b);background: linear-gradient(to right, #96c93d, #00b09b);-webkit-background-clip: text;color: transparent;">    生日快乐！</div><div style="font-size:20px;"><p>gakki生日快乐！🎂🎂💐💐🧡🧡</p></div><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"2022061101.webp","alt":"","title":""},{"url":"2022061102.webp","alt":"","title":""},{"url":"2022061103.webp","alt":"","title":""},{"url":"2022061104.webp","alt":"","title":""},{"url":"2022061105.webp","alt":"","title":""},{"url":"2022061106.webp","alt":"","title":""},{"url":"2022061107.webp","alt":"","title":""}]</div>  </div>]]></content>
      
      
      <categories>
          
          <category> 小记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生日快乐 </tag>
            
            <tag> gakki </tag>
            
            <tag> 新垣结衣 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>六月的雨</title>
      <link href="/posts/654ef1a2/"/>
      <url>/posts/654ef1a2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div style="font-size:32px;background: #bdc3c7;background: -webkit-linear-gradient(to right, #2c3e50, #bdc3c7);background: linear-gradient(to right, #2c3e50, #bdc3c7);-webkit-background-clip: text;color: transparent;">    六月的雨</div><p>六月的雨</p>]]></content>
      
      
      <categories>
          
          <category> 小记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue3项目开发基本流程(一)</title>
      <link href="/posts/e5f60b2d/"/>
      <url>/posts/e5f60b2d/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note primary flat"><p>本文方法只在相关版本下测试使用，未做全面测试，也不保证其他版本可用。</p></div><div class="note info [no-icon] flat"><p>VSCode: 1.67.2<br>vue: 3.2.33<br>vue-router: 4.0.15<br>vuex: 4.0.2<br>webpack: 5.72.0<br>vue&#x2F;cli: 5.0.4<br>node: 16.14.0<br>npm: 8.3.1<br>axios: 0.27.2<br>element-plus: 2.2.0<br>vant: 4.0.0-alpha.3</p></div><hr><h2 id="Vue3-项目开发基本流程-一-项目框架搭建"><a href="#Vue3-项目开发基本流程-一-项目框架搭建" class="headerlink" title="Vue3 项目开发基本流程(一) 项目框架搭建"></a>Vue3 项目开发基本流程(一) 项目框架搭建</h2><h3 id="安装-VueCli"><a href="#安装-VueCli" class="headerlink" title="安装 VueCli"></a>安装 VueCli</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue/cli</span><br></pre></td></tr></table></figure><h3 id="项目框架搭建"><a href="#项目框架搭建" class="headerlink" title="项目框架搭建"></a>项目框架搭建</h3><h4 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vue create vue3-project</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">选择babel、typescript、Vue-Router、Vuex、postcss(less)、lint(eslint-prettier)</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">class-style component syntax  --- No</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Babel alongside TypeScript    --- Yes</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">router mode --- <span class="built_in">history</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">css ---less</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ESlint --- ESlint + Prettier</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Lint on save</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">dedicated config files</span></span><br></pre></td></tr></table></figure><img src="/posts/e5f60b2d/pic_1.webp" class="" title="创建项目"><h4 id="配置-editorconfig"><a href="#配置-editorconfig" class="headerlink" title="配置 .editorconfig"></a>配置 .editorconfig</h4><ul><li><ol><li>VSCode 安装 EditorConfig for VS Code 插件</li></ol></li><li><ol start="2"><li>项目根目录右键点击 Generate .editorconfig，生成.editorconfig 文件</li></ol></li><li><ol start="3"><li>配置.editorconfig 文件</li></ol></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">EditorConfig is awesome: https://EditorConfig.org</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">top-most EditorConfig file</span></span><br><span class="line">root = true</span><br><span class="line"></span><br><span class="line">[*] # 表示所有文件适用</span><br><span class="line">indent_style = space # 缩进风格 (tag | space)</span><br><span class="line">indent_size = 2 # 缩进大小</span><br><span class="line">end_of_line = crlf # 控制换行类型(lf | cr | crlf)</span><br><span class="line">charset = utf-8 # 设置文件字符集为utf-8</span><br><span class="line">trim_trailing_whitespace = true # 去除行首的任意空白字符</span><br><span class="line">insert_final_newline = true # 始终在文件末尾插入一个新行</span><br><span class="line"></span><br><span class="line">[*.md] # 表示仅md文件适用以下规则</span><br><span class="line">max_line_length = off</span><br><span class="line">trim_trailing_whitespace = false</span><br></pre></td></tr></table></figure><h4 id="配置-prettier"><a href="#配置-prettier" class="headerlink" title="配置 prettier"></a>配置 prettier</h4><h5 id="安装-prettier"><a href="#安装-prettier" class="headerlink" title="安装 prettier"></a>安装 prettier</h5><ul><li>prettier，强大的代码格式化工具。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install prettier -D --save-exact</span><br></pre></td></tr></table></figure><h5 id="prettier-相关配置"><a href="#prettier-相关配置" class="headerlink" title="prettier 相关配置"></a>prettier 相关配置</h5><ul><li><ol><li>新建.prettierrc 文件</li></ol></li><li><ol start="2"><li>配置.prettierrc<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;useTabs&quot;</span>: <span class="literal">false</span>, <span class="comment">//使用tab缩进还是空格缩进</span></span><br><span class="line">  <span class="string">&quot;tabWidth&quot;</span>: <span class="number">2</span>, <span class="comment">//tab空格的字符长度为2</span></span><br><span class="line">  <span class="string">&quot;printWidth&quot;</span>: <span class="number">80</span>, <span class="comment">//每一行字符最大的长度</span></span><br><span class="line">  <span class="string">&quot;singleQuote&quot;</span>: <span class="literal">false</span>, <span class="comment">//单引号or双引号</span></span><br><span class="line">  <span class="string">&quot;trailingComma&quot;</span>: <span class="string">&quot;none&quot;</span>, <span class="comment">//多行输入的尾逗号是否添加</span></span><br><span class="line">  <span class="string">&quot;semi&quot;</span>: <span class="literal">true</span> <span class="comment">//语句末尾是否加分号</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li><li><ol start="3"><li>新建.prettierignore 文件，忽略某个文件使用 prettier 进行代码格式化</li></ol></li><li><ol start="4"><li>配置.prettierignore 文件</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/dist/*</span><br><span class="line">.local</span><br><span class="line">.output.js</span><br><span class="line">/node_modules/**</span><br><span class="line"></span><br><span class="line">**/*.svg</span><br><span class="line">**/*.sh</span><br><span class="line"></span><br><span class="line">/public/*</span><br></pre></td></tr></table></figure></li><li><ol start="5"><li>VSCode 安装 prettier 插件</li></ol></li><li><ol start="6"><li>手动配置 package.json prettier 脚本<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;prettier&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prettier --write&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li></ol></li><li><ol start="7"><li>在新建的项目启动前，执行 prettier 代码格式化命令<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run prettier</span><br></pre></td></tr></table></figure></li></ol></li></ul><h4 id="配置-ESlint"><a href="#配置-ESlint" class="headerlink" title="配置 ESlint"></a>配置 ESlint</h4><ul><li><ol><li>VueClii 项目已经默认配置 ESlint 环境</li></ol></li><li><ol start="2"><li>VSCode 安装 ESlint 插件</li></ol></li><li><ol start="3"><li>解决 ESlint 和 prettier 冲突问题<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装两个插件(vuecli创建项目时，选择prettier就会自动安装)</span></span><br><span class="line">npm i eslint-plugin-prettier eslint-config-prettier -D</span><br></pre></td></tr></table></figure></li></ol></li><li><ol start="4"><li>.eslintrc.js 配置<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">extends</span>: [</span><br><span class="line">  <span class="string">&quot;plugin:vue/vue3-essential&quot;</span>,</span><br><span class="line">  <span class="string">&quot;eslint:recommended&quot;</span>,</span><br><span class="line">  <span class="string">&quot;@vue/typescript/recommended&quot;</span>,</span><br><span class="line">  <span class="string">&quot;plugin:prettier/recommended&quot;</span>,</span><br><span class="line">  <span class="string">&quot;@vue/prettier&quot;</span>,</span><br><span class="line">  <span class="string">&quot;@vue/prettier/@typescript-eslint&quot;</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure></li></ol></li><li><ol start="5"><li>配置 git 提交规范，使其符合 ESlint 要求</li></ol><ul><li><ol><li>git Husky 相关配置</li></ol><ul><li>安装 husky，husky 是一个 git hook 工具，可以触发 git 提交的各个阶段，pre-commit、commit-msg、pre-push<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx husky-init &amp;&amp; npm install</span><br></pre></td></tr></table></figure></li><li>安装完成后会自动在 package.json 脚本中生成 husky 脚本<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;prepare&quot;</span><span class="punctuation">:</span> <span class="string">&quot;husky install&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li>安装完成后会自动在项目根目录生成.husky 文件夹;需要手动在 .husky&#x2F;pre-commit 文件中配置<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm run lint</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">这样配置完成后，在执行git commit时 会自动进行ESlint校验</span></span><br></pre></td></tr></table></figure></li></ul></li><li><ol start="2"><li>npx cz 提交规范配置</li></ol><ul><li>安装 commitizen，commitizen 是在 git commit 提交 meaasge 的文本风格规范<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i commitizen -D</span><br></pre></td></tr></table></figure></li><li>安装 cz-conventional-changelog，初始化 cz-conventional-changelog<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx commitizen init cz-conventional-changelog --save-dev --save-exact</span><br></pre></td></tr></table></figure></li><li>安装和初始化 cz-conventional-changelog 之后：<ul><li>自动在 package.json 脚本中生成<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;config&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;commitizen&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./node_modules/cz-conventional-changelog&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li></ul></li><li>安装完成后，需要手动配置 package.json commit 脚本，代码提交时在终端执行 npx cz 或者 npm run commmit<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;commit&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cz&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><ol start="3"><li>git commit 提交规范配置</li></ol><ul><li>安装@commitlint&#x2F;config-conventional 和 @commitlint&#x2F;cli<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev @commitlint/config-conventional @commitlint/cli -D</span><br></pre></td></tr></table></figure></li><li>项目根目录创建 commitlint.config.js，配置<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">extends</span>: [<span class="string">&quot;@commitlint/config-conventional&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>在终端执行以下命令，使用 husky 生成提交信息 commit-msg，验证提交信息规范<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx husky add .husky/commit-msg &quot;npx --no-install commitlint --edit $1&quot;</span><br></pre></td></tr></table></figure></li><li>上述命令执行完成后，项目根目录自动生成.husky&#x2F;commit-msg 文件，在 commit-msg 中配置<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx --no-install commitlint --edit</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul><h4 id="配置-vue-config-js"><a href="#配置-vue-config-js" class="headerlink" title="配置 vue.config.js"></a>配置 vue.config.js</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> &#123; defineConfig &#125; = <span class="built_in">require</span>(<span class="string">&quot;@vue/cli-service&quot;</span>)</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">transpileDependencies</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">outputDir</span>: <span class="string">&quot;./build&quot;</span>,</span><br><span class="line">  <span class="comment">// configureWebpack: &#123;</span></span><br><span class="line">  <span class="comment">//   resolve: &#123;</span></span><br><span class="line">  <span class="comment">// alias: &#123;</span></span><br><span class="line">  <span class="comment">//      assets: &quot;@/assets&quot;,</span></span><br><span class="line">  <span class="comment">//      components: &quot;@/components&quot;,</span></span><br><span class="line">  <span class="comment">//      common: &quot;@/common&quot;,</span></span><br><span class="line">  <span class="comment">//      network: &quot;@/network&quot;,</span></span><br><span class="line">  <span class="comment">//      views: &quot;@/views&quot;</span></span><br><span class="line">  <span class="comment">//    &#125;</span></span><br><span class="line">  <span class="comment">//   &#125;</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">  <span class="comment">// configureWebpack: (config) =&gt; &#123;</span></span><br><span class="line">  <span class="comment">//   config.resolve.alias = &#123;</span></span><br><span class="line">  <span class="comment">//     &#x27;@&#x27;: path.resolve(__dirname, &#x27;src&#x27;),</span></span><br><span class="line">  <span class="comment">//     views: &#x27;@/views&#x27;</span></span><br><span class="line">  <span class="comment">//   &#125;</span></span><br><span class="line">  <span class="comment">// &#125;,</span></span><br><span class="line">  <span class="attr">chainWebpack</span>: <span class="function">(<span class="params">config</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//配置别名</span></span><br><span class="line">    config.<span class="property">resolve</span>.<span class="property">alias</span></span><br><span class="line">      .<span class="title function_">set</span>(<span class="string">&quot;@&quot;</span>, path.<span class="title function_">resolve</span>(__dirname, <span class="string">&quot;src&quot;</span>))</span><br><span class="line">      .<span class="title function_">set</span>(<span class="string">&quot;assets&quot;</span>, <span class="string">&quot;@/assets&quot;</span>)</span><br><span class="line">      .<span class="title function_">set</span>(<span class="string">&quot;common&quot;</span>, <span class="string">&quot;@/common&quot;</span>)</span><br><span class="line">      .<span class="title function_">set</span>(<span class="string">&quot;components&quot;</span>, <span class="string">&quot;@/components&quot;</span>)</span><br><span class="line">      .<span class="title function_">set</span>(<span class="string">&quot;network&quot;</span>, <span class="string">&quot;@/network&quot;</span>)</span><br><span class="line">      .<span class="title function_">set</span>(<span class="string">&quot;views&quot;</span>, <span class="string">&quot;@/views&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="配置-vue-router"><a href="#配置-vue-router" class="headerlink" title="配置 vue-router"></a>配置 vue-router</h4><h5 id="安装-vue-router"><a href="#安装-vue-router" class="headerlink" title="安装 vue-router"></a>安装 vue-router</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i vue-router</span><br></pre></td></tr></table></figure><h5 id="新建-router-index-ts"><a href="#新建-router-index-ts" class="headerlink" title="新建 router&#x2F;index.ts"></a>新建 router&#x2F;index.ts</h5><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建router对象</span></span><br><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHashHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">RouteRecordRaw</span> &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">routes</span>: <span class="title class_">RouteRecordRaw</span>[] = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">    <span class="attr">redirect</span>: <span class="string">&quot;/main&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/main&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;../views/main/main.vue&quot;</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/login&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;../views/login/login.vue&quot;</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;*&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;../views/error/ERR404.vue&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  routes,</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHashHistory</span>()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><h5 id="挂载-vue-router"><a href="#挂载-vue-router" class="headerlink" title="挂载 vue-router"></a>挂载 vue-router</h5><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 在main.<span class="property">ts</span>中挂载router</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">createApp</span>(<span class="title class_">App</span>).<span class="title function_">use</span>(router).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="配置-vuex"><a href="#配置-vuex" class="headerlink" title="配置 vuex"></a>配置 vuex</h4><h5 id="安装-vuex"><a href="#安装-vuex" class="headerlink" title="安装 vuex"></a>安装 vuex</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i vuex</span><br></pre></td></tr></table></figure><h5 id="新建-store-index-ts"><a href="#新建-store-index-ts" class="headerlink" title="新建 store&#x2F;index.ts"></a>新建 store&#x2F;index.ts</h5><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建store实例</span></span><br><span class="line"><span class="keyword">import</span> &#123; createStore &#125; <span class="keyword">from</span> <span class="string">&quot;vuex&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = <span class="title function_">createStore</span>(&#123;</span><br><span class="line">  <span class="title function_">state</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store</span><br></pre></td></tr></table></figure><h5 id="挂载-vuex"><a href="#挂载-vuex" class="headerlink" title="挂载 vuex"></a>挂载 vuex</h5><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&quot;./store&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">createApp</span>(<span class="title class_">App</span>).<span class="title function_">use</span>(store).<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="配置全局-CSS"><a href="#配置全局-CSS" class="headerlink" title="配置全局 CSS"></a>配置全局 CSS</h4><h5 id="安装-normalize-css"><a href="#安装-normalize-css" class="headerlink" title="安装 normalize.css"></a>安装 normalize.css</h5><h5 id="配置-CSS"><a href="#配置-CSS" class="headerlink" title="配置 CSS"></a>配置 CSS</h5><ul><li>手动创建 src&#x2F;assets&#x2F;css&#x2F;base.less</li><li>手动创建 src&#x2F;assets&#x2F;css&#x2F;index.less</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> url(<span class="string">&quot;./base.less&quot;</span>);</span><br></pre></td></tr></table></figure><ul><li>在 main.ts 中引用 css</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&quot;normalize.css&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;assets/css/index.less&quot;</span></span><br></pre></td></tr></table></figure><h5 id="POSTCSS-浏览器适配"><a href="#POSTCSS-浏览器适配" class="headerlink" title="POSTCSS 浏览器适配"></a>POSTCSS 浏览器适配</h5><ul><li>安装 postcss-px-to-viewport-8-plugin</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将px转换为vw/vh</span></span><br><span class="line">npm i postcss-px-to-viewport-8-plugin</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">基于postcss-px-to-viewport开发的插件，直接使用postcss-px-to-viewport会报错</span></span><br></pre></td></tr></table></figure><ul><li>项目根目录创建 postcss.config.js，配置</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">plugins</span>: &#123;</span><br><span class="line">    <span class="string">&quot;postcss-px-to-viewport&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">viewportWidth</span>: <span class="number">375</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="第三方-API-接口跨域代理配置"><a href="#第三方-API-接口跨域代理配置" class="headerlink" title="第三方 API 接口跨域代理配置"></a>第三方 API 接口跨域代理配置</h4><h5 id="vue-config-js-配置代理"><a href="#vue-config-js-配置代理" class="headerlink" title="vue.config.js 配置代理"></a>vue.config.js 配置代理</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; defineConfig &#125; = <span class="built_in">require</span>(<span class="string">&quot;@vue/cli-service&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">devServer</span>: &#123;</span><br><span class="line">    <span class="attr">proxy</span>: &#123;</span><br><span class="line">      <span class="string">&quot;/api&quot;</span>: &#123;</span><br><span class="line">        <span class="comment">//代理 访问接口，仅用于本地测试</span></span><br><span class="line">        <span class="attr">target</span>: <span class="string">&quot;https://api.bilibili.com/x/web-interface&quot;</span>,</span><br><span class="line">        <span class="attr">pathRewrite</span>: &#123;</span><br><span class="line">          <span class="string">&quot;^/api&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">changeOrigin</span>: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h5 id="接口跨域测试错误处理"><a href="#接口跨域测试错误处理" class="headerlink" title="接口跨域测试错误处理"></a>接口跨域测试错误处理</h5><ul><li>404</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//以axios网络请求为例，需要配置</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span></span><br><span class="line"><span class="keyword">const</span> resquest = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: <span class="string">&quot;/api&quot;</span>, <span class="comment">//非常关键，搭配vue.config.js / devServer / proxy配置</span></span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">10000</span></span><br><span class="line">&#125;)</span><br><span class="line">request</span><br><span class="line">  .<span class="title function_">get</span>(<span class="string">&quot;/test&quot;</span>, &#123;&#125;)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(res))</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(err))</span><br></pre></td></tr></table></figure><ul><li>403</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 在public/index.html配置，所有请求不发送 referrer，绕过防盗链 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;referrer&quot;</span> <span class="attr">content</span>=<span class="string">&quot;never&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h4 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h4><ul><li>创建 .env.development .env.production 文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">.env.development文件</span></span><br><span class="line">VUE_APP_BASE_URL = http://127.0.0.1/dev</span><br><span class="line">VUE_APP_BASE_NAME = HELLO VUE</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">获取VUE_APP_BASE_URL，process.env.VUE_APP_BASE_URL</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">获取VUE_APP_BASE_NAME，process.env.VUE_APP_BASE_NAME</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">.env.production文件</span></span><br><span class="line">VUE_APP_BASE_URL = http://127.0.0.1/prod</span><br><span class="line">VUE_APP_BASE_NAME = HELLO VUE</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">获取VUE_APP_BASE_URL，process.env.VUE_APP_BASE_URL</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">获取VUE_APP_BASE_NAME，process.env.VUE_APP_BASE_NAME</span></span><br></pre></td></tr></table></figure><h4 id="axios-封装"><a href="#axios-封装" class="headerlink" title="axios 封装"></a>axios 封装</h4><h5 id="安装-axios"><a href="#安装-axios" class="headerlink" title="安装 axios"></a>安装 axios</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i axios</span><br></pre></td></tr></table></figure><h5 id="配置与封装-axios"><a href="#配置与封装-axios" class="headerlink" title="配置与封装 axios"></a>配置与封装 axios</h5><ul><li>新建 axios 配置文件， src&#x2F;service&#x2F;request&#x2F;config.ts</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable constant_">BASE_URL</span> = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable constant_">BASE_NAME</span> = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">if</span> (process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&quot;development&quot;</span>) &#123;</span><br><span class="line">  <span class="variable constant_">BASE_URL</span> = <span class="string">&quot;http://127.0.0.1/dev&quot;</span></span><br><span class="line">  <span class="variable constant_">BASE_NAME</span> = <span class="string">&quot;Hello Vue&quot;</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&quot;production&quot;</span>) &#123;</span><br><span class="line">  <span class="variable constant_">BASE_URL</span> = <span class="string">&quot;http://127.0.0.1/prod&quot;</span></span><br><span class="line">  <span class="variable constant_">BASE_NAME</span> = <span class="string">&quot;Hello World&quot;</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="variable constant_">BASE_URL</span> = <span class="string">&quot;http://127.0.0.1/test&quot;</span></span><br><span class="line">  <span class="variable constant_">BASE_NAME</span> = <span class="string">&quot;Hello Test&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123; <span class="variable constant_">BASE_URL</span>, <span class="variable constant_">BASE_NAME</span> &#125;</span><br></pre></td></tr></table></figure><ul><li>新建类型文件 src&#x2F;service&#x2F;request&#x2F;type.ts</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable constant_">BASE_URL</span> = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable constant_">BASE_NAME</span> = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">if</span> (process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&quot;development&quot;</span>) &#123;</span><br><span class="line">  <span class="variable constant_">BASE_URL</span> = <span class="string">&quot;http://127.0.0.1/dev&quot;</span></span><br><span class="line">  <span class="variable constant_">BASE_NAME</span> = <span class="string">&quot;Hello Vue&quot;</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&quot;production&quot;</span>) &#123;</span><br><span class="line">  <span class="variable constant_">BASE_URL</span> = <span class="string">&quot;http://127.0.0.1/prod&quot;</span></span><br><span class="line">  <span class="variable constant_">BASE_NAME</span> = <span class="string">&quot;Hello World&quot;</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="variable constant_">BASE_URL</span> = <span class="string">&quot;http://127.0.0.1/test&quot;</span></span><br><span class="line">  <span class="variable constant_">BASE_NAME</span> = <span class="string">&quot;Hello Test&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123; <span class="variable constant_">BASE_URL</span>, <span class="variable constant_">BASE_NAME</span> &#125;</span><br></pre></td></tr></table></figure><ul><li>新建类型文件 src&#x2F;service&#x2F;request&#x2F;type.ts</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AxiosRequestConfig</span>, <span class="title class_">AxiosResponse</span> &#125; <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> <span class="title class_">MyRequestInterseptors</span>&lt;T = <span class="title class_">AxiosResponse</span>&gt; &#123;</span><br><span class="line">  <span class="attr">requestInterceptor</span>: <span class="function">(<span class="params">config: AxiosRequestConfig</span>) =&gt;</span> <span class="title class_">AxiosRequestConfig</span></span><br><span class="line">  requesInterceptorCatch?: <span class="function">(<span class="params">error: <span class="built_in">any</span></span>) =&gt;</span> <span class="built_in">any</span></span><br><span class="line">  responseInterceptor?: <span class="function">(<span class="params">res: T</span>) =&gt;</span> T</span><br><span class="line">  responseInterceptorCatch?: <span class="function">(<span class="params">error: <span class="built_in">any</span></span>) =&gt;</span> <span class="built_in">any</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> <span class="title class_">MyRequestConfig</span>&lt;T = <span class="title class_">AxiosResponse</span>&gt; <span class="keyword">extends</span> <span class="title class_">AxiosRequestConfig</span> &#123;</span><br><span class="line">  interceptors?: <span class="title class_">MyRequestInterseptors</span>&lt;T&gt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>新建 axios 请求文件, src&#x2F;service&#x2F;request&#x2F;request.ts</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">AxiosInstance</span> &#125; <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">MyRequestInterseptors</span>, <span class="title class_">MyRequestConfig</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./type&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyRequest</span> &#123;</span><br><span class="line">  <span class="attr">instance</span>: <span class="title class_">AxiosInstance</span></span><br><span class="line">  interceptors?: <span class="title class_">MyRequestInterseptors</span></span><br><span class="line"></span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">config: MyRequestConfig</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">instance</span> = axios.<span class="title function_">create</span>(config)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">interceptors</span> = config.<span class="property">interceptors</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//实例自定义拦截器</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">instance</span>.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">interceptors</span>?.<span class="property">requestInterceptor</span>,</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">interceptors</span>?.<span class="property">requesInterceptorCatch</span></span><br><span class="line">    )</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">instance</span>.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">interceptors</span>?.<span class="property">responseInterceptor</span>,</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">interceptors</span>?.<span class="property">responseInterceptorCatch</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="comment">//所有实例的拦截器</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">instance</span>.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(</span><br><span class="line">      <span class="function">(<span class="params">config</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> config</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">      &#125;</span><br><span class="line">    )</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">instance</span>.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">      <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">      &#125;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  request&lt;T&gt;(<span class="attr">config</span>: <span class="title class_">MyRequestConfig</span>&lt;T&gt;): <span class="title class_">Promise</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (config.<span class="property">interceptors</span>?.<span class="property">requestInterceptor</span>) &#123;</span><br><span class="line">        config = config.<span class="property">interceptors</span>.<span class="title function_">requestInterceptor</span>(config)</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">instance</span></span><br><span class="line">        .<span class="property">request</span>&lt;<span class="built_in">any</span>, T&gt;(config)</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (config.<span class="property">interceptors</span>?.<span class="property">responseInterceptor</span>) &#123;</span><br><span class="line">            res = config.<span class="property">interceptors</span>.<span class="title function_">responseInterceptor</span>(res)</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="title function_">resolve</span>(res)</span><br><span class="line">        &#125;)</span><br><span class="line">        .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="title function_">reject</span>(err)</span><br><span class="line">          <span class="keyword">return</span> err</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  get&lt;T&gt;(<span class="attr">config</span>: <span class="title class_">MyRequestConfig</span>&lt;T&gt;): <span class="title class_">Promise</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">request</span>&lt;T&gt;(&#123; ...config, <span class="attr">method</span>: <span class="string">&quot;GET&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  post&lt;T&gt;(<span class="attr">config</span>: <span class="title class_">MyRequestConfig</span>&lt;T&gt;): <span class="title class_">Promise</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">request</span>&lt;T&gt;(&#123; ...config, <span class="attr">method</span>: <span class="string">&quot;POST&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">delete</span>&lt;T&gt;(<span class="attr">config</span>: <span class="title class_">MyRequestConfig</span>&lt;T&gt;): <span class="title class_">Promise</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">request</span>&lt;T&gt;(&#123; ...config, <span class="attr">method</span>: <span class="string">&quot;DELETE&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  patch&lt;T&gt;(<span class="attr">config</span>: <span class="title class_">MyRequestConfig</span>&lt;T&gt;): <span class="title class_">Promise</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">request</span>&lt;T&gt;(&#123; ...config, <span class="attr">method</span>: <span class="string">&quot;PATCH&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">MyRequest</span></span><br></pre></td></tr></table></figure><ul><li>新建 axios 封装导出文件, src&#x2F;service&#x2F;index.ts</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">MyRequest</span> <span class="keyword">from</span> <span class="string">&quot;./request/request&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="variable constant_">BASE_URL</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./request/config&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> myRequestInstance = <span class="keyword">new</span> <span class="title class_">MyRequest</span>(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: <span class="variable constant_">BASE_URL</span>,</span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">10000</span>,</span><br><span class="line">  <span class="attr">interceptors</span>: &#123;</span><br><span class="line">    <span class="attr">requestInterceptor</span>: <span class="function">(<span class="params">config</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">//请求拦截器，验证token</span></span><br><span class="line">      <span class="keyword">const</span> token = <span class="string">&quot;&quot;</span></span><br><span class="line">      <span class="keyword">if</span> (token &amp;&amp; config.<span class="property">headers</span> &amp;&amp; config.<span class="property">headers</span>.<span class="property">Authorization</span>) &#123;</span><br><span class="line">        config.<span class="property">headers</span>.<span class="property">Authorization</span> = <span class="string">`Bearer <span class="subst">$&#123;token&#125;</span>`</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> config</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">requesInterceptorCatch</span>: <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> err</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">responseInterceptor</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">//响应拦截，处理数据</span></span><br><span class="line">      <span class="keyword">const</span> data = res.<span class="property">data</span></span><br><span class="line">      <span class="keyword">return</span> data</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">responseInterceptorCatch</span>: <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (err.<span class="property">response</span>.<span class="property">status</span> === <span class="number">404</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;404.&quot;</span>)</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> myRequestInstance</span><br></pre></td></tr></table></figure><ul><li>项目引用 axios</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; myRequestInstance &#125; <span class="keyword">from</span> <span class="string">&quot;../index&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">someDataRequest</span> = (<span class="params">url, params</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> myRequestInstance.<span class="title function_">get</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: url,</span><br><span class="line">    <span class="attr">params</span>: params</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="配置-element-plus"><a href="#配置-element-plus" class="headerlink" title="配置 element-plus"></a>配置 element-plus</h4><h5 id="安装-element-plus"><a href="#安装-element-plus" class="headerlink" title="安装 element-plus"></a>安装 element-plus</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i element-plus</span><br></pre></td></tr></table></figure><h5 id="全局引用-element-plus"><a href="#全局引用-element-plus" class="headerlink" title="全局引用 element-plus"></a>全局引用 element-plus</h5><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">ElementPlus</span> <span class="keyword">from</span> <span class="string">&quot;element-plus&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;element-plus/dist/index.css&quot;</span></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title class_">ElementPlus</span>)</span><br></pre></td></tr></table></figure><h5 id="局部引用-element-plus"><a href="#局部引用-element-plus" class="headerlink" title="局部引用 element-plus"></a>局部引用 element-plus</h5><ul><li>单组件文件中按需引用</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; ElButton &#125; from &quot;elemeny-plus&quot;</span><br><span class="line">import &quot;element-plus/dist/index.css&quot;</span><br><span class="line"></span><br><span class="line">export default defineComponent(&#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    ElButton</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li><p>按需引用多个组件，需要自动配置</p><ul><li>安装 bable-plugin-import</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i babel-plugin-import -D</span><br></pre></td></tr></table></figure><ul><li>配置 babel.config.js</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="string">&quot;import&quot;</span>,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">libraryName</span>: <span class="string">&quot;element-plus&quot;</span>,</span><br><span class="line">      <span class="attr">customStyleName</span>: <span class="function">(<span class="params">name</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`element-plus/lib/theme-chalk/<span class="subst">$&#123;name&#125;</span>.css`</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>单组件文件中配置</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; ElButton &#125; from &quot;elemeny-plus&quot;</span><br><span class="line">import &quot;element-plus/dist/index.css&quot;</span><br><span class="line"></span><br><span class="line">export default defineComponent(&#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    ElButton</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>按需引用，全局注册</p><ul><li>安装 bable-plugin-import 配置 babel.config.js，跟自动配置一样</li><li>main.ts 文件中引用<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ElButton</span> &#125; <span class="keyword">from</span> <span class="string">&quot;elemeny-plus&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;element-plus/dist/index.css&quot;</span></span><br><span class="line">app.<span class="title function_">component</span>(<span class="title class_">ElButton</span>.<span class="property">name</span>, <span class="title class_">ElButton</span>)</span><br></pre></td></tr></table></figure></li><li>全局注册多个组件<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ElButton</span>, <span class="title class_">ElForm</span>, <span class="title class_">ElInput</span> &#125; <span class="keyword">from</span> <span class="string">&quot;elemeny-plus&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;element-plus/dist/index.css&quot;</span></span><br><span class="line"><span class="keyword">const</span> components = [<span class="title class_">ElButton</span>, <span class="title class_">ElForm</span>, <span class="title class_">ElInput</span>]</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> component <span class="keyword">of</span> components) &#123;</span><br><span class="line">  app.<span class="title function_">component</span>(component.<span class="property">name</span>, component)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>按需引用，全局注册，抽取封装</p><ul><li><p>安装 bable-plugin-import 配置 babel.config.js，跟自动配置一样</p></li><li><p>创建文件 src&#x2F;global&#x2F;register-element.ts</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">App</span> &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ElButton</span> &#125; <span class="keyword">from</span> <span class="string">&quot;elemeny-plus&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;element-plus/dist/index.css&quot;</span></span><br><span class="line"><span class="keyword">const</span> components = [<span class="title class_">ElButton</span>, <span class="title class_">ElForm</span>, <span class="title class_">ElInput</span>]</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> (<span class="params">app: App</span>): <span class="built_in">void</span> &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> component <span class="keyword">of</span> components) &#123;</span><br><span class="line">    app.<span class="title function_">component</span>(component.<span class="property">name</span>, component)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>创建文件 src&#x2F;global&#x2F;index.ts</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">App</span> &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span></span><br><span class="line"><span class="keyword">import</span> registerElement <span class="keyword">from</span> <span class="string">&quot;./register-element&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">registerApp</span>(<span class="params">app: App</span>): <span class="built_in">void</span> &#123;</span><br><span class="line">  <span class="comment">//registerElement(app)</span></span><br><span class="line">  app.<span class="title function_">use</span>(registerElement)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>main.ts 文件中引用</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; registerApp &#125; <span class="keyword">from</span> <span class="string">&quot;./global&quot;</span></span><br><span class="line"><span class="comment">//registerApp(app)</span></span><br><span class="line">app.<span class="title function_">use</span>(registerApp)</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="配置-vant"><a href="#配置-vant" class="headerlink" title="配置 vant"></a>配置 vant</h4><h5 id="安装-vant"><a href="#安装-vant" class="headerlink" title="安装 vant"></a>安装 vant</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i vant</span><br></pre></td></tr></table></figure><h5 id="按需引用"><a href="#按需引用" class="headerlink" title="按需引用"></a>按需引用</h5><ul><li>安装 babel.config.js</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i babel-plugin-import -D</span><br></pre></td></tr></table></figure><ul><li>配置 babel.config.js</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;plugins&quot;</span>: [</span><br><span class="line">    [</span><br><span class="line">      <span class="string">&quot;import&quot;</span>,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">&quot;libraryName&quot;</span>: <span class="string">&quot;vant&quot;</span>,</span><br><span class="line">        <span class="string">&quot;libraryDirectory&quot;</span>: <span class="string">&quot;es&quot;</span>,</span><br><span class="line">        <span class="string">&quot;style&quot;</span>: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>单文件组件引用</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;NavBar&gt;</span><br><span class="line">    &lt;template #left&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;Icon</span><br><span class="line">          name=&quot;arrow-left&quot;</span><br><span class="line">          size=&quot;20&quot;</span><br><span class="line">          color=&quot;#000&quot;</span><br><span class="line">          class=&quot;navbar_arrow_left&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">        &lt;span class=&quot;navbar_title&quot;&gt;123&lt;/span&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">  &lt;/NavBar&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; NavBar, Icon &#125; from &quot;vant&quot;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.navbar_arrow_left &#123;</span><br><span class="line">  font-weight: bold;</span><br><span class="line">  margin-right: 10px;</span><br><span class="line">  -webkit-tap-highlight-color: transparent;</span><br><span class="line">&#125;</span><br><span class="line">.navbar_title &#123;</span><br><span class="line">  font-size: 20px;</span><br><span class="line">  font-weight: bold;</span><br><span class="line">  -webkit-tap-highlight-color: transparent;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h4 id="项目-package-json"><a href="#项目-package-json" class="headerlink" title="项目 package.json"></a>项目 package.json</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vue3-project&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;private&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;serve&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vue-cli-service serve&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vue-cli-service build&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;lint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vue-cli-service lint&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;prettier&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prettier --write .&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;prepare&quot;</span><span class="punctuation">:</span> <span class="string">&quot;husky install&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;commit&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cz&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@vant/use&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.3.6&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;axios&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.27.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;core-js&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.8.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;normalize.css&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^8.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vant&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.0.0-alpha.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.2.13&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vue-router&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.0.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vuex&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.0.0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;devDependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@commitlint/cli&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^16.2.4&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@commitlint/config-conventional&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^16.2.4&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@typescript-eslint/eslint-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.4.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@typescript-eslint/parser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.4.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@vue/cli-plugin-babel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;~5.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@vue/cli-plugin-eslint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;~5.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@vue/cli-plugin-router&quot;</span><span class="punctuation">:</span> <span class="string">&quot;~5.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@vue/cli-plugin-typescript&quot;</span><span class="punctuation">:</span> <span class="string">&quot;~5.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@vue/cli-plugin-vuex&quot;</span><span class="punctuation">:</span> <span class="string">&quot;~5.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@vue/cli-service&quot;</span><span class="punctuation">:</span> <span class="string">&quot;~5.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@vue/eslint-config-typescript&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^9.1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;babel-plugin-import&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.13.5&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;commitizen&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.2.4&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;cz-conventional-changelog&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.3.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;eslint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^7.32.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;eslint-config-prettier&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^8.5.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;eslint-plugin-prettier&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;eslint-plugin-vue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^8.0.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;husky&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^7.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;less&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;less-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^8.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;postcss-px-to-viewport-8-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.1.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;prettier&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.6.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;typescript&quot;</span><span class="punctuation">:</span> <span class="string">&quot;~4.5.5&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;config&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;commitizen&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./node_modules/cz-conventional-changelog&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
          <category> 前端 </category>
          
          <category> Vue </category>
          
          <category> Vue3 </category>
          
          <category> TypeScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Vue </tag>
            
            <tag> Vue3 </tag>
            
            <tag> TypeScript </tag>
            
            <tag> 项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>五月十九</title>
      <link href="/posts/8090a01e/"/>
      <url>/posts/8090a01e/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p style="font-size:32px;">周年快乐！💕💕💐💐</p><div style="font-size:32px;background: #8A2387;background: -webkit-linear-gradient(to right, #F27121, #E94057, #8A2387); background: linear-gradient(to right, #F27121, #E94057, #8A2387); -webkit-background-clip: text;color: transparent;"><p>#素敵なお知らせから1年# ​​​</p></div>]]></content>
      
      
      <categories>
          
          <category> 小记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从五月开始的每一天</title>
      <link href="/posts/9c042219/"/>
      <url>/posts/9c042219/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div style="font-size:32px;background: #76b852;background-image: -webkit-linear-gradient(to bottom, #F8FFAE, #43C6AC);background-image: linear-gradient(to bottom, #F8FFAE, #43C6AC);-webkit-background-clip: text;color: transparent;">    初夏，五月！</div><div style="font-size:20px;background: #fffbd5;background: -webkit-linear-gradient(to right, #b20a2c, #fffbd5);background: linear-gradient(to right, #b20a2c, #fffbd5);-webkit-background-clip: text;color: transparent;"><p>努力前行，不负韶华！</p><p style="font-size:25px;color:#000;font-weight:bolder;">0.99 ^ 365 ≈ 0.025517964</p><p style="font-size:25px;color:#000;font-weight:bolder;">1.01 ^ 365 ≈ 37.78343433</p></div><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"2022050101.webp","alt":"","title":""},{"url":"2022050102.webp","alt":"","title":""}]</div>  </div>]]></content>
      
      
      <categories>
          
          <category> 小记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开篇 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人间四月天</title>
      <link href="/posts/4d0f6897/"/>
      <url>/posts/4d0f6897/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div style="font-size:32px;background: #76b852;background-image: -webkit-linear-gradient(to bottom, #F8FFAE, #43C6AC);background-image: linear-gradient(to bottom, #F8FFAE, #43C6AC);-webkit-background-clip: text;color: transparent;">    你好，四月！</div><div style="font-size:20px;background: #67B26F;background: -webkit-linear-gradient(135deg, #4ca2cd, #67B26F);background: linear-gradient(135deg, #4ca2cd, #67B26F); -webkit-background-clip: text;color: transparent;"><p>告别三月，迎来四月！</p><p>但愿工作、生活都顺利一点！</p><p>「Pain is inevitable, Suffering is optional.」</p><p>给自己加油！</p></div><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"2022040103.webp","alt":"","title":""},{"url":"2022040101.webp","alt":"","title":""},{"url":"2022040102.webp","alt":"","title":""}]</div>  </div>]]></content>
      
      
      <categories>
          
          <category> 小记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开篇 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最近听的歌</title>
      <link href="/posts/5ce0c24d/"/>
      <url>/posts/5ce0c24d/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note orange icon-padding flat"><i class="note-icon fas fa-music"></i><p>本周歌单主题：【坦然】 </p></div><div style="font-size:24px;background: #8A2387;background: -webkit-linear-gradient(to right, #F27121, #E94057, #8A2387);-webkit-background-clip: text;color: transparent;">2022-03-13 第12周歌单</div>        <div id="aplayer-cKaFIycf" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;"></div>  <script>  var options = undefined;  options.element = document.getElementById("aplayer-cKaFIycf");  var ap = new APlayer(options);    window.aplayers || (window.aplayers = []);  window.aplayers.push(ap);  </script>]]></content>
      
      
      <categories>
          
          <category> 歌 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 歌单 </tag>
            
            <tag> 歌 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最近听的歌</title>
      <link href="/posts/73200a72/"/>
      <url>/posts/73200a72/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note green icon-padding flat"><i class="note-icon fas fa-music"></i><p>本周歌单主题：【加油】 </p></div><div style="font-size:24px;background: #11998e;background: -webkit-linear-gradient(to right, #38ef7d, #11998e);background: linear-gradient(to right, #38ef7d, #11998e); -webkit-background-clip: text;color: transparent;">2022-02-20 第09周歌单</div>        <div id="aplayer-qFbLLqDS" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;"></div>  <script>  var options = {"narrow":false,"autoplay":false,"showlrc":3,"music":[{"title":"夜空中最亮的星","author":"逃跑计划","url":"http://music.163.com/song/media/outer/url?id=25706282.mp3","pic":"http://p2.music.126.net/Eef2K2KV9dT3XUA6_Ve-Rw==/109951165543196748.jpg","lrc":"夜空中最亮的星.txt"},{"title":"You Raise Me Up","author":"Westlife","url":"http://music.163.com/song/media/outer/url?id=20707713.mp3","pic":"http://p2.music.126.net/ffWmzD86V-IKPe0D1DNSsA==/18348650045094640.jpg","lrc":"You Raise Me Up.txt"},{"title":"给未来的自己","author":"梁静茹","url":"http://music.163.com/song/media/outer/url?id=254135.mp3","pic":"http://p1.music.126.net/pEWXzeKb1YovzqONJrq15w==/109951163403271819.jpg","lrc":"给未来的自己.txt"},{"title":"Halo","author":"Beyoncé","url":"http://music.163.com/song/media/outer/url?id=2188235.mp3","pic":"http://p2.music.126.net/odWx9UReaN7DEEg1wInWRw==/848822976687785.jpg","lrc":"Halo.txt"},{"title":"梦想天空分外蓝","author":"陈奕迅","url":"http://music.163.com/song/media/outer/url?id=25638273.mp3","pic":"http://p2.music.126.net/y1hkRJZ5UpNj_K2NLO8AKg==/831230790638810.jpg","lrc":"梦想天空分外蓝.txt"},{"title":"我是一只小小鸟","author":"赵传","url":"http://music.163.com/song/media/outer/url?id=189259.mp3","pic":"http://p1.music.126.net/zGZz2ftZUgXMumJXs4-PYw==/109951164931755501.jpg","lrc":"我是一只小小鸟.txt"}]};  options.element = document.getElementById("aplayer-qFbLLqDS");  var ap = new APlayer(options);    window.aplayers || (window.aplayers = []);  window.aplayers.push(ap);  </script>]]></content>
      
      
      <categories>
          
          <category> 歌 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 歌单 </tag>
            
            <tag> 歌 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最近听的歌</title>
      <link href="/posts/05f551c3/"/>
      <url>/posts/05f551c3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note orange icon-padding flat"><i class="note-icon fas fa-music"></i><p>本周歌单主题：【意难平】 </p></div><div style="font-size:24px;background: #56CCF2;background: -webkit-linear-gradient(to right, #2F80ED, #56CCF2);background: linear-gradient(to right, #2F80ED, #56CCF2);-webkit-background-clip: text;color: transparent;">2022-02-13 第08周歌单</div>        <div id="aplayer-gitOqCWW" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;"></div>  <script>  var options = {"narrow":false,"autoplay":false,"showlrc":3,"music":[{"title":"意难平","author":"Ayo_LvLv","url":"http://music.163.com/song/media/outer/url?id=1318939045.mp3","pic":"http://p2.music.126.net/SJ4O91qA2rts9WxiC2eYAA==/109951163612689843.jpg","lrc":"意难平.txt"},{"title":"空白格","author":"杨宗纬","url":"http://music.163.com/song/media/outer/url?id=25714352.mp3","pic":"http://p1.music.126.net/s2rrkEZ6S7UVAJI-D1M4lA==/2258396883454110.jpg","lrc":"空白格.txt"},{"title":"晚风","author":"陈婧霏","url":"http://music.163.com/song/media/outer/url?id=1299326404.mp3","pic":"http://p1.music.126.net/VcC2jFGS7isNX2vhUNNuzw==/109951163443390403.jpg","lrc":"晚风.txt"},{"title":"人来人往","author":"陈奕迅","url":"http://music.163.com/song/media/outer/url?id=1897927505.mp3","pic":"http://p2.music.126.net/SIVCr4FhcqiTmNhuVzccEQ==/109951166656400800.jpg","lrc":"人来人往.txt"},{"title":"原谅不美好","author":"郁可唯","url":"http://music.163.com/song/media/outer/url?id=28606750.mp3","pic":"http://p2.music.126.net/nXk-Xxhd_hUk6T4qULaltw==/109951163188722491.jpg","lrc":"原谅不美好.txt"}]};  options.element = document.getElementById("aplayer-gitOqCWW");  var ap = new APlayer(options);    window.aplayers || (window.aplayers = []);  window.aplayers.push(ap);  </script>]]></content>
      
      
      <categories>
          
          <category> 歌 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 歌单 </tag>
            
            <tag> 歌 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最近听的歌</title>
      <link href="/posts/911ef97b/"/>
      <url>/posts/911ef97b/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note blue icon-padding flat"><i class="note-icon fas fa-music"></i><p>本周歌单主题：【春晚】【这世界那么多人】 </p></div><blockquote><p>莫文蔚：这世界那么多人，他令我难舍难忘；<br>林志炫：这世界那么多人，他与我已成过往；<br>周深：这世界那么多人，他在记忆中放光；<br>韩红：这世界那么多人，他们给予我力量；<br>— 知乎网友 <a href="https://www.zhihu.com/people/chang-yan-dao-71-12">loading</a></p></blockquote><div style="font-size:24px;background: #DA4453;background: -webkit-linear-gradient(to bottom, #ed213a, #93291e);background: linear-gradient(to bottom, #ed213a, #93291e);-webkit-background-clip: text;color: transparent;">2022-01-30 第06周歌单</div>        <div id="aplayer-HKCkumSU" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;"></div>  <script>  var options = {"narrow":false,"autoplay":false,"showlrc":3,"music":[{"title":"这世界那么多人","author":"莫文蔚","url":"http://music.163.com/song/media/outer/url?id=1842025914.mp3","pic":"http://p2.music.126.net/LOTxqRjFm03VJEOHJbUqMw==/109951165944804127.jpg","lrc":"这世界那么多人.txt"},{"title":"这世界那么多人","author":"林志炫","url":"http://music.163.com/song/media/outer/url?id=1911863459.mp3","pic":"http://p2.music.126.net/d55Equeims52whaBJvyAzw==/109951166929995746.jpg","lrc":"这世界那么多人.txt"}]};  options.element = document.getElementById("aplayer-HKCkumSU");  var ap = new APlayer(options);    window.aplayers || (window.aplayers = []);  window.aplayers.push(ap);  </script>]]></content>
      
      
      <categories>
          
          <category> 歌 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 歌单 </tag>
            
            <tag> 歌 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最近听的歌</title>
      <link href="/posts/d45d67b5/"/>
      <url>/posts/d45d67b5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note blue icon-padding flat"><i class="note-icon fas fa-music"></i><p>本周歌单主题：【再见】</p></div><div style="font-size:24px;background: #DA4453;background: -webkit-linear-gradient(to right, #89216B, #DA4453);background: linear-gradient(to right, #89216B, #DA4453);-webkit-background-clip: text;color: transparent;">2022-01-23 第05周歌单</div>        <div id="aplayer-ICTNmgyU" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;"></div>  <script>  var options = {"narrow":false,"autoplay":false,"showlrc":3,"music":[{"title":"好久不见","author":"陈奕迅","url":"http://music.163.com/song/media/outer/url?id=65538.mp3","pic":"http://p2.music.126.net/o_OjL_NZNoeog9fIjBXAyw==/18782957139233959.jpg","lrc":"好久不见.txt"},{"title":"See You Again","author":"Wiz Khalifa / Charlie Puth","url":"http://music.163.com/song/media/outer/url?id=1313070401.mp3","pic":"http://p2.music.126.net/lG08Egmf9h2LXHz6zLre0g==/109951163571387761.jpg","lrc":"See You Again.txt"},{"title":"半句再见","author":"孙燕姿","url":"http://music.163.com/song/media/outer/url?id=548556869.mp3","pic":"http://p2.music.126.net/lLe5qRI7G9UV1NTEEvLa-g==/109951166155142333.jpg","lrc":"半句再见.txt"},{"title":"再见","author":"张震岳","url":"http://music.163.com/song/media/outer/url?id=185726.mp3","pic":"http://p2.music.126.net/P1LUZnbCGK13toE1-22idA==/109951165621404244.jpg","lrc":"再见-张震岳.txt"},{"title":"再见","author":"G.E.M.邓紫棋","url":"http://music.163.com/song/media/outer/url?id=36024806.mp3","pic":"http://p1.music.126.net/kVwk6b8Qdya8oDyGDcyAVA==/1364493930777368.jpg","lrc":"再见-邓紫棋.txt"},{"title":"再见二丁目","author":"杨千嬅","url":"http://music.163.com/song/media/outer/url?id=316938.mp3","pic":"http://p1.music.126.net/afjQwekhKMBiLOOQz56TLA==/7836219371362214.jpg","lrc":"再见二丁目.txt"},{"title":"讲不出再见","author":"谭咏麟","url":"http://music.163.com/song/media/outer/url?id=152392.mp3","pic":"http://p2.music.126.net/Rt4pGy3rNL-OQ_3w6CSPmA==/109951165566447762.jpg","lrc":"讲不出再见.txt"},{"title":"在，也不见","author":"孙燕姿","url":"http://music.163.com/song/media/outer/url?id=408212737.mp3","pic":"http://p2.music.126.net/DVFRGabbYQ88SdlXNQP5xw==/109951165992343715.jpg","lrc":"在，也不见.txt"}]};  options.element = document.getElementById("aplayer-ICTNmgyU");  var ap = new APlayer(options);    window.aplayers || (window.aplayers = []);  window.aplayers.push(ap);  </script>]]></content>
      
      
      <categories>
          
          <category> 歌 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 歌单 </tag>
            
            <tag> 歌 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly播放音乐</title>
      <link href="/posts/2cefc566/"/>
      <url>/posts/2cefc566/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note primary flat"><p>本文方法只在相关版本下测试使用，未做全面测试，也不保证其他版本可用。</p></div><div class="note info [no-icon] flat"><p>相关版本说明：<br><a href="https://hexo.io/">hexo</a>：6.0.0<br><a href="https://github.com/jerryc127/hexo-theme-butterfly">hexo-theme-butterfly</a>：4.0.1<br><a href="https://github.com/MoePlayer/hexo-tag-aplayer">hexo-tag-aplayer</a>：3.0.4</p></div><hr><h2 id="Butterfly-播放音乐"><a href="#Butterfly-播放音乐" class="headerlink" title="Butterfly 播放音乐"></a>Butterfly 播放音乐</h2><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><ul><li><p>在 hexo 根目录安装 <a href="https://github.com/MoePlayer/hexo-tag-aplayer">hexo-tag-aplayer</a></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install <span class="literal">--save</span> hexo<span class="literal">-tag-aplayer</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><ul><li><p>直接在需要插入音乐的 post 网页中 Front-matter 中添加</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aplayer: true</span><br></pre></td></tr></table></figure></li></ul><h3 id="插入音乐"><a href="#插入音乐" class="headerlink" title="插入音乐"></a>插入音乐</h3><ul><li><p>单曲</p><ul><li><p>aplayer 自定义方法</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayer &quot;Lemon&quot; &quot;米津玄師&quot; &quot;http://music.163.com/song/media/outer/url?id=536622304.mp3&quot; &quot;http://p1.music.126.net/jtPZRUFrSS-nRCjW<span class="emphasis">_LYowQ==/109951166521931227.jpg&quot; &quot;lrc:Lemon.txt&quot; %&#125;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>歌单</p><ul><li><p>aplayer 自定义方法</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayerlist %&#125;</span><br><span class="line">&#123;</span><br><span class="line">&quot;showlrc&quot;: 3,</span><br><span class="line">&quot;music&quot;: [</span><br><span class="line">&#123;</span><br><span class="line">&quot;title&quot;: &quot;Lemon&quot;,</span><br><span class="line">&quot;author&quot;: &quot;米津玄師&quot;,</span><br><span class="line">&quot;url&quot;: &quot;http://music.163.com/song/media/outer/url?id=536622304.mp3&quot;,</span><br><span class="line">&quot;pic&quot;: &quot;http://p1.music.126.net/jtPZRUFrSS-nRCjW<span class="emphasis">_LYowQ==/109951166521931227.jpg&quot;,</span></span><br><span class="line"><span class="emphasis">&quot;lrc&quot;: &quot;Lemon.txt&quot;</span></span><br><span class="line"><span class="emphasis">&#125;</span></span><br><span class="line"><span class="emphasis">]</span></span><br><span class="line"><span class="emphasis">&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% endaplayerlist %&#125;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><ul><li><p>音乐无法播放</p><ul><li><p>使用本地 mp3，需要在<a href="https://hexo.io/zh-cn/docs/asset-folders#content-inner">资源文件夹</a>加入 mp3</p></li><li><p>使用网络 url 引入 mp3 资源</p><ul><li><p>网易云音乐 mp3 API 链接</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://music.163.com/song/media/outer/url?id=歌曲ID.mp3</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>单曲歌词无法显示</p><ul><li>使用本地歌词，需要在<a href="https://hexo.io/zh-cn/docs/asset-folders#content-inner">资源文件夹</a>加入歌词.txt</li></ul></li><li><p>歌单歌词无法显示</p><ul><li><p>使用本地歌词，需要在<a href="https://hexo.io/zh-cn/docs/asset-folders#content-inner">资源文件夹</a>加入歌词.txt</p></li><li><p>需要注意相关配置,注意这个 <strong>showlrc</strong>,需要配置</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayerlist %&#125;</span><br><span class="line">&#123;</span><br><span class="line">&quot;showlrc&quot;: 3, //属性值有 1,2,3</span><br><span class="line">&quot;music&quot;: [</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">&#123;% endaplayerlist %&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
          <category> butterfly </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最近听的歌</title>
      <link href="/posts/7c955a3a/"/>
      <url>/posts/7c955a3a/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div style="font-size:24px;background-image: linear-gradient(to right, #6dba82 0, #07b39b 15%, #1098ad 30%, #5073b8 44%, #a166ab 58%, #ef4e7b 72%, #f37055 86%, #f79533 100%);-webkit-background-clip: text;color: transparent;">2022-01-16 第04周歌单</div>        <div id="aplayer-dQrdNTKh" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;"></div>  <script>  var options = {"narrow":false,"autoplay":false,"showlrc":3,"music":[{"title":"Let Me Down Slowly","author":"Beth","url":"http://music.163.com/song/media/outer/url?id=1313591404.mp3","pic":"http://p1.music.126.net/2-l6KNTqA62nLdGxSvkoZg==/109951163575046014.jpg","lrc":"Let Me Down Slowly.txt"},{"title":"胡广生","author":"任素汐","url":"http://music.163.com/song/media/outer/url?id=1325905146.mp3","pic":"http://p1.music.126.net/fG0T1hnM9EEmkYSo4Ey97A==/109951163669946483.jpg","lrc":"胡广生.txt"},{"title":"Call You Tonight","author":"Johnta Austin","url":"http://music.163.com/song/media/outer/url?id=1571835.mp3","pic":"http://p1.music.126.net/i_W0AmGXPTjZR-l6N29r_g==/1774611767230481.jpg","lrc":"Call You Tonight.txt"},{"title":"君に夢中","author":"宇多田ヒカル","url":"http://music.163.com/song/media/outer/url?id=1893335808.mp3","pic":"http://p1.music.126.net/331N9DIR7_YLUHm7Iag9Ng==/109951166600891152.jpg","lrc":"君に夢中.txt"},{"title":"涙そうそう","author":"夏川りみ","url":"http://music.163.com/song/media/outer/url?id=29017261.mp3","pic":"http://p1.music.126.net/DrCKONaT3xNT_pDb_jMl2A==/6647647301645021.jpg","lrc":"涙そうそう.txt"},{"title":"Lemon","author":"米津玄師","url":"http://music.163.com/song/media/outer/url?id=536622304.mp3","pic":"http://p1.music.126.net/jtPZRUFrSS-nRCjW_LYowQ==/109951166521931227.jpg","lrc":"Lemon.txt"}]};  options.element = document.getElementById("aplayer-dQrdNTKh");  var ap = new APlayer(options);    window.aplayers || (window.aplayers = []);  window.aplayers.push(ap);  </script>]]></content>
      
      
      <categories>
          
          <category> 歌 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 歌单 </tag>
            
            <tag> 歌 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>该何处安放</title>
      <link href="/posts/55fe0078/"/>
      <url>/posts/55fe0078/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>《逃避虽可耻但有用》</p></blockquote><div style="font-size:24px;"> 承受 </div><p style="font-size:16px;">人总是忍不住回忆往昔，特别是恋爱方面。当自己对对方产生爱意的时候，如果没有得到对等的回应，就会变得不安。但假如没有爱情，但拥有与之相抵的事物也是可以接受的，比如钱、安定的生活之类的。但是，那份感情有时会强烈到难以忍受的地步，如果只是单方面在承受这份感情，就会注定结束。</p><img src="/posts/55fe0078/tc.webp" class=""><blockquote><p>《四重奏》</p></blockquote><div style="font-size:24px;"> 何处安放 </div><p style="font-size:16px;">有一种暗恋 是我喜欢的人有喜欢的人了但是那个人也是我喜欢的人所以我希望他们能有好结果"那你喜欢的心情该要何去何从呢，不会不知道该放哪儿才好吗？"我喜欢的心情就在那里闲晃吧"在那里闲晃？"偶尔会有想要稍微努力一下的时候吧像是要把地址写成笔直的一条线要搭往下的电扶梯的时候或是注意公车不要搭错边之类的还有要把鸡蛋放进购物篮的时候吗穿着白色衣服 吃意大利肉酱面的时候像这种时候啊我就能稍微努力一下是像这样忘记自己喜欢着的喜欢很怪吗很耀眼呢很漂亮呢<p>我喜欢的人幸福就好了<br>然后 我带着这样对他的喜欢<br>只要在要加油努力的时候<br>这样的喜欢偷偷的出现一下就好了<br>想着他笑着对我说加油的样子 什么困难也难不倒我了吧<br>还有要努力变得跟他一样优秀的时候<br>想着他 就会把事情做的更好了<br>这样的喜欢 喜欢到忘记自己忘记对他的喜欢<br>很耀眼呀<br>那为什么不说出来呢<br>我说了呀<br>对你的爱意藏不住的时候<br>害怕表白失败的时候<br>带着开玩笑的语气这样试探着你</p><p>我喜欢你！<br>谢谢！<br>我开玩笑的！</p></p><img src="/posts/55fe0078/scz.webp" class="">]]></content>
      
      
      <categories>
          
          <category> 影视 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日剧 </tag>
            
            <tag> 台词 </tag>
            
            <tag> 逃避虽可耻但有用 </tag>
            
            <tag> 四重奏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>想要被需要</title>
      <link href="/posts/63103097/"/>
      <url>/posts/63103097/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>《逃避虽可耻但有用》</p></blockquote><div style="font-size:24px;"> 想要 </div><p style="font-size:16px;">想要，被某个人选择，你待在这里就很好，想要被这样认可，这算不算一种奢望呢？谁都想要被需要，但是却天不随人愿，一点点放弃自己的感情，想要哭泣却一笑了之，可能，就是靠这样来生存！</p><img src="/posts/63103097/tc1.webp" class=""> <img src="/posts/63103097/tc2.webp" class=""><img src="/posts/63103097/tc3.webp" class=""><img src="/posts/63103097/tc4.webp" class="">]]></content>
      
      
      <categories>
          
          <category> 影视 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日剧 </tag>
            
            <tag> 台词 </tag>
            
            <tag> 逃避虽可耻但有用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>岛</title>
      <link href="/posts/e1464daf/"/>
      <url>/posts/e1464daf/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div style="font-size:24px;"> 世界的终点在哪里？</div><h2 id="冰岛"><a href="#冰岛" class="headerlink" title="冰岛"></a>冰岛</h2><h3 id="极光，大西洋和北冰洋交汇处。"><a href="#极光，大西洋和北冰洋交汇处。" class="headerlink" title="极光，大西洋和北冰洋交汇处。"></a>极光，大西洋和北冰洋交汇处。</h3><img src="/posts/e1464daf/Iceland.webp" class=""><h2 id="基里巴斯"><a href="#基里巴斯" class="headerlink" title="基里巴斯"></a>基里巴斯</h2><h3 id="世界上唯一地跨赤道而又横过国际日期变更线交叉点上的国家-全球一天当中最早开始的国家。"><a href="#世界上唯一地跨赤道而又横过国际日期变更线交叉点上的国家-全球一天当中最早开始的国家。" class="headerlink" title="世界上唯一地跨赤道而又横过国际日期变更线交叉点上的国家,全球一天当中最早开始的国家。"></a>世界上唯一地跨赤道而又横过国际日期变更线交叉点上的国家,全球一天当中最早开始的国家。</h3><img src="/posts/e1464daf/Kiribati.webp" class=""><h2 id="合恩角"><a href="#合恩角" class="headerlink" title="合恩角"></a>合恩角</h2><h3 id="智利最南部，南美洲最南端，太平洋与大西洋分界线。"><a href="#智利最南部，南美洲最南端，太平洋与大西洋分界线。" class="headerlink" title="智利最南部，南美洲最南端，太平洋与大西洋分界线。"></a>智利最南部，南美洲最南端，太平洋与大西洋分界线。</h3><img src="/posts/e1464daf/Cape-Horn.webp" class=""><h2 id="乌斯怀亚"><a href="#乌斯怀亚" class="headerlink" title="乌斯怀亚"></a>乌斯怀亚</h2><h3 id="阿根廷，世界最南的城市。"><a href="#阿根廷，世界最南的城市。" class="headerlink" title="阿根廷，世界最南的城市。"></a>阿根廷，世界最南的城市。</h3><img src="/posts/e1464daf/Ushuaia.webp" class="">]]></content>
      
      
      <categories>
          
          <category> 旅行 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 旅行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的电影2021</title>
      <link href="/posts/75b16dc0/"/>
      <url>/posts/75b16dc0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div style="font-size:31px;"> 我的电影 2021</div><p style="font-size:16px;">2021，在光与影之间我到底收获些什么？我不停的思考……唯有感恩和感谢！继续前行。2021，我的电影之旅如下：</p><img src="/posts/75b16dc0/mymovies2021.webp" class="" title="我的电影2021">]]></content>
      
      
      <categories>
          
          <category> 影视 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电影 </tag>
            
            <tag> 年终总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>努力！奋斗！</title>
      <link href="/posts/d0b90da0/"/>
      <url>/posts/d0b90da0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div style="font-size:32px;">努力！奋斗！</div>]]></content>
      
      
      <categories>
          
          <category> 小记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 励志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你好2022</title>
      <link href="/posts/65151038/"/>
      <url>/posts/65151038/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div style="font-size:32px;">你好，2022！</div>]]></content>
      
      
      <categories>
          
          <category> 小记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开篇 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你好世界</title>
      <link href="/posts/af7317c9/"/>
      <url>/posts/af7317c9/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div style="font-size:32px;">你好哇！世界！</div>]]></content>
      
      
      <categories>
          
          <category> 小记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开篇 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
